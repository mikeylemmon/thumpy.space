/**
 * WebMidi.js v3.0.0-alpha.2
 * A JavaScript library to kickstart your MIDI projects
 * https://webmidijs.org
 *
 * This build was generated on June 17th 2020.
 *
 *
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2015-2020, Jean-Philippe Côté
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software
 * and associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute,
 * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

class e{constructor(e=!1){this.eventMap={},this.eventsSuspended=1==e}addListener(n,r,a={}){if("string"==typeof n&&n.length<1||n instanceof String&&n.length<1||"string"!=typeof n&&!(n instanceof String)&&n!==e.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if("function"!=typeof r)throw new TypeError("The callback must be a function.");const s=new t(n,this,r,a);return this.eventMap[n]||(this.eventMap[n]=[]),a.prepend?this.eventMap[n].unshift(s):this.eventMap[n].push(s),s}addOneTimeListener(e,t,n={}){n.remaining=1,this.addListener(e,t,n)}static get ANY_EVENT(){return Symbol.for("Any event")}hasListener(n,r){return void 0===n?!!(this.eventMap[e.ANY_EVENT]&&this.eventMap[e.ANY_EVENT].length>0)||Object.entries(this.eventMap).some(([,e])=>e.length>0):!!(this.eventMap[n]&&this.eventMap[n].length>0)&&(r instanceof t?this.eventMap[n].filter(e=>e===r).length>0:"function"==typeof r?this.eventMap[n].filter(e=>e.callback===r).length>0:null==r)}get eventNames(){return Object.keys(this.eventMap)}getListeners(e){return this.eventMap[e]||[]}suspendEvent(e){this.getListeners(e).forEach(e=>{e.suspended=!0})}unsuspendEvent(e){this.getListeners(e).forEach(e=>{e.suspended=!1})}getListenerCount(e){return this.getListeners(e).length}emit(t,...n){if("string"!=typeof t&&!(t instanceof String))throw new TypeError("The 'event' parameter must be a string.");if(this.eventsSuspended)return;let r=[],a=this.eventMap[e.ANY_EVENT]||[];return this.eventMap[t]&&(a=a.concat(this.eventMap[t])),a.forEach(e=>{if(e.suspended)return;let t=[...n];Array.isArray(e.arguments)&&(t=t.concat(e.arguments)),e.remaining>0&&(r.push(e.callback.apply(e.context,t)),e.count++),--e.remaining<1&&e.remove()}),r}removeListener(e,t,n={}){if(void 0===e)return void(this.eventMap={});if(!this.eventMap[e])return;let r=this.eventMap[e].filter(e=>t&&e.callback!==t||n.remaining&&n.remaining!==e.remaining||n.context&&n.context!==e.context);r.length?this.eventMap[e]=r:delete this.eventMap[e]}async waitFor(e,t={}){return t.duration=parseInt(t.duration),(isNaN(t.duration)||t.duration<=0)&&(t.duration=1/0),new Promise((n,r)=>{let a,s=this.addListener(e,()=>{clearTimeout(a),n()},{remaining:1});t.duration!==1/0&&(a=setTimeout(()=>{s.remove(),r("The duration expired before the event was emitted.")},t.duration))})}get eventCount(){return Object.keys(this.eventMap).length}}class t{constructor(t,n,r,a={}){if("string"!=typeof t&&!(t instanceof String)&&t!==e.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(!n)throw new ReferenceError("The 'target' parameter is mandatory.");if("function"!=typeof r)throw new TypeError("The 'callback' must be a function.");void 0===a.arguments||Array.isArray(a.arguments)||(a.arguments=[a.arguments]),(a=Object.assign({context:n,remaining:1/0,arguments:void 0,duration:1/0},a)).duration!==1/0&&setTimeout(()=>this.remove(),a.duration),this.event=t,this.target=n,this.callback=r,this.context=a.context,this.remaining=parseInt(a.remaining)>=1?parseInt(a.remaining):1/0,this.count=0,this.arguments=a.arguments,this.suspended=!1}remove(){this.target.removeListener(this.event,this.callback,{context:this.context,remaining:this.remaining})}}class n extends e{constructor(e,t){super(),this.input=e,this.number=t}destroy(){this.input=null,this.number=null,this.removeListener()}_parseEvent(e){let t=null;e.data[0]!==o.MIDI_SYSTEM_MESSAGES.sysex&&(t=e.data.slice(1));let n={target:this,data:Array.from(e.data),rawData:e.data,statusByte:e.data[0],dataBytes:t,timestamp:e.timeStamp,type:"midimessage"};this.emit("midimessage",n),this._parseEventForStandardMessages(e)}getStructuredMidiMessage(e){return{command:e[0]>>4,data1:e.length>1?e[1]:void 0,data2:e.length>2?e[2]:void 0}}_parseEventForStandardMessages(e){let{command:t,data1:n,data2:r}=this.getStructuredMidiMessage(e.data),a={target:this,data:Array.from(e.data),rawData:e.data,timestamp:e.timeStamp};t===o.MIDI_CHANNEL_VOICE_MESSAGES.noteoff||t===o.MIDI_CHANNEL_VOICE_MESSAGES.noteon&&0===r?(a.type="noteoff",a.note=new i(n,{rawRelease:r}),a.release=a.note.release,a.rawRelease=a.note.rawRelease):t===o.MIDI_CHANNEL_VOICE_MESSAGES.noteon?(a.type="noteon",a.note=new i(n,{rawAttack:r}),a.attack=a.note.attack,a.rawAttack=a.note.rawAttack):t===o.MIDI_CHANNEL_VOICE_MESSAGES.keyaftertouch?(a.type="keyaftertouch",a.note=new i(n),a.value=r/127,a.rawValue=r):t===o.MIDI_CHANNEL_VOICE_MESSAGES.controlchange&&n>=0&&n<=119?(a.type="controlchange",a.controller={number:n,name:this.getCcNameByNumber(n)},a.value=r/127,a.rawValue=r):t===o.MIDI_CHANNEL_VOICE_MESSAGES.channelmode&&n>=120&&n<=127?(a.type="channelmode",a.controller={number:n,name:this.getChannelModeByNumber(n)},a.value=r,this._parseChannelModeMessage(e)):t===o.MIDI_CHANNEL_VOICE_MESSAGES.programchange?(a.type="programchange",a.value=n+1,a.rawValue=n):t===o.MIDI_CHANNEL_VOICE_MESSAGES.channelaftertouch?(a.type="channelaftertouch",a.value=n/127,a.rawValue=n):t===o.MIDI_CHANNEL_VOICE_MESSAGES.pitchbend?(a.type="pitchbend",a.value=((r<<7)+n-8192)/8192,a.rawValue=(r<<7)+n):a.type="unknownmessage",this.emit(a.type,a)}getChannelModeByNumber(e){if(o.validation&&(e=Math.floor(e)),!(e>=120&&e<=127))return!1;for(let t in o.MIDI_CHANNEL_MODE_MESSAGES)if(o.MIDI_CHANNEL_MODE_MESSAGES.hasOwnProperty(t)&&e===o.MIDI_CHANNEL_MODE_MESSAGES[t])return t}_parseChannelModeMessage(e){let t,n;e.data.length>1&&(t=e.data[1],n=e.data.length>2?e.data[2]:void 0);let r={target:this,data:Array.from(e.data),rawData:e.data,timestamp:e.timeStamp,type:this.getChannelModeByNumber(t)};"localcontrol"===r.type&&(r.value=127===n),"omnimodeon"===r.type?(r.type="omnimode",r.value=!0):"omnimodeoff"===r.type&&(r.type="omnimode",r.value=!1),"monomodeon"===r.type?(r.type="monomode",r.value=!0):"polymodeon"===r.type&&(r.type="monomode",r.value=!1),this.emit(r.type,r)}getCcNameByNumber(e){if(o.validation&&!((e=parseInt(e))>=0&&e<=119))throw new RangeError("Invalid control change number.");for(let t in o.MIDI_CONTROL_CHANGE_MESSAGES)if(o.MIDI_CONTROL_CHANGE_MESSAGES.hasOwnProperty(t)&&e===o.MIDI_CONTROL_CHANGE_MESSAGES[t])return t;return!1}}class r extends e{constructor(e){super(),this._midiInput=e,this.channels=[];for(let e=1;e<=16;e++)this.channels[e]=new n(this,e);this._midiInput.onstatechange=this._onStateChange.bind(this),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._midiInput.onstatechange=null,this._midiInput.onmidimessage=null,await this.close(),this._midiInput=null}_onStateChange(e){let t={timestamp:o.time,target:this};"open"===e.port.connection?(t.type="opened",this.emit("opened",t)):"closed"===e.port.connection&&"connected"===e.port.state?(t.type="closed",this.emit("closed",t)):"closed"===e.port.connection&&"disconnected"===e.port.state?(t.type="disconnected",t.target={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit("disconnected",t)):"pending"===e.port.connection&&"disconnected"===e.port.state||console.warn("This statechange event was not caught: ",e.port.connection,e.port.state)}_onMidiMessage(e){let t=null;e.data[0]!==o.MIDI_SYSTEM_MESSAGES.sysex&&(t=e.data.slice(1));let n={target:this,data:Array.from(e.data),rawData:e.data,statusByte:e.data[0],dataBytes:t,timestamp:e.timeStamp,type:"midimessage"};if(this.emit("midimessage",n),e.data[0]<240){let t=1+(15&e.data[0]);this.channels[t]._parseEvent(e)}else e.data[0]<=255&&this._parseEvent(e)}_parseEvent(e){let t=e.data[0];var n={target:this,data:Array.from(e.data),rawData:e.data,timestamp:e.timeStamp};t===o.MIDI_SYSTEM_MESSAGES.sysex?n.type="sysex":t===o.MIDI_SYSTEM_MESSAGES.timecode?n.type="timecode":t===o.MIDI_SYSTEM_MESSAGES.songposition?n.type="songposition":t===o.MIDI_SYSTEM_MESSAGES.songselect?(n.type="songselect",n.song=e.data[1]+1):t===o.MIDI_SYSTEM_MESSAGES.tunerequest?n.type="tunerequest":t===o.MIDI_SYSTEM_MESSAGES.clock?n.type="clock":t===o.MIDI_SYSTEM_MESSAGES.start?n.type="start":t===o.MIDI_SYSTEM_MESSAGES.continue?n.type="continue":t===o.MIDI_SYSTEM_MESSAGES.stop?n.type="stop":t===o.MIDI_SYSTEM_MESSAGES.activesensing?n.type="activesensing":t===o.MIDI_SYSTEM_MESSAGES.reset?n.type="reset":n.type="unknownmidimessage",this.emit(n.type,n)}async open(){try{return await this._midiInput.open(),Promise.resolve(this)}catch(e){return Promise.reject(e)}}async close(){return this._midiInput?this._midiInput.close():Promise.resolve()}getChannelModeByNumber(){o.validation&&console.warn("The 'getChannelModeByNumber()' method has been moved to the 'InputChannel' class.")}addListener(e,t,n){if(o.validation){if("function"==typeof n){let e=null!=t?[].concat(t):void 0;t=n,n={channels:e}}if(void 0!==o.MIDI_CHANNEL_VOICE_MESSAGES[e]&&void 0===n.channels)throw new Error("For channel-specific events, 'options.channels' must be defined.")}let r=[];return void 0===o.MIDI_CHANNEL_VOICE_MESSAGES[e]?r.push(super.addListener(e,t,n)):o.sanitizeChannels(n.channels).forEach(a=>{r.push(this.channels[a].addListener(e,t,n))}),r}addOneTimeListener(e,t,n={}){return n.remaining=1,this.addListener(e,t,n)}on(e,t,n,r){return this.addListener(e,t,n,r)}hasListener(e,t,n={}){if(o.validation){if("function"==typeof n){let e=[].concat(t);t=n,n={channels:e}}if(void 0!==o.MIDI_CHANNEL_VOICE_MESSAGES[e]&&void 0===n.channels)throw new Error("For channel-specific events, 'options.channels' must be defined.")}return void 0!==o.MIDI_CHANNEL_VOICE_MESSAGES[e]?o.sanitizeChannels(n.channels).every(n=>this.channels[n].hasListener(e,t)):super.hasListener(e,t)}removeListener(e,t,n={}){if(o.validation&&"function"==typeof n){let e=[].concat(t);t=n,n={channels:e}}if(void 0===n.channels&&(n.channels=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),null==e)return o.sanitizeChannels(n.channels).forEach(e=>this.channels[e].removeListener()),super.removeListener();void 0!==o.MIDI_CHANNEL_VOICE_MESSAGES[e]?o.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].removeListener(e,t,n)}):super.removeListener(e,t,n)}get name(){return this._midiInput.name}get id(){return this._midiInput.id}get connection(){return this._midiInput.connection}get manufacturer(){return this._midiInput.manufacturer}get state(){return this._midiInput.state}get type(){return this._midiInput.type}get nrpnEventsEnabled(){return o.validation&&console.warn("The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class."),!1}}class a extends e{constructor(e,t){super(),this.output=e,this.number=t}destroy(){this.output=null,this.number=null,this.removeListener()}send(e,t=[],n={}){return this.output.send(e,t,n),this}setKeyAftertouch(e,t,n={}){if(o.validation){if(n.useRawValue&&(n.rawValue=n.useRawValue),isNaN(parseFloat(t)))throw new RangeError("Invalid key aftertouch value.");if(n.rawValue){if(!(t>=0&&t<=127&&Number.isInteger(t)))throw new RangeError("Key aftertouch raw value must be an integer between 0 and 127.")}else if(!(t>=0&&t<=1))throw new RangeError("Key aftertouch value must be a float between 0 and 1.")}return n.rawValue||(t=Math.round(127*t)),o.getValidNoteArray(e,n).forEach(e=>{this.send((o.MIDI_CHANNEL_VOICE_MESSAGES.keyaftertouch<<4)+(this.number-1),[e.number,t],o.convertToTimestamp(n.time))}),this}sendControlChange(e,t,n={}){if("string"==typeof e&&(e=o.MIDI_CONTROL_CHANGE_MESSAGES[e]),o.validation){if(void 0===e)throw new TypeError("Control change must be identified with a valid name or an integer between 0 and 119.");if(!Number.isInteger(e)||!(e>=0&&e<=119))throw new TypeError("Control change number must be an integer between 0 and 119.");if(!Number.isInteger(t)||!(t>=0&&t<=127))throw new TypeError("Control change value must be an integer between 0 and 127")}return this.send((o.MIDI_CHANNEL_VOICE_MESSAGES.controlchange<<4)+(this.number-1),[e,t],o.convertToTimestamp(n.time)),this}_selectNonRegisteredParameter(e,t={}){return this.sendControlChange(99,e[0],t),this.sendControlChange(98,e[1],t),this}_deselectRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_deselectNonRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_selectRegisteredParameter(e,t={}){return this.sendControlChange(101,e[0],t),this.sendControlChange(100,e[1],t),this}_setCurrentParameter(e,t={}){return e=[].concat(e),this.sendControlChange(6,e[0],t),e.length<2||this.sendControlChange(38,e[1],t),this}decrementRegisteredParameter(e,t={}){if(Array.isArray(e)||(e=o.MIDI_REGISTERED_PARAMETER[e]),o.validation){if(void 0===e)throw new TypeError("The specified registered parameter is invalid.");let t=!1;if(Object.getOwnPropertyNames(o.MIDI_REGISTERED_PARAMETER).forEach(n=>{o.MIDI_REGISTERED_PARAMETER[n][0]===e[0]&&o.MIDI_REGISTERED_PARAMETER[n][1]===e[1]&&(t=!0)}),!t)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(e,t),this.sendControlChange(97,0,t),this._deselectRegisteredParameter(t),this}incrementRegisteredParameter(e,t={}){if(Array.isArray(e)||(e=o.MIDI_REGISTERED_PARAMETER[e]),o.validation){if(void 0===e)throw new TypeError("The specified registered parameter is invalid.");let t=!1;if(Object.getOwnPropertyNames(o.MIDI_REGISTERED_PARAMETER).forEach(n=>{o.MIDI_REGISTERED_PARAMETER[n][0]===e[0]&&o.MIDI_REGISTERED_PARAMETER[n][1]===e[1]&&(t=!0)}),!t)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(e,t),this.sendControlChange(96,0,t),this._deselectRegisteredParameter(t),this}playNote(e,t={}){if(this.sendNoteOn(e,t),t.duration>0&&isFinite(String(t.duration).trim()||NaN)){let n={time:o.convertToTimestamp(t.time)+t.duration,release:t.release,rawRelease:t.rawRelease};this.sendNoteOff(e,n)}return this}sendNoteOff(e,t={}){if(o.validation){if(null!=t.rawRelease&&!(t.rawRelease>=0&&t.rawRelease<=127))throw new RangeError("The 'rawRelease' option must be an integer between 0 and 127");if(null!=t.release&&!(t.release>=0&&t.release<=1))throw new RangeError("The 'release' option must be an number between 0 and 1");t.rawVelocity&&(t.rawRelease=t.velocity,console.warn("The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.")),t.velocity&&(t.release=t.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let n=64;null!=t.rawRelease?n=t.rawRelease:isNaN(t.release)||(n=Math.round(127*t.release));let r={rawRelease:parseInt(n)};return o.getValidNoteArray(e,r).forEach(e=>{this.send((o.MIDI_CHANNEL_VOICE_MESSAGES.noteoff<<4)+(this.number-1),[e.number,e.rawRelease],o.convertToTimestamp(t.time))}),this}stopNote(e,t={}){return this.sendNoteOff(e,t)}sendNoteOn(e,t={}){if(o.validation){if(null!=t.rawAttack&&!(t.rawAttack>=0&&t.rawAttack<=127))throw new RangeError("The 'rawAttack' option must be an integer between 0 and 127");if(null!=t.attack&&!(t.attack>=0&&t.attack<=1))throw new RangeError("The 'attack' option must be an number between 0 and 1");t.rawVelocity&&(t.rawAttack=t.velocity,t.rawRelease=t.release,console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.")),t.velocity&&(t.attack=t.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let n=64;null!=t.rawAttack?n=t.rawAttack:isNaN(t.attack)||(n=Math.round(127*t.attack));let r={rawAttack:n};return o.getValidNoteArray(e,r).forEach(e=>{this.send((o.MIDI_CHANNEL_VOICE_MESSAGES.noteon<<4)+(this.number-1),[e.number,e.rawAttack],o.convertToTimestamp(t.time))}),this}sendChannelMode(e,t,n={}){if("string"==typeof e&&(e=o.MIDI_CHANNEL_MODE_MESSAGES[e]),o.validation){if(void 0===e)throw new TypeError("Invalid channel mode message name or number.");if(isNaN(e)||!(e>=120&&e<=127))throw new TypeError("Invalid channel mode message number.");if(isNaN(parseInt(t))||t<0||t>127)throw new RangeError("Value must be an integer between 0 and 127.")}return this.send((o.MIDI_CHANNEL_VOICE_MESSAGES.channelmode<<4)+(this.number-1),[e,t],o.convertToTimestamp(n.time)),this}setOmniMode(e,t={}){return void 0===e||e?this.sendChannelMode("omnimodeon",0,t):this.sendChannelMode("omnimodeoff",0,t),this}setChannelAftertouch(e,t={}){if(o.validation){if(isNaN(parseFloat(e)))throw new RangeError("Invalid channel aftertouch value.");if(t.rawValue){if(!(e>=0&&e<=127&&Number.isInteger(e)))throw new RangeError("Channel aftertouch raw value must be an integer between 0 and 127.")}else if(!(e>=0&&e<=1))throw new RangeError("Channel aftertouch value must be a float between 0 and 1.")}return this.send((o.MIDI_CHANNEL_VOICE_MESSAGES.channelaftertouch<<4)+(this.number-1),[Math.round(127*e)],o.convertToTimestamp(t.time)),this}setMasterTuning(e,t={}){if(e=parseFloat(e)||0,o.validation&&!(e>-65&&e<64))throw new RangeError("The value must be a decimal number larger than -65 and smaller than 64.");let n=Math.floor(e)+64,r=e-Math.floor(e);r=Math.round((r+1)/2*16383);let a=r>>7&127,s=127&r;return this.setRegisteredParameter("channelcoarsetuning",n,t),this.setRegisteredParameter("channelfinetuning",[a,s],t),this}setModulationRange(e,t,n={}){if(o.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!(null==t||Number.isInteger(t)&&t>=0&&t<=127))throw new RangeError("If specified, the cents value must be an integer between 0 and 127.")}return t>=0&&t<=127||(t=0),this.setRegisteredParameter("modulationrange",[e,t],n),this}setNonRegisteredParameter(e,t,n={}){if(t=[].concat(t),o.validation){if(!Array.isArray(e)||!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError("The specified NRPN is invalid.");if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The first byte of the NRPN must be between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The second byte of the NRPN must be between 0 and 127.");t.forEach(e=>{if(!(e>=0&&e<=127))throw new RangeError("The data bytes of the NRPN must be between 0 and 127.")})}return this._selectNonRegisteredParameter(e,n),this._setCurrentParameter(t,n),this._deselectNonRegisteredParameter(n),this}setPitchBend(e,t={}){if(o.validation)if(t.rawValue&&Array.isArray(e)){if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The pitch bend LSB must be an integer between 0 and 127.")}else if(t.rawValue&&!Array.isArray(e)){if(!(e>=0&&e<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.")}else{if(isNaN(e)||null===e)throw new RangeError("Invalid pitch bend value.");if(!(e>=-1&&e<=1))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.")}let n=0,r=0;if(t.rawValue&&Array.isArray(e))n=e[0],r=e[1];else if(t.rawValue&&!Array.isArray(e))n=e;else{let t=Math.round((e+1)/2*16383);n=t>>7&127,r=127&t}return this.send((o.MIDI_CHANNEL_VOICE_MESSAGES.pitchbend<<4)+(this.number-1),[r,n],o.convertToTimestamp(t.time)),this}setPitchBendRange(e,t,n={}){if(o.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!Number.isInteger(t)||!(t>=0&&t<=127))throw new RangeError("The cents value must be an integer between 0 and 127.")}return this.setRegisteredParameter("pitchbendrange",[e,t],n),this}setProgram(e,t={}){if(e=parseInt(e)||1,o.validation&&!(e>=1&&e<=128))throw new RangeError("The program number must be between 1 and 128.");return this.send((o.MIDI_CHANNEL_VOICE_MESSAGES.programchange<<4)+(this.number-1),[e-1],o.convertToTimestamp(t.time)),this}setRegisteredParameter(e,t,n={}){if(Array.isArray(e)||(e=o.MIDI_REGISTERED_PARAMETER[e]),o.validation){if(!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError("The specified NRPN is invalid.");if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The first byte of the RPN must be between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The second byte of the RPN must be between 0 and 127.");[].concat(t).forEach(e=>{if(!(e>=0&&e<=127))throw new RangeError("The data bytes of the RPN must be between 0 and 127.")})}return this._selectRegisteredParameter(e,n),this._setCurrentParameter(t,n),this._deselectRegisteredParameter(n),this}setTuningBank(e,t={}){if(o.validation&&(!Number.isInteger(e)||!(e>=1&&e<=128)))throw new RangeError("The tuning bank number must be between 1 and 128.");return this.setRegisteredParameter("tuningbank",e-1,t),this}setTuningProgram(e,t={}){if(o.validation&&(!Number.isInteger(e)||!(e>=1&&e<=128)))throw new RangeError("The tuning program number must be between 1 and 128.");return this.setRegisteredParameter("tuningprogram",e-1,t),this}setLocalControl(e,t={}){return e?this.sendChannelMode("localcontrol",127,t):this.sendChannelMode("localcontrol",0,t)}turnNotesOff(e={}){return this.sendChannelMode("allnotesoff",0,e)}turnSoundOff(e={}){return this.sendChannelMode("allsoundoff",0,e)}resetAllControllers(e={}){return this.sendChannelMode("resetallcontrollers",0,e)}setPolyphonicMode(e,t={}){return"mono"===e?this.sendChannelMode("monomodeon",0,t):this.sendChannelMode("polymodeon",0,t)}}class s extends e{constructor(e){if(super(),o.validation&&(!e||"output"!==e.type))throw new TypeError("The supplied MIDIOutput is invalid.");this._midiOutput=e,this.channels=[];for(let e=1;e<=16;e++)this.channels[e]=new a(this,e);this._midiOutput.onstatechange=this._onStateChange.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._midiOutput.onstatechange=null,await this.close(),this._midiOutput=null}_onStateChange(e){let t={timestamp:o.time};"open"===e.port.connection?(t.type="opened",t.target=this,this.emit("opened",t)):"closed"===e.port.connection&&"connected"===e.port.state?(t.type="closed",t.target=this,this.emit("closed",t)):"closed"===e.port.connection&&"disconnected"===e.port.state?(t.type="disconnected",t.target={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit("disconnected",t)):"pending"===e.port.connection&&"disconnected"===e.port.state||console.warn("This statechange event was not caught:",e.port.connection,e.port.state)}async open(){try{return await this._midiOutput.open(),Promise.resolve(this)}catch(e){return Promise.reject(e)}}async close(){this._midiOutput?await this._midiOutput.close():await Promise.resolve()}send(e,t=[],n={}){if(Array.isArray(t)||(t=[t]),o.validation){if(!(parseInt(e)>=128&&parseInt(e)<=255))throw new RangeError("The status must be an integer between 128 and 255.");t.forEach(e=>{if(e=parseInt(e),isNaN(e))throw new TypeError("Data bytes must be integers.");if(!(parseInt(e)>=0&&parseInt(e)<=255))throw new RangeError("The data bytes must be integers between 0 and 255.")}),"number"==typeof n&&(n={time:n})}return this._midiOutput.send([e].concat(t),o.convertToTimestamp(n.time)),this}sendSysex(e,t,n={}){return t=(e=[].concat(e)).concat(t,o.MIDI_SYSTEM_MESSAGES.sysexend),this.send(o.MIDI_SYSTEM_MESSAGES.sysex,t,{time:n.time}),this}clear(){return this._midiOutput.clear?this._midiOutput.clear():o.validation&&console.warn("The 'clear()' method has not yet been implemented in your environment."),this}sendTimecodeQuarterFrame(e,t={}){if(o.validation&&(e=parseInt(e),isNaN(e)||!(e>=0&&e<=127)))throw new RangeError("The value must be an integer between 0 and 127.");return this.send(o.MIDI_SYSTEM_MESSAGES.timecode,e,{time:t.time}),this}setSongPosition(e,t={}){var n=(e=Math.floor(e)||0)>>7&127,r=127&e;return this.send(o.MIDI_SYSTEM_MESSAGES.songposition,[n,r],{time:t.time}),this}sendSongPosition(e,t={}){return o.validation&&console.warn("The sendSongPosition() method has been deprecated. Use setSongPosition() instead."),this.setSongPosition(e,t)}setSong(e,t={}){if(o.validation&&(e=parseInt(e),isNaN(e)||!(e>=1&&e<=128)))throw new RangeError("The program value must be between 1 and 128");return this.send(o.MIDI_SYSTEM_MESSAGES.songselect,[e],{time:t.time}),this}sendSongSelect(e,t={}){return o.validation&&console.warn("The sendSongSelect() method has been deprecated. Use setSong() instead."),this.setSong(e,t)}sendTuneRequest(e={}){return this.send(o.MIDI_SYSTEM_MESSAGES.tunerequest,void 0,{time:e.time}),this}sendClock(e={}){return this.send(o.MIDI_SYSTEM_MESSAGES.clock,void 0,{time:e.time}),this}sendStart(e={}){return this.send(o.MIDI_SYSTEM_MESSAGES.start,void 0,{time:e.time}),this}sendContinue(e={}){return this.send(o.MIDI_SYSTEM_MESSAGES.continue,void 0,{time:e.time}),this}sendStop(e={}){return this.send(o.MIDI_SYSTEM_MESSAGES.stop,void 0,{time:e.time}),this}sendActiveSensing(e={}){return this.send(o.MIDI_SYSTEM_MESSAGES.activesensing,[],{time:e.time}),this}sendReset(e={}){return this.send(o.MIDI_SYSTEM_MESSAGES.reset,void 0,{time:e.time}),this}sendTuningRequest(e={}){return o.validation&&console.warn("The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead."),this.sendTuneRequest(e)}setKeyAftertouch(e,t,n={},r={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;t=n,(n=r).channels=e}return null==n.channels&&(n.channels="all"),o.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].setKeyAftertouch(e,t,n)}),this}sendKeyAftertouch(e,t,n,r={}){return o.validation&&console.warn("The sendKeyAftertouch() method has been deprecated. Use setKeyAftertouch() instead."),r.channels=t,this.setKeyAftertouch(e,n,r)}sendControlChange(e,t,n={},r={}){if(o.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let e=n;(n=r).channels=e}return null==n.channels&&(n.channels="all"),o.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].sendControlChange(e,t,n)}),this}setPitchBendRange(e,t,n={},r={}){if(o.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let e=n;(n=r).channels=e}return null==n.channels&&(n.channels="all"),o.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].setPitchBendRange(e,t,n)}),this}setRegisteredParameter(e,t,n={},r={}){if(o.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let e=n;(n=r).channels=e}return null==n.channels&&(n.channels="all"),o.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].setRegisteredParameter(e,t,n)}),this}setChannelAftertouch(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setChannelAftertouch(e,t)}),this}sendChannelAftertouch(e,t,n={}){return o.validation&&console.warn("The sendChannelAftertouch() method has been deprecated. Use setChannelAftertouch()."),n.channels=t,this.setChannelAftertouch(e,n)}setPitchBend(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setPitchBend(e,t)}),this}sendPitchBend(e,t,n={}){return o.validation&&console.warn("The sendPitchBend() method has been deprecated. Use setPitchBend() instead."),n.channels=t,this.setPitchBend(e,n)}setProgram(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setProgram(e,t)}),this}sendProgramChange(e,t,n={}){return o.validation&&console.warn("The sendProgramChange() method has been deprecated. Use setProgram() instead."),n.channels=t,this.setProgram(e,n)}setModulationRange(e,t,n={},r={}){if(o.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let e=n;(n=r).channels=e}return null==n.channels&&(n.channels="all"),o.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].setModulationRange(e,t,n)}),this}setMasterTuning(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setMasterTuning(e,t)}),this}setTuningProgram(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setTuningProgram(e,t)}),this}setTuningBank(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setTuningBank(e,t)}),this}sendChannelMode(e,t,n={},r={}){if(o.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let e=n;(n=r).channels=e}return null==n.channels&&(n.channels="all"),o.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].sendChannelMode(e,t,n)}),this}turnSoundOff(e={},t={}){if(o.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let n=e;(e=t).channels=n}return null==e.channels&&(e.channels="all"),o.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].turnSoundOff(e)}),this}turnNotesOff(e={},t={}){if(o.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let n=e;(e=t).channels=n}return null==e.channels&&(e.channels="all"),o.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].turnNotesOff(e)}),this}resetAllControllers(e={},t={}){if(o.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let n=e;(e=t).channels=n}return null==e.channels&&(e.channels="all"),o.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].resetAllControllers(e)}),this}setPolyphonicMode(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setPolyphonicMode(e,t)}),this}setLocalControl(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setLocalControl(e,t)}),this}setOmniMode(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setOmniMode(e,t)}),this}setNonRegisteredParameter(e,t,n={},r={}){if(o.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let e=n;(n=r).channels=e}return null==n.channels&&(n.channels="all"),o.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].setNonRegisteredParameter(e,t,n)}),this}incrementRegisteredParameter(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].incrementRegisteredParameter(e,t)}),this}decrementRegisteredParameter(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].decrementRegisteredParameter(e,t)}),this}sendNoteOff(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendNoteOff(e,t)}),this}stopNote(e,t){return this.sendNoteOff(e,t)}playNote(e,t={},n={}){if(o.validation&&(t.rawVelocity&&console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' instead."),t.velocity&&console.warn("The 'velocity' option is deprecated. Use 'velocity' instead."),Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].playNote(e,t)}),this}sendNoteOn(e,t={},n={}){if(o.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),o.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendNoteOn(e,t)}),this}get name(){return this._midiOutput.name}get id(){return this._midiOutput.id}get connection(){return this._midiOutput.connection}get manufacturer(){return this._midiOutput.manufacturer}get state(){return this._midiOutput.state}get type(){return this._midiOutput.type}}class i{constructor(e,t={}){Number.isInteger(e)?this.number=e:this.name=e,this.duration=null==t.duration?1/0:t.duration,this.attack=null==t.attack?.5:t.attack,this.release=null==t.release?.5:t.release,null!=t.rawAttack&&(this.rawAttack=t.rawAttack),null!=t.rawRelease&&(this.rawRelease=t.rawRelease)}get name(){return o.NOTES[this._number%12]+o.getOctave(this.number)}set name(e){if(o.validation&&!1===o.guessNoteNumber(e))throw new Error("Invalid note name.");this._number=o.guessNoteNumber(e)}get number(){return this._number}set number(e){if(o.validation&&!1===o.guessNoteNumber(e))throw new Error("Invalid note number.");this._number=o.guessNoteNumber(e)}get duration(){return this._duration}set duration(e){if(o.validation&&(e=parseFloat(e),isNaN(e)||null===e||e<0))throw new RangeError("Invalid duration.");this._duration=e}get attack(){return this._rawAttack/127}set attack(e){if(o.validation&&(e=parseFloat(e),isNaN(e)||null===e||!(e>=0&&e<=1)))throw new RangeError("Invalid attack value.");this._rawAttack=Math.round(127*e)}get rawAttack(){return this._rawAttack}set rawAttack(e){if(o.validation&&(e=parseFloat(e),isNaN(e)||null===e||!(e>=0&&e<=127)))throw new RangeError("Invalid rawAttack value.");this._rawAttack=e}get release(){return this._rawRelease/127}set release(e){if(o.validation&&(e=parseFloat(e),isNaN(e)||null===e||!(e>=0&&e<=1)))throw new RangeError("Invalid release value.");this._rawRelease=Math.round(127*e)}get rawRelease(){return this._rawRelease}set rawRelease(e){if(o.validation&&(e=parseFloat(e),isNaN(e)||null===e||!(e>=0&&e<=127)))throw new RangeError("Invalid rawRelease value.");this._rawRelease=e}get octave(){return Math.floor(Math.floor(this._number)/12-1)}}const o=new class extends e{constructor(){super(),this.interface=null,this.validation=!0,this._inputs=[],this._outputs=[],this._stateChangeQueue=[],this._octaveOffset=0,this.isNode&&(global.performance=require("perf_hooks").performance,global.navigator=require("jzz"))}async enable(e={},t=!1){if(this.enabled)return Promise.resolve();this.validation=!1!==e.validation,this.validation&&("function"==typeof e&&(e={callback:e,sysex:t}),t&&(e.sysex=!0)),this.supported||await new Promise((t,n)=>{const r=this.time,a=setInterval(()=>{if(this.supported)clearInterval(a),t();else if(this.time>r+1500){clearInterval(a);let t=new Error("Web MIDI API support is not available in your environment.");"function"==typeof e.callback&&e.callback(t),n(t)}},25)});try{this.interface=await navigator.requestMIDIAccess({sysex:e.sysex,software:e.software})}catch(t){return"function"==typeof e.callback&&e.callback(t),Promise.reject(t)}let n={timestamp:this.time,target:this,type:"enabled"};this.emit("enabled",n),"function"==typeof e.callback&&e.callback(),this.interface.onstatechange=this._onInterfaceStateChange.bind(this);try{let e=await this._updateInputsAndOutputs();return Promise.resolve({inputs:e[0],outputs:e[1]})}catch(e){return Promise.reject(e)}}async disable(){if(!this.supported)throw new Error("The Web MIDI API is not supported by your environment.");return this._destroyInputsAndOutputs().then(()=>{this.isNode&&navigator.close(),this.interface&&(this.interface.onstatechange=void 0),this.interface=null;let e={timestamp:this.time,target:this,type:"disabled"};this.emit("disabled",e),this.removeListener()})}getInputById(e){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return!1}for(let t=0;t<this.inputs.length;t++)if(this.inputs[t].id===e.toString())return this.inputs[t];return!1}getInputByName(e){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return!1;e=e.toString()}for(let t=0;t<this.inputs.length;t++)if(~this.inputs[t].name.indexOf(e))return this.inputs[t];return!1}getOutputByName(e){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return!1;e=e.toString()}for(let t=0;t<this.outputs.length;t++)if(~this.outputs[t].name.indexOf(e))return this.outputs[t];return!1}getOutputById(e){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return!1}for(let t=0;t<this.outputs.length;t++)if(this.outputs[t].id===e.toString())return this.outputs[t];return!1}getNoteNumberByName(e){this.validation&&"string"!=typeof e&&(e="");let t=e.match(/([CDEFGAB])(#{0,2}|b{0,2})(-?\d+)/i);if(!t)return!1;let n={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[t[1].toUpperCase()],r=12*(parseInt(t[3])+1-Math.floor(this.octaveOffset))+n;return t[2].toLowerCase().indexOf("b")>-1?r-=t[2].length:t[2].toLowerCase().indexOf("#")>-1&&(r+=t[2].length),!(r<0||r>127)&&r}noteNameToNumber(e){return console.warn("The noteNameToNumber() method has been deprecated. Use getNoteNumberByName() instead."),this.getNoteNumberByName(e)}getOctave(e){return this.validation&&(e=parseInt(e)),!isNaN(e)&&e>=0&&e<=127&&Math.floor(e/12-1)+this.octaveOffset}sanitizeChannels(e){let t;if(this.validation)if("all"===e)t=["all"];else if("none"===e)return[];return t=Array.isArray(e)?e:[e],t.indexOf("all")>-1&&(t=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),t.map((function(e){return parseInt(e)})).filter((function(e){return e>=1&&e<=16}))}toMIDIChannels(e){return this.validation&&console.warn("The toMIDIChannels() method has been deprecated. Use sanitizeChannels() instead."),this.sanitizeChannels(e)}guessNoteNumber(e){let t=!1;return Number.isInteger(e)&&e>=0&&e<=127||parseInt(e)>=0&&parseInt(e)<=127?t=parseInt(e):("string"==typeof e||e instanceof String)&&(t=this.getNoteNumberByName(e)),!1!==t&&t}getValidNoteArray(e,t={}){let n=[];return Array.isArray(e)||(e=[e]),e.forEach(e=>{n.push(this.getNoteObject(e,t))}),n}getNoteObject(e,t){if(e instanceof i)return e;{let n=this.guessNoteNumber(e);if(!1!==n)return new i(n,t);throw new TypeError(`The input could not be parsed as a note (${e})`)}}convertToTimestamp(e){let t=!1,n=parseFloat(e);return!isNaN(n)&&("string"==typeof e&&"+"===e.substring(0,1)?n>=0&&(t=this.time+n):n>=0&&(t=n),t)}async _destroyInputsAndOutputs(){let e=[];return this.inputs.forEach(t=>e.push(t.destroy())),this.outputs.forEach(t=>e.push(t.destroy())),Promise.all(e).then(()=>{this._inputs=[],this._outputs=[]})}_onInterfaceStateChange(e){this._updateInputsAndOutputs();let t={timestamp:e.timeStamp,type:e.port.state};this.interface&&"connected"===e.port.state?"output"===e.port.type?(t.port=this.getOutputById(e.port.id),t.target=t.port):"input"===e.port.type&&(t.port=this.getInputById(e.port.id),t.target=t.port):(t.port={connection:"closed",id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},t.target=t.port),this.emit(e.port.state,t)}async _updateInputsAndOutputs(){return Promise.all([this._updateInputs(),this._updateOutputs()])}async _updateInputs(){let e=[];for(let e=0;e<this._inputs.length;e++){let t=!0,n=this.interface.inputs.values();for(let r=n.next();r&&!r.done;r=n.next())if(this._inputs[e]._midiInput===r.value){t=!1;break}t&&this._inputs.splice(e,1)}return this.interface&&this.interface.inputs.forEach(t=>{let n=!0;for(let e=0;e<this._inputs.length;e++)this._inputs[e]._midiInput===t&&(n=!1);if(n){let n=new r(t);this._inputs.push(n),e.push(n.open())}}),Promise.all(e)}async _updateOutputs(){let e=[];for(let e=0;e<this._outputs.length;e++){let t=!0,n=this.interface.outputs.values();for(let r=n.next();r&&!r.done;r=n.next())if(this._outputs[e]._midiOutput===r.value){t=!1;break}t&&(this._outputs[e].close(),this._outputs.splice(e,1))}return this.interface&&this.interface.outputs.forEach(t=>{let n=!0;for(let e=0;e<this._outputs.length;e++)this._outputs[e]._midiOutput===t&&(n=!1);if(n){let n=new s(t);this._outputs.push(n),e.push(n.open())}}),Promise.all(e)}get enabled(){return null!==this.interface}get inputs(){return this._inputs}get isNode(){return"[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0)}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be a valid number.");this._octaveOffset=e}get outputs(){return this._outputs}get supported(){return!(!navigator||!navigator.requestMIDIAccess)}get sysexEnabled(){return!(!this.interface||!this.interface.sysexEnabled)}get time(){return performance.now()}get MIDI_CHANNEL_VOICE_MESSAGES(){return{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,channelmode:11,nrpn:11,programchange:12,channelaftertouch:13,pitchbend:14}}get MIDI_CHANNEL_MESSAGES(){return console.warn("MIDI_CHANNEL_MESSAGES has been deprecated. Use MIDI_CHANNEL_VOICE_MESSAGES instead."),this.MIDI_CHANNEL_VOICE_MESSAGES}get MIDI_CHANNEL_MODE_MESSAGES(){return{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}get MIDI_CONTROL_CHANGE_MESSAGES(){return{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101}}get MIDI_INTERFACE_EVENTS(){return["connected","disconnected"]}get MIDI_NRPN_MESSAGES(){return{entrymsb:6,entrylsb:38,increment:96,decrement:97,paramlsb:98,parammsb:99,nullactiveparameter:127}}get MIDI_REGISTERED_PARAMETER(){return{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]}}get MIDI_SYSTEM_MESSAGES(){return{sysex:240,timecode:241,songposition:242,songselect:243,tunerequest:246,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1}}get NOTES(){return["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]}};o.constructor=null;export{i as Note,o as WebMidi};
//# sourceMappingURL=webmidi.esm.min.js.map
