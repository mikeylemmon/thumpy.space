{"version":3,"sources":["app/serverApi/serverApi.ts","app/serverApi/serverClock.ts","index.tsx","app/serverApi/WSClock.ts","engine3d/core/Vec.ts","engine3d/core/Bounds.ts","engine3d/core/Xform.ts","engine3d/core/Component.ts","engine3d/core/engine3d.ts","engine3d/core/Obj.ts","engine3d/components/Physical.ts","engine3d/components/FollowCam.ts","engine3d/objs/DancerObj.ts","engine3d/objs/Avatar.ts","engine3d/objs/BlackHoleObj.ts","engine3d/objs/Ground.ts","app/constants.ts","app/serverApi/WSClient.ts","app/MIDI.ts","app/util.ts","app/InstControls.ts","app/Instrument.ts","app/instruments/BlackHole.ts","app/instruments/Dancer.ts","app/instruments/Sampler.ts","app/instruments/EightOhEight.ts","app/instruments/Hoover.ts","app/instruments/Metronome.ts","app/instruments/Piano.ts","app/instruments/PolySynth.ts","vendor/p5.easycam.js","app/SketchInputs.ts","app/SketchAudioKeys.ts","app/Loop.ts","app/Loops.ts","app/Sketch.ts","app/VideoOutput.tsx","app/App.tsx"],"names":["WS_URL","WS_HEADER_END","WS_CLIENT_ID","parseClientId","body","JSON","parse","clientId","WS_USERS_ALL","WS_USER_EVENT","WS_USER_FORCE","WS_USER_XFORM","WS_USER_REQUEST_XFORMS","parseUsersAll","parseUserEvent","parseUserForce","parseUserXform","userUpdateReq","req","stringify","userEventReq","userXformReq","userRequestXformsReq","WS_CLOCK_NOW","WS_CLOCK_ORIGIN","WS_CLOCK_UPDATE","NOTE_METRONOME_BPM_CHANGED","NOTE_METRONOME_DOWN","clockNowReq","clockUpdateReq","clk","parseClockUpdate","App","require","default","ReactDOM","render","document","getElementById","WSClock","global","conn","options","localOrigin","correction","precision","correction2","precision2","lowpass","lastReqAt","lastRespAt","loopId","syncInitial","serverOrigin","precisionNow","pingMs","syncPeriod","synced","update","readyState","WebSocket","OPEN","nowRaw","send","clearTimeout","destroy","this","performance","timeOrigin","setInterval","now","originMs","console","error","nowMs","dur","delta","deltaNow","onSynced","nn","c2gain","perfTime","globalTime","Vec","w","clone","x","y","z","cloneMult","val","applyMult","cloneAdd","applyAdd","cloneSub","applySub","isZero","isOne","isEqual","other","normalize","mag","toArray","setFromArray","vals","length","cloneMultMat","mat","dest","Math","abs","Number","EPSILON","window","p5","Vector","Bounds","min","max","cloneXform","xform","applyXform","applyTo","sanitize","tmp","pushInside","off","centerAndSize","center","size","Xform","pos","rot","scale","vec","Component","parent","drawDebug","log","_dt","warn","engine3d","opts","objs","debug","lastUpdate","addObj","obj","unshift","rmObj","filter","oo","getObjs","objType","getObj","Date","valueOf","dt","forEach","draw","pg","drawShadow","draw2D","pp","gg","mvp","_renderer","uMVMatrix","copy","mult","uPMatrix","mat4","Obj","children","comps","drawFunc","drawShadowFunc","drawFunc2D","cc","rm","rmChild","addChild","push","getChildren","getChild","addComp","comp","rmComp","getComps","compType","getComp","applyXformToGraphics","translate","rotateZ","rotateY","rotateX","pop","ndcPos","ndcPos2","ndcPos3","ndcPos4","ndc","width","height","scale2d","gravity","Physical","force","vel","bounds","world","magSq","worldBounds","noFill","stroke","strokeWeight","box","worldScale","FollowCam","cam","last","state","setCenter","defaultEnvOpts","attack","attackCurve","decay","decayCurve","sustain","release","releaseCurve","DanceMoves","envs","dip","Tone","stepLeft","stepRight","spinLeft","spinRight","headbang","armsLUpperY","armsLUpperZ","armsLLowerX","armsRUpperY","armsRUpperZ","armsRLowerX","value","sizes","leg","stepLeftRight","rotHead","PI","rotArms","l","upper","r","lower","noteEnvMap","0","1","2","3","4","5","6","7","8","9","10","11","noteEvent","time","evt","kind","note","move","triggerAttack","triggerRelease","handleADSR","props","kk","set","armUpper","armLower","neck","head","defaultArmsRot","DancerObj","moves","vol","colors","hue","sat","lgt","hand","handleCC","ctrls","localUser","controlchangeNext","schedule","controlchange","slider","getSliderForCtrl","controller","number","tt","label","handleModwheel","rng","seedrandom","part","quick","setFill","col","fill","cs","colorMode","HSL","sphere","drawHead","drawArm","left","noStroke","circle","Avatar","phys","user","followCam","onForce","dancer","facing","keys","up","down","right","jump","jumpInitial","gain","name","instrument","offset","ss","sss","textAlign","CENTER","BOTTOM","textSize","textStyle","BOLD","text","ITALIC","addFollowCam","getUserXform","setUserXform","data","setUserForce","keyPressed","keyChanged","keyReleased","pressed","key","keysUpdated","mov","ca","centerAxes","cax","caz","ff","atan2","BlackHoleObj","origin2D","scale2D","sketch","shaderBlackHole","backbuffer","blackHole","instruments","shader","setUniform","modwheel","resetShader","Ground","rect","sz","BLACK_KEYS","WSClient","clock","users","isReady","reopen","CLOSED","newConn","ready","onclose","code","setTimeout","onopen","onerror","onmessage","onMessage","parts","str","sep","out","sepRe","RegExp","prevIndex","lastIndex","re","exec","slice","index","split","onClientId","onClockOrigin","onClockNow","clkOpts","onClockUpdate","uu","onUsers","uevt","onUserEvent","onUserForce","onUserXform","onUserRequestXforms","getUser","newMidiEvent","channel","target","type","_number","allChannels","Array","map","allEvents","MIDI","webMidi","enabled","enable","a","onEnabled","WebMidi","inputs","outputs","input","eventName","addListener","channels","noteFreq","toFrequency","srand","random","srandVec","_ctrlColorMemo","ctrlColor","ctrl","seed","InstControls","sliders","xx","includes","mousePressed","mouse","mouseX","mouseY","ismousedown","mouseReleased","_evt","valueNext","pitchbendNext","getSliderForPitchbend","pitchbend","getSliderForLabel","lbl","s","InstControl","yy","_wasPressed","_ee","valueLastSent","sendValue","setValueNext","drawVal","TOP","toUpperCase","vw","vx","square","valueY","vv","midiEvt","undefined","sendUserEvent","hh","Instrument","panVol","handleDetune","handleFilter","handlePitchbend","_avatar","_time","avatar","frequency","pow","Q","pan","mute","volume","BlackHole","reverb","synth","freqNode","freq","noiseGain","noise","ps","psSpread","maxObjs","ii","_attacks","noteon","exponentialRampToValueAtTime","setValueAtTime","addBHObj","noteoff","detune","envelope","lastPos","objSize","apos","ascale","theta","sin","cos","extraScale","BHObj","noteEvt","twist","mass","toDestination","wet","connect","delay","delayTime","feedback","addend","playbackRate","start","num","portamento","inst","createdAt","scaleOrig","voice","mod","Dancer","lr","Sampler","sampler","pitchShift","pitch","fq","loaded","samps","EightOhEight","urls","baseUrl","eightOhEight","modNote","bgCol","ground","Hoover","chorus","amGain","amOsc","harmonicity","HooverObj","wave","fft","setNote","floor","oscillator","count","spread","amScale","chain","normalRange","hoover","_ff","lp","calcLaserParams","drawLasers","empty","Float32Array","waveMin","waveMax","volCtrl","visThresh","getValue","valsMax","valsMin","fftVals","params","aa","color","curStrokeColor","_array","line","Metronome","metronome","pianoSamps","A0","C1","A1","C2","A2","C3","A3","C4","A4","C5","A5","C6","A6","C7","A7","C8","Piano","PolySynth","filterVol","addSynthObj","_activeVoices","released","midi","SynthObj","polySynth","RGB","ext","INFO","LIBRARY","VERSION","AUTHOR","SOURCE","toString","EasyCam","renderer","args","RendererGL","distance","rotation","Rotation","identity","viewport","setCanvas","LOOK","UP","AXIS","YAW","PITCH","ROLL","ALL","SHIFT_CONSTRAINT","FIXED_CONSTRAINT","DRAG_CONSTRAINT","scale_rotation","scale_pan","scale_zoom","scale_zoomwheel","distance_min_limit","distance_min","distance_max","MAX_VALUE","dst","state_reset","state_pushed","curr","prev","dist","mwheel","isPressed","istouchdown","BUTTON","LMB","MMB","RMB","button","mouseDragLeft","mouseDragRotate","bind","mouseDragCenter","mouseDragPan","mouseDragRight","mouseDragZoom","mouseWheelAction","mouseWheelZoom","touchmoveSingle","touchmoveMulti","insideViewport","x0","x1","y0","y1","solveConstraint","dx","dy","shiftKey","updateInput","pd","P5","pixelDensity","mousedown","event","mousedrag","mouseup","dblclick","reset","wheel","deltaY","evaluateTouches","i","touches","avg_x","avg_y","avg_d","clientX","clientY","sqrt","touchstart","preventDefault","stopPropagation","dbltap","touchmove","tapcount","touchend","keydown","keyCode","keyup","attachMouseListeners","auto_update","registerMethod","dampedZoom","DampedAction","d","zoom","getZoomMult","dampedPanX","panX","getPanMult","dampedPanY","panY","dampedPanZ","panZ","dampedRotX","getRotationMult","dampedRotY","dampedRotZ","timedRot","Interpolation","setInterpolatedRotation","timedPan","setInterpolatedCenter","timedzoom","setInterpolatedDistance","_pInst","graphics","el","ev","fx","op","detachListener","addEventListener","removeEventListener","passive","elt","attachListener","status","b_update","stop","apply","camEYE","getPosition","camLAT","getCenter","camRUP","getUpVector","_curCamera","camera","addForce","mx","my","mxNdc","myNdc","log10","dz","distance_tmp","applyToVec3","Vec3","add","screenX","mX","screenZ","cross","rx","rotate","ry","rz","axis","angle","new_rotation","create","applyToRotation","valA","valB","t","Scalar","mix","smoothstep","slerp","duration","assert","setDistance","setRotation","getState","setState","wheelScale","damping","default_duration","yaw","roll","h","pushed_rendererState","gl","drawingContext","ww","flush","disable","DEPTH_TEST","pushed_uMVMatrix","pushed_uPMatrix","resetMatrix","ortho","cb","action","active","actions","timer","getTime","interpolate","constructor","q0","q1","q2","q3","rotA","rotB","a0","a1","a2","a3","b0","b1","b2","b3","cosTheta","w1","w2","acos","sinTheta","def","norm","halfAngle","coeff","inv","angles_xyz","ax","ay","az","rotX","rotY","rotZ","b","smootherstep","isScalar","arg","dot","v1","v2","normProduct","threshold","v3","asin","Object","freeze","prettyUnit","unit","coarse","thresh","dec","toFixed","SketchInputs","loadedFromStorage","nameCustomized","hidden","clockOpts","bpm","help","helpRetoggle","loops","dial","helpImg","pingBeats","isFocused","focused","toggleHide","setup","setupInputsBPM","toggleHelp","hiddenDial","toggleHideDial","loadImage","remove","setupInputsHide","setupInputsUser","ws","setupInputsInstrument","hide","hideLoops","hideDial","showHelp","createButton","position","toggleHideText","toggleHideDialText","innerHTML","defaultName","updateUser","latency","createInput","inName","inLatency","onfocus","onblur","setLatency","lat","parseFloat","isNaN","updateRecOffset","inInst","createSelect","uinst","instName","option","selected","changed","setupInputsMidi","inputDevice","inMidi","_midiInput","inBPM","createSlider","sendClockUpdate","drawHelp","drawClockStats","LEFT","msg","ppLabel","RIGHT","ppValue","beatMs","prec","precStr","pingStr","xc","haspect","hx","hy","background","image","switchTo","SketchAudioKeys","audioKeys","velocity","keyboardInputDisabled","keyIsDown","AudioKeys","polyphony","Infinity","Loop","id","evts","headPlay","headRec","isActive","isDial","isRecording","isMuted","pgControls","pgNotes","needsRenderControls","needsRenderNotes","save","beats","localStorage","setItem","load","dataStr","getItem","le","timestamp","removeItem","setRadius","rad","radius","loopLenMs","loopUserEvent","recOff","offsetMs","loopTime","timeGlobalToLoopNorm","levt","midiEvent","attacks","filterNote","attackEvents","attackEvt","minDiff","relTime","ae","diff","sanitizeEvents","ee","updateClientId","releaseEvents","controlEvents","sortByLoopTime","sort","bb","groupByController","resp","clearAllEvents","_lastDownbeat","_lastBeats","play","rec","headRecPrev","downbeat","lt","_sendUserEvent","timeLoopNormToGlobal","after","recStartedAt","isDown","isFirst","drawLine","drawEvents","arcPlay","ceil","arcRec","recFillAlpha","drawArc","drawControls","drawNotes","createGraphics","radBig","tmpx","tmpy","renderControls","renderNotes","_drawNotes","lx","ly","fromTime","from","arc","clear","cevts","len","nextEvtIdx","nextTime","unreleasedOnly","modNotes","timeGlobalToLoop","timeLoopToGlobal","timeLastLoopStartMs","hitTest","uuid","Loops","activeLoop","recLock","store","lidsStr","defaultParams","aid","lids","lid","loop","saveLoopRefs","ll","didSetup","loopLen","newLoopBtn","setupInputs","btnHalfwidth","offsetWidth","othersTop","offsetHeight","inactiveLoops","NORMAL","addLoop","dialBeats","recOffset","clearAll","clearActiveLoop","toggleActiveLoopMute","al","muteAll","stopRecording","didHit","activateLoop","activatePrev","activateNext","newAvatarPos","rr","started","syncing","transportStarted","_bpm","_bpmNext","instSliders","avatars","loadFromStorage","ustr","close","timeGlobalToTone","rawContext","_nativeAudioContext","getOutputTimestamp","contextTime","performanceTime","toLocal","timeToneToGlobal","toneTime","pt","toGlobal","setSize","preload","loadShader","createCanvas","textureWrap","REPEAT","n","bbsize","clz32","WEBGL","setDistanceMin","setDistanceMax","setViewport","perspective","loading","drawMessage","BOLDITALIC","sendUpdate","assign","sendUserUpdate","getAvatar","getAvatarSafe","sendUserXform","sendUserRequestXforms","inputName","_eventName","isMetronome","onMetronome","pb","setNewDownbeat","prevs","some","bps","beatSec","offsetSec","didLoad","polysquare","piano","me","VideoOutput","ref","useRef","useEffect","current","elem","childNodes","removeChild","clientWidth","clientHeight","canvas","style","display","flex","alignItems","justifyContent","className","flexDirection","backgroundColor","top","bottom"],"mappings":"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","file":"static/js/main.5dbade3e.chunk.js","sourcesContent":["import { MidiEvent } from '../MIDI'\n\n// export const WS_URL = 'ws://localhost:38883'\n// export const WS_URL = 'wss://mikeylemmon.com/api'\nexport const WS_URL = 'wss://thumpy.space/api'\nexport const WS_HEADER_END = '#'\n\n//\n// Client API\n//\nexport const WS_CLIENT_ID = 'client/id'\nexport type ClientIdResp = { clientId: number }\n\nexport function parseClientId(body: string): number {\n\tconst resp: ClientIdResp = JSON.parse(body)\n\treturn resp.clientId\n}\n\n//\n// Users API\n//\nexport const WS_USERS_ALL = 'user/all'\nexport const WS_USER_UPDATE = 'user/update'\nexport const WS_USER_EVENT = 'user/event'\nexport const WS_USER_FORCE = 'user/force'\nexport const WS_USER_XFORM = 'user/xform'\nexport const WS_USER_REQUEST_XFORMS = 'user/request_xforms'\n\nexport type User = {\n\tclientId: number\n\tname: string\n\tinstrument: string\n\tinputDevice: string\n\toffset: number\n}\n\nexport type UserEvent = {\n\tclientId: number\n\tinstrument: string\n\tmidiEvent: MidiEvent\n\ttimestamp: number\n}\n\nexport type UserForce = {\n\tclientId: number\n\tforce: number[]\n}\n\nexport type UserXform = {\n\tclientId: number\n\tpos: number[]\n\trot: number[]\n\tscale: number[]\n\tforce: number[]\n\tvel: number[]\n}\n\nexport function parseUsersAll(body: string): User[] {\n\tconst resp: User[] = JSON.parse(body)\n\treturn resp\n}\nexport function parseUserEvent(body: string): UserEvent {\n\tconst resp: UserEvent = JSON.parse(body)\n\treturn resp\n}\nexport function parseUserForce(body: string): UserForce {\n\tconst resp: UserForce = JSON.parse(body)\n\treturn resp\n}\nexport function parseUserXform(body: string): UserXform {\n\tconst resp: UserXform = JSON.parse(body)\n\treturn resp\n}\n\nexport function userUpdateReq(req: User): string {\n\treturn WS_USER_UPDATE + WS_HEADER_END + JSON.stringify(req)\n}\nexport function userEventReq(req: UserEvent): string {\n\treturn WS_USER_EVENT + WS_HEADER_END + JSON.stringify(req)\n}\nexport function userForceReq(req: UserForce): string {\n\treturn WS_USER_FORCE + WS_HEADER_END + JSON.stringify(req)\n}\nexport function userXformReq(req: UserXform): string {\n\treturn WS_USER_XFORM + WS_HEADER_END + JSON.stringify(req)\n}\nexport function userRequestXformsReq(): string {\n\treturn WS_USER_REQUEST_XFORMS + WS_HEADER_END\n}\n","import { WS_HEADER_END } from './serverApi'\n\nexport const WS_CLOCK_NOW = 'clock/now'\nexport const WS_CLOCK_ORIGIN = 'clock/origin'\nexport const WS_CLOCK_UPDATE = 'clock/update'\nexport const NOTE_METRONOME_BPM_CHANGED = 32\nexport const NOTE_METRONOME_DOWN = 34\nexport const NOTE_METRONOME_UP = 35\n\nexport type ClockNowResp = { nowMs: number }\nexport type ClockOriginResp = { originMs: number }\nexport type ClockOpts = {\n\tbpm: number\n\tclientId?: number\n}\n\nexport const clockNowReq = () => WS_CLOCK_NOW + WS_HEADER_END\nexport const clockUpdateReq = (clk: ClockOpts) => WS_CLOCK_UPDATE + WS_HEADER_END + JSON.stringify(clk)\n\nexport function parseClockUpdate(body: string): ClockOpts {\n\tconst resp: ClockOpts = JSON.parse(body)\n\treturn resp\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'index.css'\n\nconst render = () => {\n\tconst App = require('app/App').default\n\n\tReactDOM.render(<App />, document.getElementById('root'))\n}\n\nrender()\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n\tmodule.hot.accept('./app/App', render)\n}\n","import { clockNowReq, ClockNowResp, ClockOriginResp } from './serverClock'\n\nconst SYNC_PERIOD_INITIAL_MS = 500,\n\tSYNC_INITIAL_NUM = 6, // number of times to use initial period\n\tSYNC_PERIOD_MS = 2000\n\nexport type WSClockOptions = {\n\tonSynced: () => void\n}\n\nexport default class WSClock {\n\tglobal: any\n\tconn: WebSocket\n\tlocalOrigin: number\n\tcorrection = 0 // a correction to apply to the local clock based on rolling-average deviation from server clock\n\tprecision = 0 // average of how accurate the workerClock is with correction applied\n\tcorrection2 = 0 // a derivative correction that accounts for linear clock deviation (i.e. local clock is X slower/faster than server)\n\tprecision2 = 0 // measures how accurate the workerClock is with correction and correction2 applied\n\tlowpass = 0.3 // how much latest sample affects correction/precision\n\tlastReqAt = 0\n\tlastRespAt = 0\n\tloopId = -1\n\tsyncInitial = 0\n\tserverOrigin = 0\n\tprecisionNow = 0\n\tpingMs = 0\n\tsyncPeriod = SYNC_PERIOD_INITIAL_MS\n\tsynced = false\n\toptions: Partial<WSClockOptions>\n\n\tconstructor(global: any, conn: WebSocket, options: Partial<WSClockOptions> = {}) {\n\t\tthis.global = global\n\t\tthis.options = options\n\t\t// this.localOrigin = global.performance.timing.navigationStart\n\t\tthis.localOrigin = global.performance.timeOrigin\n\t\tthis.conn = conn\n\t\tthis.loopId = global.setInterval(this.update, this.syncPeriod)\n\t}\n\n\tnowRaw() {\n\t\treturn global.performance.now()\n\t}\n\n\tupdate = () => {\n\t\tif (this.conn.readyState !== WebSocket.OPEN) {\n\t\t\tthis.global.clearTimeout(this.loopId)\n\t\t\treturn\n\t\t}\n\t\tthis.lastReqAt = this.nowRaw()\n\t\tthis.conn.send(clockNowReq())\n\t}\n\n\tdestroy = () => {\n\t\tthis.global.clearTimeout(this.loopId)\n\t}\n\n\tonClockOrigin(body: string) {\n\t\tconst resp: ClockOriginResp = JSON.parse(body)\n\t\tconst { originMs } = resp\n\t\tif (!originMs) {\n\t\t\tconsole.error('[workerClock #onClockOrigin] Received empty response')\n\t\t\treturn\n\t\t}\n\t\tthis.serverOrigin = originMs\n\t}\n\n\tonClockNow(body: string) {\n\t\tconst resp: ClockNowResp = JSON.parse(body)\n\t\tconst { nowMs } = resp || {}\n\t\tif (!nowMs) {\n\t\t\tconsole.error('[workerClock #onClockNow] Received empty response')\n\t\t\treturn\n\t\t}\n\t\tthis.lastRespAt = this.nowRaw()\n\t\tconst dur = this.lastRespAt - this.lastReqAt\n\t\tthis.pingMs = dur\n\t\tconst mid = dur / 2 + this.lastReqAt\n\t\tconst delta = nowMs - mid\n\t\tif (this.correction === 0) {\n\t\t\tthis.correction = delta\n\t\t} else {\n\t\t\tthis.correction = delta * this.lowpass + this.correction * (1 - this.lowpass)\n\t\t}\n\t\tconst precision = delta - this.correction\n\t\tif (this.precision === 0) {\n\t\t\tthis.precision = precision\n\t\t} else {\n\t\t\tthis.precision = precision * this.lowpass + this.precision * (1 - this.lowpass)\n\t\t}\n\t\t// Calculate a secondary correction based on the average value of precision to account\n\t\t// for the local clock being consistently slower/faster than the server clock\n\t\tthis.correction2 = this.precision * this.lowpass + this.correction2 * (1 - this.lowpass)\n\t\tconst precision2 = delta - this.correction - this.correction2\n\t\tif (this.precision2 === 0) {\n\t\t\tthis.precision2 = precision2\n\t\t} else {\n\t\t\tthis.precision2 = precision2 * this.lowpass + this.precision2 * (1 - this.lowpass)\n\t\t}\n\n\t\t// Calculate precision metrics for corrected \"now\" time\n\t\tconst now = this.now() - dur / 2\n\t\tconst deltaNow = now - nowMs\n\t\tthis.precisionNow = deltaNow * this.lowpass + this.precisionNow * (1 - this.lowpass)\n\n\t\t// console.log(\n\t\t// \t'[workerClock #onClockNow]',\n\t\t// \t{\n\t\t// \t\tp: this.precision,\n\t\t// \t\tp2: this.precision2,\n\t\t// \t\tc: this.correction,\n\t\t// \t\tc2: this.correction2,\n\t\t// \t},\n\t\t// \t{\n\t\t// \t\tlastP: precision,\n\t\t// \t\tlastP2: precision2,\n\t\t// \t\tdur,\n\t\t// \t},\n\t\t// \t{\n\t\t// \t\tnow: now,\n\t\t// \t\tnowMs: nowMs,\n\t\t// \t\td: deltaNow,\n\t\t// \t\tpnow: this.precisionNow,\n\t\t// \t},\n\t\t// \t{\n\t\t// \t\tnowOverP: this.precisionNow / this.precision2,\n\t\t// \t},\n\t\t// )\n\n\t\tif (!this.synced && this.syncInitial++ > SYNC_INITIAL_NUM) {\n\t\t\t// Replace sync loop with lower-frequency interval\n\t\t\tthis.synced = true\n\t\t\tthis.global.clearTimeout(this.loopId)\n\t\t\t// this.correction2 *= SYNC_PERIOD_MS / SYNC_PERIOD_INITIAL_MS\n\t\t\tthis.correction += this.correction2\n\t\t\tthis.syncPeriod = SYNC_PERIOD_MS\n\t\t\tthis.loopId = this.global.setInterval(this.update, this.syncPeriod)\n\t\t\tif (this.options.onSynced) {\n\t\t\t\tthis.options.onSynced()\n\t\t\t}\n\t\t}\n\t}\n\n\tnow() {\n\t\tconst nn = this.nowRaw()\n\t\tconst c2gain = 1 + (nn - this.lastRespAt) / this.syncPeriod\n\t\treturn nn + this.correction + this.correction2 * c2gain\n\t}\n\n\ttoGlobal(perfTime: number) {\n\t\treturn perfTime + this.correction + this.correction2\n\t}\n\n\ttoLocal(globalTime: number) {\n\t\treturn globalTime - this.correction - this.correction2\n\t}\n}\n","export class Vec extends window.p5.Vector {\n\tw = 0\n\n\tconstructor(...vals: number[]) {\n\t\tsuper()\n\t\tthis.setFromArray(vals)\n\t}\n\n\tclone = (): Vec => new Vec(this.x, this.y, this.z)\n\tcloneMult = (val: number | Vec) => this.clone().applyMult(val)\n\tcloneAdd = (val: number | Vec) => this.clone().applyAdd(val)\n\tcloneSub = (val: number | Vec) => this.clone().applySub(val)\n\n\tisZero = () => this.x === 0 && this.y === 0 && this.z === 0\n\tisOne = () => this.x === 1 && this.y === 1 && this.z === 1\n\tisEqual = (other: Vec) => this.x === other.x && this.y === other.y && this.z === other.z\n\tnormalize = () => this.applyMult(1.0/this.mag())\n\n\ttoArray = () => [this.x, this.y, this.z]\n\tsetFromArray = (vals: number[]) => {\n\t\tthis.x = vals.length > 0 ? vals[0] : 0\n\t\tthis.y = vals.length > 1 ? vals[1] : this.x\n\t\tthis.z = vals.length > 2 ? vals[2] : vals.length === 2 ? 0 : this.x\n\t\treturn this\n\t}\n\n\tapplyMult = (val: number | Vec) => {\n\t\tif (val instanceof Vec) {\n\t\t\tthis.x *= val.x\n\t\t\tthis.y *= val.y\n\t\t\tthis.z *= val.z\n\t\t\treturn this\n\t\t}\n\t\tthis.x *= val\n\t\tthis.y *= val\n\t\tthis.z *= val\n\t\treturn this\n\t}\n\n\tapplyAdd = (val: number | Vec) => {\n\t\tif (val instanceof Vec) {\n\t\t\tthis.x += val.x\n\t\t\tthis.y += val.y\n\t\t\tthis.z += val.z\n\t\t\treturn this\n\t\t}\n\t\tthis.x += val\n\t\tthis.y += val\n\t\tthis.z += val\n\t\treturn this\n\t}\n\n\tapplySub = (val: number | Vec) => {\n\t\tif (val instanceof Vec) {\n\t\t\tthis.x -= val.x\n\t\t\tthis.y -= val.y\n\t\t\tthis.z -= val.z\n\t\t\treturn this\n\t\t}\n\t\tthis.x -= val\n\t\tthis.y -= val\n\t\tthis.z -= val\n\t\treturn this\n\t}\n\n\tcloneMultMat = (mat: number[]): Vec => {\n\t\tif (!mat.length || mat.length !== 16) {\n\t\t\tconsole.error('[Vec #applyMult] invalid matrix provided for mult', mat)\n\t\t\treturn this.clone()\n\t\t}\n\t\tconst dest = new Vec()\n\t\tdest.x = mat[0] * this.x + mat[4] * this.y + mat[8] * this.z + mat[12]\n\t\tdest.y = mat[1] * this.x + mat[5] * this.y + mat[9] * this.z + mat[13]\n\t\tdest.z = mat[2] * this.x + mat[6] * this.y + mat[10] * this.z + mat[14]\n\t\tdest.w = mat[3] * this.x + mat[7] * this.y + mat[11] * this.z + mat[15]\n\t\tif (Math.abs(dest.w) > Number.EPSILON) {\n\t\t\tdest.applyMult(1.0 / dest.w)\n\t\t}\n\t\treturn dest\n\t}\n}\n","import { Vec } from './Vec'\nimport { Xform } from './Xform'\n\nexport class Bounds {\n\tmin = new Vec(-1.0)\n\tmax = new Vec(1.0)\n\n\tconstructor(min?: Vec, max?: Vec) {\n\t\tif (min) { this.min = min }\n\t\tif (max) { this.max = max }\n\t}\n\n\tclone = () => new Bounds(this.min.clone(), this.max.clone())\n\tcloneXform = (xform: Xform) => this.clone().applyXform(xform)\n\n\tapplyXform = (xform: Xform) => {\n\t\txform.applyTo(this.min)\n\t\txform.applyTo(this.max)\n\t\tthis.sanitize()\n\t\treturn this\n\t}\n\n\tsanitize = () => {\n\t\tif (this.min.x > this.max.x) {\n\t\t\tconst tmp = this.min.x\n\t\t\tthis.min.x = this.max.x\n\t\t\tthis.max.x = tmp\n\t\t}\n\t\tif (this.min.y > this.max.y) {\n\t\t\tconst tmp = this.min.y\n\t\t\tthis.min.y = this.max.y\n\t\t\tthis.max.y = tmp\n\t\t}\n\t\tif (this.min.z > this.max.z) {\n\t\t\tconst tmp = this.min.z\n\t\t\tthis.min.z = this.max.z\n\t\t\tthis.max.z = tmp\n\t\t}\n\t\treturn this\n\t}\n\n\t// pushInside returns a zero vector if this bounds is inside the other bounds;\n\t// otherwise, returns the vector required to move this bounds into other\n\tpushInside = (other: Bounds): Vec => {\n\t\tconst off = new Vec()\n\t\tif (this.min.x < other.min.x) {\n\t\t\toff.x = other.min.x - this.min.x\n\t\t} else if (this.max.x > other.max.x) {\n\t\t\toff.x = other.max.x - this.max.x\n\t\t}\n\t\tif (this.min.y < other.min.y) {\n\t\t\toff.y = other.min.y - this.min.y\n\t\t} else if (this.max.y > other.max.y) {\n\t\t\toff.y = other.max.y - this.max.y\n\t\t}\n\t\tif (this.min.z < other.min.z) {\n\t\t\toff.z = other.min.z - this.min.z\n\t\t} else if (this.max.z > other.max.z) {\n\t\t\toff.z = other.max.z - this.max.z\n\t\t}\n\t\treturn off\n\t}\n\n\tcenterAndSize = () => {\n\t\treturn {\n\t\t\tcenter: new Vec(\n\t\t\t\t(this.max.x + this.min.x) / 2,\n\t\t\t\t(this.max.y + this.min.y) / 2,\n\t\t\t\t(this.max.z + this.min.z) / 2,\n\t\t\t),\n\t\t\tsize: new Vec(\n\t\t\t\t(this.max.x - this.min.x),\n\t\t\t\t(this.max.y - this.min.y),\n\t\t\t\t(this.max.z - this.min.z),\n\t\t\t),\n\t\t}\n\t}\n}\n","import { Vec } from './Vec'\n\nexport class Xform {\n\tpos: Vec\n\trot: Vec\n\tscale: Vec\n\n\tconstructor(pos?: Vec, rot?: Vec, scale?: Vec) {\n\t\tthis.pos = pos ? pos : new Vec()\n\t\tthis.rot = rot ? rot : new Vec()\n\t\tthis.scale = scale ? scale : new Vec(1.0)\n\t}\n\n\tapplyTo = (vec: Vec) => {\n\t\tvec.applyMult(this.scale)\n\t\t// TODO: rotation\n\t\tvec.applyAdd(this.pos)\n\t}\n}\n","import { drawFunc, Obj } from './Obj'\n\nexport class Component {\n\tparent: Obj\n\tdrawDebug?: drawFunc\n\n\tconstructor(parent: Obj) {\n\t\tthis.parent = parent\n\t}\n\n\tdestroy() {\n\t\tconsole.log('[Component] destroyed')\n\t}\n\n\tupdate(_dt: number) {\n\t\tconsole.warn('[Component] update')\n\t}\n}\n","import * as p5 from 'p5'\nimport { Obj } from './Obj'\n\nexport type Engine3DOpts = {\n\tdebug?: boolean\n}\n\nexport class Engine3D {\n\tobjs: Obj[] = []\n\tdebug = false\n\tlastUpdate?: number\n\n\tconstructor(opts: Engine3DOpts = {}) {\n\t\tif (opts.debug) {\n\t\t\tthis.debug = true\n\t\t}\n\t}\n\n\taddObj = (obj: Obj) => this.objs.unshift(obj)\n\trmObj = (obj: Obj, destroy = true) => {\n\t\tthis.objs = this.objs.filter(oo => {\n\t\t\tif (oo === obj) {\n\t\t\t\tif (destroy) {\n\t\t\t\t\too.destroy()\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn true\n\t\t})\n\t}\n\tgetObjs = (objType: any) => this.objs.filter(oo => oo instanceof objType)\n\tgetObj = (objType: any): Obj | undefined => this.getObjs(objType)[0]\n\n\tupdate = () => {\n\t\tif (!this.lastUpdate) {\n\t\t\tthis.lastUpdate = new Date().valueOf()\n\t\t\treturn\n\t\t}\n\t\tconst now = new Date().valueOf()\n\t\tconst dt = (now - this.lastUpdate) / 1000\n\t\tthis.lastUpdate = now\n\t\tthis.objs.forEach(oo => oo.update(dt))\n\t}\n\n\tdraw = (pg: p5.Graphics) => {\n\t\tfor (const obj of this.objs) {\n\t\t\tobj.draw(pg)\n\t\t\tobj.drawShadow(pg)\n\t\t\tif (this.debug) {\n\t\t\t\tobj.drawDebug(pg)\n\t\t\t}\n\t\t}\n\t}\n\n\tdraw2D = (pp: p5, pg: p5.Graphics) => {\n\t\tconst gg = pg as any\n\t\tconst mvp = gg._renderer.uMVMatrix.copy().mult(gg._renderer.uPMatrix)\n\t\tfor (const obj of this.objs) {\n\t\t\tobj.draw2D(pp, pg, mvp.mat4)\n\t\t}\n\t}\n}\n\nexport const engine3d = new Engine3D({ debug: false })\n","import * as p5 from 'p5'\nimport { Vec } from './Vec'\nimport { Xform } from './Xform'\nimport { Component } from './Component'\nimport { engine3d } from './engine3d'\n\nexport type drawFunc = (pg: p5.Graphics) => void\nexport type drawFunc2D = (pp: p5, pos: Vec, scale: number) => void\n\nexport type ObjOpts = {\n\tparent?: Obj\n\tchildren?: Obj[]\n\tcomps?: Component[]\n\tpos?: Vec\n\trot?: Vec\n\tscale?: Vec\n\tdraw?: drawFunc\n\tdrawShadow?: drawFunc\n\tdraw2D?: drawFunc2D\n}\n\nexport class Obj {\n\tchildren: Obj[] = []\n\tcomps: Component[] = []\n\txform: Xform = new Xform()\n\tparent?: Obj\n\tdrawFunc?: drawFunc\n\tdrawShadowFunc?: drawFunc\n\tdrawFunc2D?: drawFunc2D\n\n\tconstructor(opts: ObjOpts = {}) {\n\t\t// console.log('[Obj] ctor', this)\n\t\tthis.drawFunc = opts.draw\n\t\tthis.drawFunc2D = opts.draw2D\n\t\tthis.parent = opts.parent\n\t\tif (opts.children) {\n\t\t\tthis.children = opts.children\n\t\t}\n\t\tif (opts.comps) {\n\t\t\tthis.comps = opts.comps\n\t\t}\n\t\tif (opts.pos) {\n\t\t\tthis.xform.pos = opts.pos\n\t\t}\n\t\tif (opts.rot) {\n\t\t\tthis.xform.rot = opts.rot\n\t\t}\n\t\tif (opts.scale) {\n\t\t\tthis.xform.scale = opts.scale\n\t\t}\n\t\tengine3d.addObj(this)\n\t}\n\n\tdestroy = () => {\n\t\tthis.comps.forEach(cc => cc.destroy())\n\t\tthis.children.forEach(cc => cc.destroy())\n\t\t// console.log('[Obj] destroyed')\n\t}\n\trm = () => {\n\t\tif (this.parent) {\n\t\t\tthis.parent.rmChild(this)\n\t\t} else {\n\t\t\tengine3d.rmObj(this)\n\t\t}\n\t}\n\n\taddChild = (obj: Obj) => {\n\t\tengine3d.rmObj(obj, false) // remove Obj from root hierarchy\n\t\tobj.parent = this\n\t\tthis.children.push(obj)\n\t}\n\trmChild = (obj: Obj) => {\n\t\tthis.children = this.children.filter(cc => {\n\t\t\tif (cc === obj) {\n\t\t\t\tcc.destroy()\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn true\n\t\t})\n\t}\n\tgetChildren = (objType: any) => this.children.filter(oo => oo instanceof objType)\n\tgetChild = (objType: any): Obj | undefined => this.getChildren(objType)[0]\n\n\taddComp = (comp: Component) => {\n\t\tthis.comps.push(comp)\n\t}\n\trmComp = (comp: Component) => {\n\t\tthis.comps = this.comps.filter(cc => {\n\t\t\tif (cc === comp) {\n\t\t\t\tcc.destroy()\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn true\n\t\t})\n\t}\n\tgetComps = (compType: any) => this.comps.filter(cc => cc instanceof compType)\n\tgetComp = (compType: any): Component | undefined => this.getComps(compType)[0]\n\n\tupdate(dt: number) {\n\t\tthis.comps.forEach(cc => cc.update(dt))\n\t\tthis.children.forEach(cc => cc.update(dt))\n\t}\n\n\tdraw(pg: p5.Graphics) {\n\t\tpg.push()\n\t\tthis.applyXformToGraphics(pg)\n\t\tif (this.drawFunc) {\n\t\t\tthis.drawFunc(pg)\n\t\t}\n\t\tthis.children.forEach(cc => cc.draw(pg))\n\t\tpg.pop()\n\t}\n\n\tdrawShadow(pg: p5.Graphics) {\n\t\t// Similar to draw, but xformed to ground plane\n\t\tpg.push()\n\t\tconst { pos, rot, scale } = this.xform\n\t\tpg.translate(pos.x, 0, pos.z)\n\t\tif (rot.y !== 0) pg.rotateY(rot.y)\n\t\tpg.scale(scale.x, 1, scale.z)\n\t\tif (this.drawShadowFunc) {\n\t\t\tthis.drawShadowFunc(pg)\n\t\t}\n\t\tthis.children.forEach(cc => cc.drawShadow(pg))\n\t\tpg.pop()\n\t}\n\n\tdraw2D(pp: p5, pg: p5.Graphics, mvp: number[]) {\n\t\tthis.children.forEach(cc => cc.draw2D(pp, pg, mvp))\n\t\tif (!this.drawFunc2D) {\n\t\t\treturn\n\t\t}\n\t\tconst { pos, scale } = this.xform\n\t\tconst ndcPos = pos.cloneMultMat(mvp)\n\t\tconst edge = 1.2\n\t\tif (ndcPos.w < 0 || ndcPos.x < -edge || ndcPos.x > edge || ndcPos.y < -edge || ndcPos.y > edge) {\n\t\t\t// object is off-screen\n\t\t\treturn\n\t\t}\n\t\t// calculate a rough-guess at screen-space scale\n\t\t// (would use inverse MVP matrix but I can't get p5's matrix invert method to work)\n\t\tconst ndcPos2 = pos.cloneAdd(scale).cloneMultMat(mvp)\n\t\tconst ndcPos3 = pos.cloneAdd(scale.cloneMult(new Vec(1, -1, -1))).cloneMultMat(mvp)\n\t\tconst ndcPos4 = pos.cloneAdd(scale.cloneMult(new Vec(-1, -1, 1))).cloneMultMat(mvp)\n\t\tfor (const ndc of [ndcPos, ndcPos2, ndcPos3, ndcPos4]) {\n\t\t\tndc.x = ((ndc.x + 1) * pp.width) / 2\n\t\t\tndc.y = ((1 - ndc.y) * pp.height) / 2\n\t\t\tndc.z = 0\n\t\t}\n\t\tconst scale2d = Math.max(\n\t\t\tndcPos.cloneSub(ndcPos2).mag(),\n\t\t\tndcPos.cloneSub(ndcPos3).mag(),\n\t\t\tndcPos.cloneSub(ndcPos4).mag(),\n\t\t)\n\t\tpp.push()\n\t\tthis.drawFunc2D(pp, ndcPos, scale2d)\n\t\tpp.pop()\n\t}\n\n\tdrawDebug = (pg: p5.Graphics) => {\n\t\tthis.comps.forEach(cc => cc.drawDebug && cc.drawDebug(pg))\n\t}\n\n\tapplyXformToGraphics = (pg: p5.Graphics) => {\n\t\tconst { pos, rot, scale } = this.xform\n\t\tif (!pos.isZero()) {\n\t\t\tpg.translate(pos.x, pos.y, pos.z)\n\t\t}\n\t\tif (rot.z !== 0) pg.rotateZ(rot.z)\n\t\tif (rot.y !== 0) pg.rotateY(rot.y)\n\t\tif (rot.x !== 0) pg.rotateX(rot.x)\n\t\tif (!scale.isOne()) {\n\t\t\tpg.scale(scale.x, scale.y, scale.z)\n\t\t}\n\t}\n}\n","import { Bounds, Component, Obj, Vec } from '../core'\n\nconst gravity = new Vec(0, -9.82, 0)\nexport type PhysicalOpts = {\n\tbounds?: Bounds\n\tworldScale?: number\n}\n\n// Physical is a very simple physics implementation, applying forces\n// to the parent object and constraining it to a hard-coded world bounds\nexport class Physical extends Component {\n\tforce = new Vec()\n\tvel = new Vec()\n\tbounds: Bounds\n\tworld: Bounds\n\n\tconstructor(parent: Obj, opts: PhysicalOpts = {}) {\n\t\tsuper(parent)\n\t\tthis.bounds = opts.bounds ? opts.bounds : new Bounds()\n\t\tif (!opts.worldScale) {\n\t\t\topts.worldScale = 1000\n\t\t}\n\t\tthis.world = new Bounds(\n\t\t\tnew Vec(-opts.worldScale, 0, -opts.worldScale),\n\t\t\tnew Vec(opts.worldScale, opts.worldScale, opts.worldScale),\n\t\t)\n\t}\n\n\tupdate = (dt: number) => {\n\t\t// Update velocity based on forces\n\t\tthis.vel.applyAdd(gravity.cloneAdd(this.force).applyMult(dt))\n\t\tthis.vel.applyMult(new Vec(0.8, 1.0, 0.8)) // friction in X and Z\n\t\tif (this.vel.magSq() < 0.01) {\n\t\t\t// Velocity threshold\n\t\t\tthis.vel.applyMult(0)\n\t\t}\n\t\t// Update position based on velocity\n\t\tconst { pos } = this.parent.xform\n\t\tpos.applyAdd(this.vel)\n\t\t// Constrain to world bounds\n\t\tconst off = this.worldBounds().pushInside(this.world)\n\t\tif (off.isZero()) {\n\t\t\treturn\n\t\t}\n\t\t// Apply constraint offset\n\t\tpos.applyAdd(off)\n\t\t// Bounce the velocity\n\t\tif (off.x !== 0) {\n\t\t\tthis.vel.x *= -0.5\n\t\t}\n\t\tif (off.y !== 0) {\n\t\t\tthis.vel.y *= -0.5\n\t\t}\n\t\tif (off.z !== 0) {\n\t\t\tthis.vel.z *= -0.5\n\t\t}\n\t}\n\n\tdrawDebug = (pg: p5.Graphics) => {\n\t\tconst { center, size } = this.worldBounds().centerAndSize()\n\t\tpg.push()\n\t\tpg.noFill()\n\t\tpg.stroke(255, 0, 0)\n\t\tpg.strokeWeight(1)\n\t\tpg.translate(center.x, center.y, center.z)\n\t\tpg.box(size.x, size.y, size.z)\n\t\tpg.pop()\n\t}\n\n\tworldBounds = () => this.bounds.cloneXform(this.parent.xform)\n}\n","import { EasyCam } from 'vendor/p5.easycam.js'\nimport { Component, Obj } from '../core'\n\n// FollowCam locks an EasyCam's center to the parent Obj\nexport class FollowCam extends Component {\n\tcam: EasyCam\n\n\tconstructor(parent: Obj, cam: EasyCam) {\n\t\tsuper(parent)\n\t\tthis.cam = cam\n\t}\n\n\tlast?: number\n\tupdate = (dt: number) => {\n\t\tif (!this.cam.state || !this.cam.state.center) {\n\t\t\treturn\n\t\t}\n\t\tconst { x, y, z } = this.parent.xform.pos\n\t\tthis.cam.setCenter([x, y, z], 0)\n\t}\n}\n","import * as p5 from 'p5'\nimport * as Tone from 'tone'\nimport seedrandom from 'seedrandom'\nimport { Component, Obj, ObjOpts, Vec } from '../core'\nimport { MidiEventNote } from 'app/MIDI'\nimport { ControlChange } from 'app/Instrument'\nimport { InstControls } from 'app/InstControls'\n\nexport type DancerCC = ControlChange & {\n\tctrls: InstControls\n\tlocalUser: boolean\n\ttime: number\n}\n\nconst defaultEnvOpts = {\n\tattack: '0:0.25:0',\n\tattackCurve: 'linear',\n\tdecay: '0:0.5:0',\n\tdecayCurve: 'linear',\n\tsustain: 1,\n\trelease: '0:0.5:0',\n\treleaseCurve: 'linear',\n} as Tone.EnvelopeOptions\n\nclass DanceMoves extends Component {\n\tenvs: { [key: string]: Tone.Envelope } = {\n\t\tdip: new Tone.Envelope(defaultEnvOpts),\n\t\tstepLeft: new Tone.Envelope(defaultEnvOpts),\n\t\tstepRight: new Tone.Envelope(defaultEnvOpts),\n\t\tspinLeft: new Tone.Envelope(defaultEnvOpts),\n\t\tspinRight: new Tone.Envelope(defaultEnvOpts),\n\t\theadbang: new Tone.Envelope(defaultEnvOpts),\n\t\tarmsLUpperY: new Tone.Envelope(defaultEnvOpts),\n\t\tarmsLUpperZ: new Tone.Envelope(defaultEnvOpts),\n\t\tarmsLLowerX: new Tone.Envelope(defaultEnvOpts),\n\t\tarmsRUpperY: new Tone.Envelope(defaultEnvOpts),\n\t\tarmsRUpperZ: new Tone.Envelope(defaultEnvOpts),\n\t\tarmsRLowerX: new Tone.Envelope(defaultEnvOpts),\n\t}\n\n\tupdate = (dt: number) => {\n\t\tconst obj = this.parent as DancerObj\n\t\tconst { envs } = this\n\t\tobj.xform.pos.y = -envs.dip.value * sizes.leg.y * 0.8\n\t\tobj.stepLeftRight = 0.5 * (envs.stepRight.value - envs.stepLeft.value)\n\t\tconst avatar = obj.parent || obj\n\t\tavatar.xform.rot.y += dt * 20 * (envs.spinRight.value - envs.spinLeft.value)\n\t\tobj.rotHead.x = (envs.headbang.value * Math.PI) / 4\n\t\tobj.rotArms.l.upper.y = Math.PI * (0.4 - 0.7 * envs.armsLUpperY.value)\n\t\tobj.rotArms.r.upper.y = Math.PI * (0.4 - 0.7 * envs.armsRUpperY.value)\n\t\tobj.rotArms.l.upper.z = Math.PI * (1.1 + envs.armsLUpperZ.value)\n\t\tobj.rotArms.r.upper.z = Math.PI * (1.1 + envs.armsRUpperZ.value)\n\t\tobj.rotArms.l.lower.x = Math.PI * (0.1 + 0.7 * envs.armsLLowerX.value)\n\t\tobj.rotArms.r.lower.x = Math.PI * (0.1 + 0.7 * envs.armsRLowerX.value)\n\t}\n\n\tnoteEnvMap: { [key: number]: Tone.Envelope } = {\n\t\t0: this.envs.dip,\n\t\t1: this.envs.spinLeft,\n\t\t2: this.envs.headbang,\n\t\t3: this.envs.spinRight,\n\t\t4: this.envs.stepLeft,\n\t\t5: this.envs.stepRight,\n\t\t6: this.envs.armsLUpperZ,\n\t\t7: this.envs.armsRUpperZ,\n\t\t8: this.envs.armsLLowerX,\n\t\t9: this.envs.armsRLowerX,\n\t\t10: this.envs.armsLUpperY,\n\t\t11: this.envs.armsRUpperY,\n\t}\n\n\tnoteEvent = (time: number, evt: MidiEventNote) => {\n\t\tconst { kind, note, attack } = evt\n\t\tconst move = this.noteEnvMap[note % 12]\n\t\tif (kind === 'noteon') {\n\t\t\tmove.triggerAttack(time, attack)\n\t\t} else {\n\t\t\tmove.triggerRelease(time)\n\t\t}\n\t}\n\n\thandleADSR = (props: { [key: string]: string | number }) => {\n\t\tfor (const kk in this.envs) {\n\t\t\tconst env = this.envs[kk]\n\t\t\tenv.set(props)\n\t\t}\n\t}\n}\n\nconst sizes = {\n\tleg: new Vec(0.1, 0.5, 0.1),\n\tarmUpper: new Vec(0.1, 0.3, 0.1),\n\tarmLower: new Vec(0.1, 0.3, 0.1),\n\tbody: new Vec(0.4),\n\tneck: new Vec(0.05),\n\thead: new Vec(0.25),\n}\n\nconst defaultArmsRot = () => ({\n\tupper: new Vec(0, Math.PI * 0.4, Math.PI * 1.1),\n\tlower: new Vec(Math.PI * 0.1, 0, 0),\n})\n\nexport class DancerObj extends Obj {\n\tmoves: DanceMoves\n\trotHead = new Vec()\n\trotArms = {\n\t\tl: defaultArmsRot(),\n\t\tr: defaultArmsRot(),\n\t}\n\tstepLeftRight = 0\n\tvol = 0.5\n\tcolors: { [key: string]: { hue: number; sat: number; lgt: number } } = {\n\t\tstroke: { hue: 0, sat: 0, lgt: 0.9 },\n\t\tbody: { hue: 0, sat: 0, lgt: 0 },\n\t\thead: { hue: 0, sat: 0, lgt: 0 },\n\t\tarmUpper: { hue: 0, sat: 0, lgt: 0 },\n\t\tarmLower: { hue: 0, sat: 0, lgt: 0 },\n\t\thand: { hue: 0, sat: 0, lgt: 0 },\n\t}\n\n\tconstructor(opts: ObjOpts = {}) {\n\t\tsuper(opts)\n\t\tthis.moves = new DanceMoves(this)\n\t\tthis.addComp(this.moves)\n\t}\n\n\tnoteEvent = (time: number, evt: MidiEventNote) => {\n\t\tif (evt.attack) {\n\t\t\tevt.attack *= this.vol * 2\n\t\t}\n\t\tthis.moves.noteEvent(time, evt)\n\t}\n\n\thandleCC = (cc: DancerCC) => {\n\t\tconst { evt, ctrls, localUser, time } = cc\n\t\tif (!evt) {\n\t\t\tconsole.log('[DancerObj #handleCC] Received CC call with missing info', cc)\n\t\t\treturn\n\t\t}\n\t\tif (localUser) {\n\t\t\t// Update sliders if evt is from the local user\n\t\t\tctrls.controlchangeNext(evt)\n\t\t\tTone.Draw.schedule(() => ctrls.controlchange(evt), time)\n\t\t}\n\t\tconst slider = ctrls.getSliderForCtrl(evt.controller.number)\n\t\tif (!slider) {\n\t\t\tconsole.log('[DancerObj #handleCC] Unable to find control for CC event', cc)\n\t\t\treturn\n\t\t}\n\t\tconst tt = '0:' + evt.value + ':0' // Tone timecode for floating beat unit\n\t\tswitch (slider.label) {\n\t\t\tcase 'vol':\n\t\t\t\tthis.vol = evt.value\n\t\t\t\tbreak\n\t\t\tcase 'mod':\n\t\t\t\tTone.Draw.schedule(() => this.handleModwheel(evt.value), time)\n\t\t\t\tbreak\n\t\t\tcase 'a':\n\t\t\t\tthis.moves.handleADSR({ attack: tt })\n\t\t\t\tbreak\n\t\t\tcase 'd':\n\t\t\t\tthis.moves.handleADSR({ decay: tt })\n\t\t\t\tbreak\n\t\t\tcase 's':\n\t\t\t\tthis.moves.handleADSR({ sustain: evt.value })\n\t\t\t\tbreak\n\t\t\tcase 'r':\n\t\t\t\tthis.moves.handleADSR({ release: tt })\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\thandleModwheel = (val: number) => {\n\t\tconst rng = seedrandom(`${val}`)\n\t\tfor (const kk in this.colors) {\n\t\t\tconst part = this.colors[kk]\n\t\t\tpart.hue = rng.quick()\n\t\t\tpart.sat = val ? rng.quick() * 0.7 + 0.3 : 0\n\t\t\tpart.lgt = val * 0.7\n\t\t\tif (kk === 'stroke') {\n\t\t\t\tpart.lgt = 0.9 - part.lgt\n\t\t\t}\n\t\t}\n\t}\n\n\tsetFill = (pg: p5.Graphics, part: string) => {\n\t\tconst col = this.colors[part]\n\t\tpg.fill(col.hue, col.sat, col.lgt)\n\t}\n\n\tdrawFunc = (pg: p5.Graphics) => {\n\t\tconst { leg, body } = sizes\n\t\tconst cs = this.colors.stroke\n\t\tpg.colorMode(pg.HSL, 1)\n\t\tpg.stroke(cs.hue, cs.sat, cs.lgt).strokeWeight(2)\n\t\tpg.translate(this.stepLeftRight, -1 + leg.y + body.y, 0)\n\t\tthis.setFill(pg, 'body')\n\t\tpg.sphere(sizes.body.y, 7, 4)\n\t\tthis.setFill(pg, 'head')\n\t\tthis.drawHead(pg)\n\t\tthis.drawArm(pg, true)\n\t\tthis.drawArm(pg, false)\n\t}\n\n\tdrawHead = (pg: p5.Graphics) => {\n\t\tconst { body, neck, head } = sizes\n\t\tpg.push()\n\t\tpg.rotateX(this.rotHead.x)\n\t\tpg.push()\n\t\tpg.translate(0, body.y + neck.y + head.y, 0)\n\t\tpg.box(head.y * 1.8, head.y * 1.8, head.y * 1.8)\n\t\tpg.pop()\n\t\tpg.pop()\n\t}\n\n\tdrawArm = (pg: p5.Graphics, left = true) => {\n\t\tconst { body, armUpper, armLower } = sizes\n\t\tconst rot = left ? this.rotArms.l : this.rotArms.r\n\t\tpg.push()\n\t\tif (left) {\n\t\t\tpg.scale(-1, 1, 1)\n\t\t}\n\t\tpg.translate(body.x, body.y * 0.8, 0)\n\t\tpg.rotateZ(rot.upper.z).rotateY(rot.upper.y)\n\t\tpg.translate(0, armUpper.y / 2, 0)\n\t\tthis.setFill(pg, 'armUpper')\n\t\tpg.box(armUpper.x, armUpper.y, armUpper.z)\n\t\tpg.translate(0, 0.025 + armUpper.y / 2, 0)\n\t\tpg.rotateX(rot.lower.x)\n\t\tpg.translate(0, 0.025 + armLower.y / 2, 0)\n\t\tthis.setFill(pg, 'armLower')\n\t\tpg.box(armLower.x, armLower.y, armLower.z)\n\t\tpg.translate(0, 0.05 + armLower.y / 2 + armLower.x / 2, 0)\n\t\tthis.setFill(pg, 'hand')\n\t\tpg.box(armLower.x, armLower.x, armLower.x)\n\t\tpg.pop()\n\t}\n\n\tdrawShadowFunc = (pg: p5.Graphics) => {\n\t\tpg.push()\n\t\tpg.fill(30).noStroke()\n\t\tpg.rotateX(Math.PI / 2)\n\t\tpg.circle(this.stepLeftRight, 0, sizes.body.x * 2)\n\t\tpg.pop()\n\t}\n}\n","import * as p5 from 'p5'\nimport { EasyCam } from 'vendor/p5.easycam.js'\nimport { User, UserForce, UserXform } from 'app/serverApi/serverApi'\nimport { Obj, ObjOpts, Vec } from '../core'\nimport { Physical, PhysicalOpts, FollowCam } from '../components'\nimport { DancerObj } from './DancerObj'\n\ntype KeyMovement = {\n\tup: boolean\n\tdown: boolean\n\tleft: boolean\n\tright: boolean\n\tjump: boolean\n\tjumpInitial: boolean\n\tgain: number\n}\n\ntype forceFunc = (data: UserXform) => void\n\nexport type AvatarOpts = ObjOpts & {\n\tuser: User\n\tphys?: PhysicalOpts\n\tonForce?: forceFunc\n}\n\nexport class Avatar extends Obj {\n\tphys: Physical\n\tuser: User\n\tfollowCam?: FollowCam\n\tonForce?: forceFunc\n\tdancer: DancerObj\n\tfacing: Vec\n\n\tkeys: KeyMovement = {\n\t\tup: false,\n\t\tdown: false,\n\t\tleft: false,\n\t\tright: false,\n\t\tjump: false,\n\t\tjumpInitial: false,\n\t\tgain: 100,\n\t}\n\n\tconstructor(opts: AvatarOpts) {\n\t\tsuper(opts)\n\t\tthis.user = opts.user\n\t\tthis.phys = new Physical(this, opts.phys)\n\t\tthis.comps = [this.phys]\n\t\tthis.onForce = opts.onForce\n\t\tthis.dancer = new DancerObj()\n\t\tthis.facing = new Vec(0, 0, 1)\n\t\tthis.addChild(this.dancer)\n\t\tconsole.log('[Avatar] ctor', this)\n\t}\n\n\tupdate(dt: number) {\n\t\tsuper.update(dt)\n\t\tif (this.keys.jumpInitial) {\n\t\t\tthis.keys.jumpInitial = false\n\t\t\tthis.keysUpdated()\n\t\t}\n\t}\n\n\tdrawFunc2D = (pp: p5, pos: Vec, scale: number) => {\n\t\tconst { name, instrument, offset } = this.user\n\t\tif (scale < 15) {\n\t\t\treturn // avatar is very small on screen, so no text\n\t\t}\n\t\tconst ss = Math.min(scale, 50)\n\t\tconst sss = Math.min(scale, 200)\n\t\tpp.translate(pos.x, pos.y)\n\t\tpp.textAlign(pp.CENTER, pp.BOTTOM)\n\t\tpp.fill(255)\n\t\tpp.noStroke()\n\t\tpp.textSize(ss / 2)\n\t\tpp.textStyle(pp.BOLD)\n\t\tif (scale < 35) {\n\t\t\tpp.text(name, 0, -ss * 0.8)\n\t\t\treturn\n\t\t} else {\n\t\t\tpp.text(name, 0, -sss * 0.8)\n\t\t}\n\t\tpp.fill(225)\n\t\tpp.textSize(ss * 0.3)\n\t\tpp.textStyle(pp.ITALIC)\n\t\tpp.text(`${instrument} (@${offset > 0 ? '+' : ''}${offset})`, 0, -sss * 0.8 + ss * 0.35)\n\t}\n\n\taddFollowCam = (cam: EasyCam) => {\n\t\tthis.followCam = new FollowCam(this, cam)\n\t\tthis.followCam.update(0)\n\t\tthis.addComp(this.followCam)\n\t}\n\n\tgetUserXform = (): UserXform => ({\n\t\tclientId: this.user.clientId,\n\t\tpos: this.xform.pos.toArray(),\n\t\trot: this.xform.rot.toArray(),\n\t\tscale: this.xform.scale.toArray(),\n\t\tforce: this.phys.force.toArray(),\n\t\tvel: this.phys.vel.toArray(),\n\t})\n\n\tsetUserXform = (data: UserXform) => {\n\t\tthis.xform.pos.setFromArray(data.pos)\n\t\tthis.xform.rot.setFromArray(data.rot)\n\t\tthis.xform.scale.setFromArray(data.scale)\n\t\tthis.phys.force.setFromArray(data.force)\n\t\tthis.phys.vel.setFromArray(data.vel)\n\t}\n\n\tsetUserForce = (data: UserForce) => {\n\t\tthis.phys.force.setFromArray(data.force)\n\t}\n\n\t//\n\t// Keyboard state updates and movement controls\n\t//\n\tkeyPressed = (evt: p5) => this.keyChanged(evt, true)\n\tkeyReleased = (evt: p5) => this.keyChanged(evt, false)\n\tkeyChanged = (evt: p5, pressed: boolean) => {\n\t\tswitch (evt.key) {\n\t\t\tcase 'ArrowUp':\n\t\t\t\tthis.keys.up = pressed\n\t\t\t\tbreak\n\t\t\tcase 'ArrowDown':\n\t\t\t\tthis.keys.down = pressed\n\t\t\t\tbreak\n\t\t\tcase 'ArrowLeft':\n\t\t\t\tthis.keys.left = pressed\n\t\t\t\tbreak\n\t\t\tcase 'ArrowRight':\n\t\t\t\tthis.keys.right = pressed\n\t\t\t\tbreak\n\t\t\tcase ' ':\n\t\t\t\tthis.keys.jump = pressed\n\t\t\t\tthis.keys.jumpInitial = pressed\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\treturn\n\t\t}\n\t\tthis.keysUpdated()\n\t}\n\n\t// keysUpdated applies force to the Physical component based on keyboard state and camera orientation\n\tkeysUpdated = () => {\n\t\tconst { up, down, left, right, jump, jumpInitial, gain } = this.keys\n\t\tconst mov = new Vec()\n\t\tmov.x = left && right ? 0 : left ? -gain : right ? gain : 0\n\t\tmov.y = jumpInitial && this.xform.pos.y < this.xform.scale.y * 1.5 ? gain * 3 : jump ? 6 : 0\n\t\tmov.z = down && up ? 0 : up ? gain : down ? -gain : 0\n\t\tif (!this.followCam) {\n\t\t\t// Can't determine camera orientation, apply force in world-space\n\t\t\tthis.phys.force = mov\n\t\t\tif (this.onForce) {\n\t\t\t\tthis.onForce(this.getUserXform())\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\t// Convert movement vector to force based on camera orientation\n\t\tconst ca = this.followCam.cam.centerAxes() // X=screen-right Z=screen-up, parallel to ground plane\n\t\tconst cax = new Vec(ca.x[0], 0, ca.x[2])\n\t\tconst caz = new Vec(ca.z[0], 0, ca.z[2])\n\t\tconst ff = new Vec(0, mov.y, 0)\n\t\tff.applyAdd(cax.applyMult(mov.x))\n\t\tff.applyAdd(caz.applyMult(mov.z))\n\t\tthis.phys.force = ff\n\t\tif (ff.x !== 0 || ff.z !== 0) {\n\t\t\t// Orient avatar to movement direction\n\t\t\tthis.xform.rot.y = Math.atan2(ff.x, ff.z)\n\t\t\tthis.facing = ff.clone().normalize()\n\t\t}\n\t\tif (this.onForce) {\n\t\t\tthis.onForce(this.getUserXform())\n\t\t}\n\t}\n}\n","import * as p5 from 'p5'\nimport { Obj, Vec } from '../core'\nimport { sketch } from 'app/Sketch'\nimport { BlackHole } from 'app/instruments'\n\nexport class BlackHoleObj extends Obj {\n\torigin2D = new Vec()\n\tscale2D = 1\n\n\tdraw(pg: p5.Graphics) {\n\t\tif (sketch && sketch.shaderBlackHole && sketch.backbuffer) {\n\t\t\tconst blackHole = sketch.instruments.blackHole as BlackHole\n\t\t\tpg.shader(sketch.shaderBlackHole)\n\t\t\tsketch.shaderBlackHole.setUniform('backbuffer', sketch.backbuffer)\n\t\t\tsketch.shaderBlackHole.setUniform('size', [pg.width, pg.height])\n\t\t\tsketch.shaderBlackHole.setUniform('rotate', blackHole.modwheel * Math.PI)\n\t\t}\n\t\tpg.fill(0, 0).noStroke()\n\t\tsuper.draw(pg) // apply xform and draw children\n\t\tpg.resetShader()\n\t}\n}\n","import * as p5 from 'p5'\nimport { Obj } from '../core'\n\nexport class Ground extends Obj {\n\thue = 0\n\tsat = 0\n\tlgt = 0.25\n\n\tdrawFunc = (pg: p5.Graphics) => {\n\t\tpg.colorMode(pg.HSL, 1).noFill().strokeWeight(4).stroke(this.hue, this.sat, 0.25)\n\t\tpg.rotateX(Math.PI / 2)\n\t\t// Draw the perimeter\n\t\tpg.rect(-1, -1, 2, 2)\n\t\t// Draw a square at the origin and in the middle of each quadrant to help\n\t\t// give the user more reference for distance as they move around\n\t\tconst sz = 0.05\n\t\tpg.rect(-sz, -sz, sz * 2, sz * 2)\n\t\tpg.rect(-0.5 - sz, -0.5 - sz, sz * 2, sz * 2)\n\t\tpg.rect(0.5 - sz, -0.5 - sz, sz * 2, sz * 2)\n\t\tpg.rect(0.5 - sz, 0.5 - sz, sz * 2, sz * 2)\n\t\tpg.rect(-0.5 - sz, 0.5 - sz, sz * 2, sz * 2)\n\t}\n}\n","export const KEYCODE_RETURN = 3\nexport const KEYCODE_ENTER = 13\nexport const KEYCODE_BACKSPACE = 8\nexport const KEYCODE_DELETE = 46\nexport const KEYCODE_SHIFT = 16\nexport const KEYCODE_CONTROL = 17\nexport const KEYCODE_ESC = 27\n\nexport const BLACK_KEYS = [1, 3, 6, 8, 10]\n","import {\n\tparseClientId,\n\tparseUsersAll,\n\tparseUserEvent,\n\tparseUserForce,\n\tparseUserXform,\n\tUser,\n\tUserEvent,\n\tUserForce,\n\tUserXform,\n\tWS_CLIENT_ID,\n\tWS_HEADER_END,\n\tWS_URL,\n\tWS_USERS_ALL,\n\tWS_USER_EVENT,\n\tWS_USER_FORCE,\n\tWS_USER_XFORM,\n\tWS_USER_REQUEST_XFORMS,\n} from './serverApi'\nimport { parseClockUpdate, ClockOpts, WS_CLOCK_NOW, WS_CLOCK_ORIGIN, WS_CLOCK_UPDATE } from './serverClock'\nimport WSClock, { WSClockOptions } from './WSClock'\n\nexport const DONT_REOPEN = 888\n\nexport type WSClientOptions = {\n\tclock: Partial<WSClockOptions>\n\tonClientId: (clientId: number) => any\n\tonClockUpdate: (clkOpts: ClockOpts) => void\n\tonUsers: (users: User[]) => void\n\tonUserEvent: (evt: UserEvent) => void\n\tonUserForce: (evt: UserForce) => void\n\tonUserXform: (evt: UserXform) => void\n\tonUserRequestXforms: () => void\n}\n\nexport default class WSClient {\n\tconn: WebSocket\n\tclock: WSClock\n\tglobal: any\n\toptions: WSClientOptions\n\tclientId: number = 0\n\tusers: User[] = []\n\tisReady = false\n\n\tconstructor(global: any, options: WSClientOptions) {\n\t\tthis.global = global\n\t\tthis.options = options as WSClientOptions\n\t\tthis.conn = this.newConn()\n\t\tthis.clock = new WSClock(this.global, this.conn, this.options.clock)\n\t}\n\n\treopen = () => {\n\t\t// Try to re-open the websocket connection if it has closed\n\t\tif (this.conn.readyState !== WebSocket.CLOSED) {\n\t\t\treturn\n\t\t}\n\t\tthis.conn = this.newConn()\n\t}\n\n\tready = () => this.conn && this.conn.readyState === WebSocket.OPEN && this.isReady\n\n\tnewConn = (): WebSocket => {\n\t\tthis.isReady = false\n\t\tconst conn = new WebSocket(WS_URL)\n\t\tconn.onclose = (evt: CloseEvent) => {\n\t\t\tif (evt.code === DONT_REOPEN) {\n\t\t\t\tconsole.warn('Closing for good', evt)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconsole.warn('WebSocket closed, will attempt to reopen in a few seconds', evt)\n\t\t\tsetTimeout(this.reopen, 5000)\n\t\t}\n\t\tconn.onopen = (evt: Event) => {\n\t\t\tconsole.log('WebSocket opened', evt)\n\t\t\tthis.clock.destroy()\n\t\t\tthis.clock = new WSClock(this.global, this.conn, this.options.clock)\n\t\t}\n\t\tconn.onerror = (evt: Event) => {\n\t\t\tconsole.error('WebSocket error', evt)\n\t\t}\n\t\tconn.onmessage = this.onMessage\n\t\treturn conn\n\t}\n\n\tonMessage = (evt: MessageEvent) => {\n\t\tconst parts = split(evt.data, WS_HEADER_END, 1)\n\t\tconst [head, body] = parts\n\t\tswitch (head) {\n\t\t\tcase WS_CLIENT_ID:\n\t\t\t\tthis.isReady = true\n\t\t\t\tthis.clientId = parseClientId(body)\n\t\t\t\tconsole.log('[WSClient #onMessage] Received clientId', this.clientId)\n\t\t\t\tthis.options.onClientId(this.clientId)\n\t\t\t\tbreak\n\t\t\tcase WS_CLOCK_NOW:\n\t\t\tcase WS_CLOCK_ORIGIN:\n\t\t\t\tif (!this.clock) {\n\t\t\t\t\tconsole.error('[WSClient #onMessage] No local clock ready to handle server clock message')\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (head === WS_CLOCK_ORIGIN) {\n\t\t\t\t\tthis.clock.onClockOrigin(body)\n\t\t\t\t} else {\n\t\t\t\t\tthis.clock.onClockNow(body)\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase WS_CLOCK_UPDATE:\n\t\t\t\tconst clkOpts = parseClockUpdate(body)\n\t\t\t\tthis.options.onClockUpdate(clkOpts)\n\t\t\t\tconsole.log('[WSClient #onMessage] Received clockUpdate', clkOpts)\n\t\t\t\tbreak\n\t\t\tcase WS_USERS_ALL:\n\t\t\t\tthis.users = parseUsersAll(body).filter(uu => !!uu)\n\t\t\t\t// console.log('[WSClient #onMessage] Received users', this.users)\n\t\t\t\tthis.options.onUsers(this.users)\n\t\t\t\tbreak\n\t\t\tcase WS_USER_EVENT: {\n\t\t\t\tconst uevt = parseUserEvent(body)\n\t\t\t\t// console.log('[WSClient #onMessage] Received user event', uevt)\n\t\t\t\tthis.options.onUserEvent(uevt)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase WS_USER_FORCE: {\n\t\t\t\tconst uevt = parseUserForce(body)\n\t\t\t\t// console.log('[WSClient #onMessage] Received user event', uevt)\n\t\t\t\tthis.options.onUserForce(uevt)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase WS_USER_XFORM: {\n\t\t\t\tconst uevt = parseUserXform(body)\n\t\t\t\t// console.log('[WSClient #onMessage] Received user event', uevt)\n\t\t\t\tthis.options.onUserXform(uevt)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase WS_USER_REQUEST_XFORMS: {\n\t\t\t\tconsole.log('[WSClient #onMessage] Received Xform request')\n\t\t\t\tthis.options.onUserRequestXforms()\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.log('[WSClient #onMessage] Unhandled message', { head, body, parts }, evt)\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\tnow = (): number => {\n\t\tif (!this.clock) {\n\t\t\tconsole.error('[WSClient #now] No clock!')\n\t\t\treturn -1\n\t\t}\n\t\treturn this.clock.now()\n\t}\n\n\tgetUser = (clientId: number) => {\n\t\tfor (const uu of this.users) {\n\t\t\tif (uu.clientId === clientId) {\n\t\t\t\treturn uu\n\t\t\t}\n\t\t}\n\t}\n}\n\n// split function with remainder\n// via https://stackoverflow.com/questions/874709/converting-user-input-string-to-regular-expression\nfunction split(str: string, sep: string, nn: number) {\n\tconst out: string[] = []\n\tconst sepRe = new RegExp(sep, 'g')\n\twhile (nn--) {\n\t\tconst prevIndex = sepRe.lastIndex\n\t\tconst re = sepRe.exec(str)\n\t\tif (!re) {\n\t\t\tbreak\n\t\t}\n\t\tout.push(str.slice(prevIndex, re.index))\n\t}\n\tout.push(str.slice(sepRe.lastIndex))\n\treturn out\n}\n","type FieldsShared = {\n\tdata: number[]\n\tchannel: number\n\tkind: string\n}\n\ntype FieldsNote = {\n\tattack?: number\n\tnote: number\n\trelease?: number\n}\n\ntype FieldsCC = {\n\tvalue: number // 0 - 1 (data[2])\n\tcontroller: {\n\t\tnumber: number // (data[1])\n\t\tname: string\n\t}\n}\n\ntype FieldsPitchbend = {\n\tvalue: number // 0 - 1 (data[2])\n}\n\nexport type MidiEventNote = FieldsShared & FieldsNote\nexport type MidiEventCC = FieldsShared & FieldsCC\nexport type MidiEventPitchbend = FieldsShared & FieldsPitchbend\nexport type MidiEvent = FieldsShared & FieldsCC & FieldsNote & FieldsPitchbend\nexport function newMidiEvent(evt: any): MidiEvent {\n\treturn {\n\t\tdata: evt.data,\n\t\tchannel: evt.target.number,\n\t\tkind: evt.type,\n\t\tattack: evt.attack,\n\t\tnote: evt.note && evt.note._number,\n\t\trelease: evt.release,\n\t\tvalue: evt.value,\n\t\tcontroller: evt.controller,\n\t}\n}\n\nconst allChannels = [...Array(16).keys()].map(x => x + 1) // Array of numbers 1 thru 16\nconst allEvents = ['controlchange', 'noteoff', 'noteon', 'pitchbend'] // 'keyaftertouch',\n\ntype MIDIOptions = {\n\tonMessage: (inputName: string, eventName: string, evt: MidiEvent) => void\n\tonEnabled?: (webMidi: any) => void\n}\n\nexport default class MIDI {\n\twebMidi: any | null = null\n\tenabled: boolean = false\n\n\tconstructor(opts: MIDIOptions) {\n\t\tthis.enable(opts)\n\t}\n\n\tenable = async (opts: MIDIOptions) => {\n\t\tconst { onMessage, onEnabled } = opts\n\t\tconst { WebMidi } = window\n\t\ttry {\n\t\t\tawait WebMidi.enable()\n\t\t} catch (err) {\n\t\t\tconsole.error('[MIDI #enable] Failed to enable MIDI', err)\n\t\t\treturn\n\t\t}\n\t\tthis.webMidi = WebMidi\n\t\tthis.enabled = true\n\t\tconst { inputs, outputs } = this.webMidi\n\t\tconsole.log('[MIDI #enable] inputs', inputs)\n\t\tconsole.log('[MIDI #enable] outputs', outputs)\n\t\tif (onEnabled) {\n\t\t\tonEnabled(this.webMidi)\n\t\t}\n\t\tfor (const input of inputs) {\n\t\t\tfor (const eventName of allEvents) {\n\t\t\t\tinput.addListener(\n\t\t\t\t\teventName,\n\t\t\t\t\t(evt: any) => onMessage(input.name, eventName, newMidiEvent(evt)),\n\t\t\t\t\t{\n\t\t\t\t\t\tchannels: allChannels,\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n}\n","import * as Tone from 'tone'\nimport { Vec } from 'engine3d'\nimport seedrandom from 'seedrandom'\n\nexport function noteFreq(note: number) {\n\treturn Tone.Frequency(note, 'midi').toFrequency()\n}\n\nexport const srand = () => Math.random() * 2 - 1\n\nexport const srandVec = () => new Vec(srand(), srand(), srand())\n\nconst _ctrlColorMemo: { [key: string]: number } = {}\nexport const ctrlColor = (ctrl: string) => {\n\tconst sat = 0.8,\n\t\tlgt = 0.4\n\tif (_ctrlColorMemo[ctrl]) {\n\t\treturn { hue: _ctrlColorMemo[ctrl], sat, lgt }\n\t}\n\t// override seed for some ctrls if their default color is too close to others\n\tlet seed = ctrl\n\tswitch (ctrl) {\n\t\tcase '21':\n\t\t\tseed = '21###'\n\t\t\tbreak\n\t\tcase '22':\n\t\t\tseed = '22&$&'\n\t\t\tbreak\n\t\tcase '73':\n\t\t\tseed = '73##'\n\t\t\tbreak\n\t\tcase '77':\n\t\t\tseed = '77#'\n\t\t\tbreak\n\t}\n\t_ctrlColorMemo[ctrl] = seedrandom(seed).quick()\n\treturn {\n\t\thue: _ctrlColorMemo[ctrl],\n\t\tsat,\n\t\tlgt,\n\t}\n}\n","import * as Tone from 'tone'\nimport * as p5 from 'p5'\nimport { sketch } from './Sketch'\nimport { ctrlColor } from './util'\nimport { MidiEvent, MidiEventCC, MidiEventPitchbend } from './MIDI'\n\n// type Sliders = { [key: string]: InstControl }\ntype InstSlidersOpts = { sliders: InstControl[] }\n\nexport class InstControls {\n\tsliders: InstControl[]\n\n\tconstructor(opts: InstSlidersOpts = { sliders: [] }) {\n\t\tthis.sliders = opts.sliders\n\t}\n\n\tupdate = (pp: p5) => {\n\t\tfor (const ss of this.sliders) {\n\t\t\tss.update(pp)\n\t\t}\n\t}\n\n\tdraw = (pp: p5) => {\n\t\tpp.push()\n\t\tconst { sliders } = this\n\t\tlet xx = 30\n\t\tfor (const ss of sliders) {\n\t\t\tss.xx = xx\n\t\t\tss.draw(pp)\n\t\t\txx += ss.width\n\t\t\tif (['ff', 'a', 'd', 's'].includes(ss.label)) {\n\t\t\t\t// no margin\n\t\t\t} else if (['pb', 'pan'].includes(ss.label)) {\n\t\t\t\txx += ss.width / 2 // half margin\n\t\t\t} else {\n\t\t\t\txx += ss.width // full margin\n\t\t\t}\n\t\t}\n\t\tpp.pop()\n\t}\n\n\tmousePressed = (evt: p5) => {\n\t\tconst { mouse } = sketch.cam || {}\n\t\tfor (const ss of this.sliders) {\n\t\t\tif (ss.mousePressed(evt.mouseX, evt.mouseY)) {\n\t\t\t\tif (mouse) {\n\t\t\t\t\tmouse.ismousedown = false\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\n\tmouseReleased = (_evt: p5) => {\n\t\tthis.sliders.forEach(ss => ss.mouseReleased())\n\t}\n\n\tcontrolchangeNext = (evt: MidiEventCC): InstControl | undefined => {\n\t\tconst ss = this.getSliderForCtrl(evt.controller.number)\n\t\tif (ss && !ss.pressed) {\n\t\t\tss.valueNext = evt.value\n\t\t}\n\t\treturn ss\n\t}\n\tcontrolchange = (evt: MidiEventCC): InstControl | undefined => {\n\t\tconst ss = this.getSliderForCtrl(evt.controller.number)\n\t\tif (ss) {\n\t\t\tss.value.value = evt.value\n\t\t}\n\t\treturn ss\n\t}\n\n\tpitchbendNext = (evt: MidiEventPitchbend): InstControl | undefined => {\n\t\tconst ss = this.getSliderForPitchbend()\n\t\tif (ss && !ss.pressed) {\n\t\t\tss.valueNext = evt.value\n\t\t}\n\t\treturn ss\n\t}\n\tpitchbend = (evt: MidiEventPitchbend): InstControl | undefined => {\n\t\tconst ss = this.getSliderForPitchbend()\n\t\tif (ss) {\n\t\t\tss.value.value = evt.value\n\t\t}\n\t\treturn ss\n\t}\n\n\tgetSliderForLabel = (lbl: string): InstControl | undefined => {\n\t\tconst sliders = this.sliders.filter(s => s.label === lbl)\n\t\treturn sliders[0]\n\t}\n\tgetSliderForCtrl = (ctrl: number): InstControl | undefined => {\n\t\tconst sliders = this.sliders.filter(s => s.ctrl === ctrl)\n\t\treturn sliders[0]\n\t}\n\tgetSliderForPitchbend = (): InstControl | undefined => {\n\t\tconst sliders = this.sliders.filter(s => s.pitchbend)\n\t\treturn sliders[0]\n\t}\n}\n\ntype InstSliderOpts = {\n\tlabel: string\n\tctrl: number\n\tvalue?: number\n\tpitchbend?: boolean\n}\n\nexport class InstControl {\n\theight = 150\n\twidth = 20\n\tvalue = new Tone.Signal(0)\n\tvalueNext = 0\n\tstrokeWeight = 4\n\txx = 40\n\tyy = 100\n\tpressed = false\n\tlabel: string\n\tctrl: number\n\tpitchbend: boolean\n\n\tconstructor(opts: InstSliderOpts) {\n\t\tthis.label = opts.label\n\t\tthis.ctrl = opts.ctrl\n\t\tif (opts.value) {\n\t\t\tthis.set(opts.value)\n\t\t}\n\t\tthis.pitchbend = !!opts.pitchbend\n\t}\n\n\t_wasPressed = false\n\tupdate(pp: p5) {\n\t\tif (!this.pressed) {\n\t\t\tif (this.pitchbend && this._wasPressed) {\n\t\t\t\tthis.valueNext = 0\n\t\t\t\tthis.sendValue()\n\t\t\t}\n\t\t\tthis._wasPressed = false\n\t\t\treturn\n\t\t}\n\t\tthis._wasPressed = true\n\t\tthis.setValueNext(pp.mouseY)\n\t}\n\n\t_ee = 0\n\tdraw(pp: p5) {\n\t\tpp.colorMode(pp.HSL, 1)\n\t\tpp.fill(0, 0, 0.1).stroke(0, 0, 0.7).strokeWeight(this.strokeWeight)\n\t\tpp.rect(this.xx, this.yy, this.width, this.height)\n\t\tconst col = ctrlColor(`${this.ctrl}`)\n\t\tpp.fill(col.hue, col.sat * 0.3, col.lgt).noStroke()\n\t\tthis.drawVal(pp, this.valueNext)\n\t\tpp.fill(col.hue, col.sat, col.lgt).noStroke()\n\t\tthis.drawVal(pp, this.value.value)\n\t\tpp.fill(0, 0, 0.8).stroke(0).strokeWeight(1)\n\t\tpp.textSize(10).textAlign(pp.CENTER, pp.TOP).textStyle(pp.BOLD)\n\t\tpp.text(this.label.toUpperCase(), this.xx + this.width / 2, this.yy + this.height + 5)\n\t}\n\n\tdrawVal(pp: p5, val: number) {\n\t\tconst vw = this.width - this.strokeWeight\n\t\tconst vx = this.xx + this.strokeWeight / 2\n\t\tpp.square(vx, this.valueY(val), vw)\n\t}\n\n\tmousePressed(mouseX: number, mouseY: number) {\n\t\tif (mouseX < this.xx || mouseX > this.xx + this.width) {\n\t\t\treturn false\n\t\t}\n\t\tif (mouseY < this.yy || mouseY > this.yy + this.height) {\n\t\t\treturn false\n\t\t}\n\t\tthis.setValueNext(mouseY)\n\t\tthis.pressed = true\n\t\treturn true\n\t}\n\tmouseReleased() {\n\t\tthis.pressed = false\n\t}\n\n\tsetValueNext(mouseY: number) {\n\t\tconst tt = this.yy + this.width / 2\n\t\tconst hh = this.height - this.width - this.strokeWeight / 2\n\t\tconst vv = 1 - (mouseY - tt) / hh\n\t\tif (this.pitchbend) {\n\t\t\tthis.valueNext = Math.max(-1, Math.min(1, vv * 2 - 1))\n\t\t} else {\n\t\t\tthis.valueNext = Math.max(0, Math.min(1, vv))\n\t\t}\n\t\tthis.sendValue()\n\t}\n\n\tvalueLastSent = 0\n\tsendValue() {\n\t\tif (this.valueNext === this.valueLastSent) {\n\t\t\treturn\n\t\t}\n\t\tthis.valueLastSent = this.valueNext\n\t\t// Send update\n\t\tconst midiEvt = {\n\t\t\tkind: this.pitchbend ? 'pitchbend' : 'controlchange',\n\t\t\tcontroller: this.pitchbend ? undefined : { number: this.ctrl, name: this.label },\n\t\t\tvalue: this.valueNext,\n\t\t} as MidiEvent\n\t\tsketch.sendUserEvent('keyboard', midiEvt.kind, midiEvt)\n\t}\n\n\tvalueY(val: number) {\n\t\tconst tt = this.yy + this.width / 2\n\t\tconst hh = this.height - this.width\n\t\tconst vv = this.pitchbend ? val / 2 + 0.5 : val\n\t\treturn (1 - vv) * hh + tt - this.width / 2 + this.strokeWeight / 2\n\t}\n\n\tset(val: number) {\n\t\tthis.value.value = val\n\t\tif (!this.pressed) {\n\t\t\tthis.valueNext = val\n\t\t}\n\t}\n}\n","import * as Tone from 'tone'\nimport { Avatar } from 'engine3d'\nimport { MidiEventCC, MidiEventNote, MidiEventPitchbend } from './MIDI'\nimport { InstControl, InstControls } from './InstControls'\n\nexport type ControlChange = {\n\tavatar?: Avatar\n\tevt?: MidiEventCC\n\tslider?: InstControl\n}\n\nexport type ADSR = Partial<{\n\tattack: number\n\tdecay: number\n\tsustain: number\n\trelease: number\n}>\n\nexport type FilterProps = Partial<{\n\tfrequency: number\n\tQ: number\n}>\n\nexport class Instrument {\n\tctrls = new InstControls({\n\t\tsliders: [\n\t\t\tnew InstControl({ label: 'pb', ctrl: -1, pitchbend: true }),\n\t\t\tnew InstControl({ label: 'mod', ctrl: 1, value: 0.0 }),\n\t\t\tnew InstControl({ label: 'ff', ctrl: 21, value: 0.67 }), // Filter freq\n\t\t\tnew InstControl({ label: 'fq', ctrl: 22, value: 0.0 }), // Filter Q\n\t\t\tnew InstControl({ label: 'a', ctrl: 71, value: 0.05 }),\n\t\t\tnew InstControl({ label: 'd', ctrl: 72, value: 0.1 }),\n\t\t\tnew InstControl({ label: 's', ctrl: 73, value: 1.0 }),\n\t\t\tnew InstControl({ label: 'r', ctrl: 74, value: 0.4 }),\n\t\t\tnew InstControl({ label: 'pan', ctrl: 27, value: 0.5 }),\n\t\t\tnew InstControl({ label: 'vol', ctrl: 28, value: 0.857 }),\n\t\t],\n\t})\n\tpanVol?: Tone.PanVol // automatically bound to pan/vol sliders\n\thandleDetune?: (val: number) => void // called when pitchbend control changes\n\thandleModwheel?: (val: number) => void // called when modwheel control changes\n\thandleFilter?: (props: FilterProps) => void // called when filter controls change\n\thandleADSR?: (props: ADSR) => void // called when ADSR controls change\n\n\tloaded() {\n\t\treturn false\n\t}\n\n\tnoteon(_avatar: Avatar, _time: number, _evt: MidiEventNote) {}\n\tnoteoff(_avatar: Avatar, _time: number, _evt: MidiEventNote) {}\n\n\tcontrolchange(avatar: Avatar, time: number, evt: MidiEventCC) {\n\t\tthis.ctrls.controlchangeNext(evt)\n\t\tTone.Draw.schedule(() => {\n\t\t\tconst slider = this.ctrls.controlchange(evt)\n\t\t\tconst cc = { avatar, evt, slider }\n\t\t\tthis.handleCC(cc)\n\t\t}, time)\n\t}\n\n\tpitchbend(avatar: Avatar, time: number, evt: MidiEventPitchbend) {\n\t\tthis.ctrls.pitchbendNext(evt)\n\t\tTone.Draw.schedule(() => {\n\t\t\tconst slider = this.ctrls.pitchbend(evt)\n\t\t\tconst cc = { avatar, evt, slider } as ControlChange\n\t\t\tthis.handlePitchbend(cc)\n\t\t}, time)\n\t}\n\n\thandleCC(cc: ControlChange) {\n\t\tconst { slider } = cc\n\t\tif (!slider) {\n\t\t\treturn\n\t\t}\n\t\tconst { label, pitchbend } = slider\n\t\tif (pitchbend) {\n\t\t\tif (this.handlePitchbend) {\n\t\t\t\tthis.handlePitchbend(cc)\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tlet vv = slider.value.value\n\n\t\tif (label === 'mod') {\n\t\t\tif (this.handleModwheel) {\n\t\t\t\tthis.handleModwheel(vv)\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tif (['ff', 'fq'].includes(label)) {\n\t\t\tif (this.handleFilter) {\n\t\t\t\tif (label === 'ff') {\n\t\t\t\t\tthis.handleFilter({ frequency: Math.pow(10, vv * 3 + 1) }) // 10 to 10000\n\t\t\t\t} else {\n\t\t\t\t\tthis.handleFilter({ Q: vv * vv * 8 })\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\t// Apply ADSR val to envelope\n\t\tif (['a', 'd', 's', 'r'].includes(label)) {\n\t\t\tif (!this.handleADSR) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (['a', 'd', 'r'].includes(label)) {\n\t\t\t\tvv = 10 * vv * vv * vv * vv + 0.0001\n\t\t\t} else {\n\t\t\t\tvv *= vv\n\t\t\t}\n\t\t\tswitch (label) {\n\t\t\t\tcase 'a':\n\t\t\t\t\tthis.handleADSR({ attack: vv })\n\t\t\t\t\tbreak\n\t\t\t\tcase 'd':\n\t\t\t\t\tthis.handleADSR({ decay: vv })\n\t\t\t\t\tbreak\n\t\t\t\tcase 's':\n\t\t\t\t\tthis.handleADSR({ sustain: vv })\n\t\t\t\t\tbreak\n\t\t\t\tcase 'r':\n\t\t\t\t\tthis.handleADSR({ release: vv })\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tif (label === 'vol') {\n\t\t\tif (this.panVol) {\n\t\t\t\tthis.panVol.mute = !vv\n\t\t\t\tthis.panVol.set({ volume: vv * 70 - 60 })\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tif (label === 'pan') {\n\t\t\tif (this.panVol) {\n\t\t\t\tthis.panVol.set({ pan: vv * 2 - 1 })\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t}\n\n\thandlePitchbend = (cc: ControlChange) => {\n\t\tif (!this.handleDetune) {\n\t\t\treturn\n\t\t}\n\t\tconst { evt, slider } = cc\n\t\tif (slider) {\n\t\t\tthis.handleDetune(slider.value.value)\n\t\t\treturn\n\t\t}\n\t\tif (evt) {\n\t\t\tthis.handleDetune(evt.value)\n\t\t\treturn\n\t\t}\n\t}\n}\n","import * as p5 from 'p5'\nimport * as Tone from 'tone'\nimport { MidiEventNote } from '../MIDI'\nimport { ADSR, ControlChange, FilterProps, Instrument } from '../Instrument'\nimport { noteFreq, srand, srandVec } from '../util'\nimport { Avatar, Obj, ObjOpts, Vec } from 'engine3d'\nimport { sketch } from '../Sketch'\n\nexport class BlackHole extends Instrument {\n\tpanVol: Tone.PanVol\n\treverb: Tone.Reverb\n\tfilter: Tone.Filter\n\tsynth: Tone.Synth\n\tfreqNode = new Tone.Add()\n\tfreq = new Tone.Signal(440)\n\tnoiseGain: Tone.Gain\n\tnoise: Tone.Noise\n\tmodwheel = 0.3\n\tps = 0\n\tpsSpread = 7\n\tobjs: Obj[] = []\n\tmaxObjs = 32\n\tii = 0\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.panVol = new Tone.PanVol(0, 0).toDestination()\n\t\tthis.reverb = new Tone.Reverb({ decay: 4, wet: 0.6 }).connect(this.panVol)\n\t\tthis.filter = new Tone.Filter({ type: 'lowpass' }).connect(this.reverb)\n\t\tconst delay = new Tone.PingPongDelay({\n\t\t\tdelayTime: '4n',\n\t\t\tfeedback: 0.6,\n\t\t\twet: 0.3,\n\t\t}).connect(this.filter)\n\t\tthis.synth = new Tone.Synth().connect(delay)\n\t\tthis.freqNode.connect(this.synth.frequency)\n\t\tthis.freq.connect(this.freqNode)\n\t\tthis.noiseGain = new Tone.Gain(100).connect(this.freqNode.addend)\n\t\tthis.noise = new Tone.Noise({ volume: 0, playbackRate: 0.5, type: 'brown' })\n\t\t\t.start()\n\t\t\t.connect(this.noiseGain)\n\n\t\t// Initialize control sliders\n\t\tfor (const ss of this.ctrls.sliders) {\n\t\t\tswitch (ss.label) {\n\t\t\t\tcase 'mod':\n\t\t\t\t\tss.set(0.3)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'ff':\n\t\t\t\t\tss.set(0.9)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'fq':\n\t\t\t\t\tss.set(0.25)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'a':\n\t\t\t\t\tss.set(0.1)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'd':\n\t\t\t\t\tss.set(0.3)\n\t\t\t\t\tbreak\n\t\t\t\tcase 's':\n\t\t\t\t\tss.set(0.66)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'r':\n\t\t\t\t\tss.set(0.6)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tfor (const ss of this.ctrls.sliders) {\n\t\t\tthis.handleCC({ slider: ss })\n\t\t}\n\t}\n\n\tloaded() {\n\t\treturn true\n\t}\n\n\t_attacks = 0\n\tnoteon = (avatar: Avatar, time: number, evt: MidiEventNote) => {\n\t\tconst freq = noteFreq(evt.note)\n\t\ttry {\n\t\t\tif (this._attacks) {\n\t\t\t\tthis.freq.exponentialRampToValueAtTime(freq, time)\n\t\t\t} else {\n\t\t\t\tthis.freq.setValueAtTime(freq, time)\n\t\t\t\tthis.synth.triggerAttack(freq, time, evt.attack)\n\t\t\t}\n\t\t} catch {}\n\t\tthis._attacks++\n\t\tTone.Draw.schedule(() => this.addBHObj(avatar, evt), time)\n\t}\n\tnoteoff = (_avatar: Avatar, time: number, _evt: MidiEventNote) => {\n\t\tthis._attacks = Math.max(0, this._attacks - 1)\n\t\tif (!this._attacks) {\n\t\t\tthis.synth.triggerRelease(time)\n\t\t}\n\t}\n\n\thandleDetune = (val: number) => {\n\t\tthis.ps = val\n\t\tthis.synth.set({ detune: 100 * val * this.psSpread })\n\t}\n\n\thandleModwheel = (val: number) => {\n\t\tthis.modwheel = val\n\t\tconst vv = val * val\n\t\tthis.noiseGain.set({ gain: vv * this.freq.value * 3 })\n\t}\n\n\thandleFilter = (props: FilterProps) => this.filter.set(props)\n\thandleADSR = (props: ADSR) => this.synth.set({ envelope: props })\n\n\thandleCC(cc: ControlChange) {\n\t\tsuper.handleCC(cc)\n\t\tconst { evt } = cc\n\t\tif (!evt) {\n\t\t\treturn\n\t\t}\n\t\t// Handle customized control events that don't have sliders\n\t\tconst num = evt.controller.number\n\t\tlet vv = evt.value * evt.value\n\t\tswitch (true) {\n\t\t\tcase num === 23:\n\t\t\t\tthis.noise.set({ playbackRate: vv * 2 })\n\t\t\t\tbreak\n\t\t\tcase num === 24:\n\t\t\t\tthis.synth.set({ portamento: vv * 2 })\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\tlastPos: { [key: number]: Vec } = {}\n\taddBHObj = (avatar: Avatar, evt: MidiEventNote) => {\n\t\tconst { blackHole } = sketch\n\t\tif (!blackHole) {\n\t\t\treturn\n\t\t}\n\t\t// Create obj for note\n\t\tconst objSize = 130\n\t\tconst { objs, maxObjs } = this\n\t\tconst { clientId } = avatar.user\n\t\tlet pos = avatar.xform.pos\n\t\tif (this.lastPos[clientId]) {\n\t\t\tpos = this.lastPos[clientId]\n\t\t}\n\t\tconst off = new Vec(srand(), Math.random(), srand()).applyMult(objSize * 0.6)\n\t\tpos = pos.cloneAdd(off)\n\t\tif (this.ii++ % 16 === 0 || pos.y > 1000) {\n\t\t\tfor (const oo of objs) {\n\t\t\t\too.xform.scale.applyMult(0.8)\n\t\t\t}\n\t\t\tconst { facing, xform } = avatar\n\t\t\tconst { pos: apos, scale: ascale } = xform\n\t\t\tconst theta = Math.random() * Math.PI * 2\n\t\t\tconst ff = facing.cloneMult(-objSize * 3)\n\t\t\tpos.x = apos.x + ff.x + ascale.x * 3 * Math.sin(theta)\n\t\t\tpos.y = apos.y\n\t\t\tpos.z = apos.z + ff.z + ascale.x * 3 * Math.cos(theta)\n\t\t}\n\t\tthis.lastPos[clientId] = pos\n\t\tconst rot = new Vec(\n\t\t\tMath.random() * Math.PI * 2,\n\t\t\tMath.random() * Math.PI * 2,\n\t\t\tMath.random() * Math.PI * 2,\n\t\t)\n\t\tlet extraScale = pos.y / 1000\n\t\textraScale *= extraScale * extraScale * 10 * objSize\n\t\tconst obj = new BHObj(this, {\n\t\t\tnoteEvt: evt,\n\t\t\tpos: pos,\n\t\t\trot: rot,\n\t\t\tscale: new Vec(objSize * 0.7 + extraScale),\n\t\t\ttwist: this.modwheel * this.modwheel,\n\t\t\tmass: evt.attack || 0.7,\n\t\t})\n\t\tobjs.unshift(obj)\n\t\t// Add obj to root blackhole object\n\t\tblackHole.addChild(obj)\n\t\tif (objs.length > maxObjs) {\n\t\t\t// remove oldest obj\n\t\t\tblackHole.rmChild(objs[objs.length - 1])\n\t\t\tthis.objs = objs.slice(0, maxObjs)\n\t\t}\n\t}\n}\n\ntype BHObjOpts = ObjOpts & {\n\tnoteEvt: MidiEventNote\n\ttwist: number\n\tmass: number\n}\n\nclass BHObj extends Obj {\n\tinst: BlackHole\n\tcreatedAt: number\n\tnoteEvt: MidiEventNote\n\tscaleOrig: Vec\n\tvoice: Tone.Synth | null = null\n\thue = Math.random()\n\tmass: number\n\ttwist = 0\n\n\tconstructor(inst: BlackHole, opts: BHObjOpts) {\n\t\tsuper(opts)\n\t\tthis.inst = inst\n\t\tthis.createdAt = new Date().valueOf() / 1000\n\t\tthis.noteEvt = opts.noteEvt\n\t\tthis.scaleOrig = this.xform.scale.clone()\n\t\tthis.mass = 1 - opts.mass // invert to apply square\n\t\tthis.mass = 1 - this.mass * this.mass // un-invert the square\n\t\tif (opts.twist) {\n\t\t\tthis.twist = Math.random() > 0.5 ? opts.twist : -opts.twist\n\t\t}\n\t}\n\n\tupdate = (dt: number) => {\n\t\tlet mod = 1 - this.inst.modwheel // invert to apply square\n\t\tmod = 1 - mod * mod // un-invert the square\n\t\tthis.xform.rot.applyAdd(srandVec().applyMult(dt * mod))\n\t}\n\n\torigin2D = new Vec()\n\tscale2D = 1\n\tdrawFunc = (pg: p5.Graphics) => {\n\t\tif (sketch.shaderBlackHole) {\n\t\t\tsketch.shaderBlackHole.setUniform('origin', [\n\t\t\t\tthis.origin2D.x / pg.width,\n\t\t\t\tthis.origin2D.y / pg.height,\n\t\t\t])\n\t\t\tsketch.shaderBlackHole.setUniform('scale', this.scale2D / pg.width)\n\t\t\tsketch.shaderBlackHole.setUniform('rotate', this.twist * Math.PI)\n\t\t\tsketch.shaderBlackHole.setUniform('mass', this.mass)\n\t\t}\n\t\tpg.sphere(1, 3, 4)\n\t}\n\n\tdrawFunc2D = (pp: p5, pos: Vec, scale: number) => {\n\t\tthis.origin2D = pos\n\t\tthis.scale2D = Math.min(pp.height * 2, scale)\n\t}\n}\n","import { Avatar } from 'engine3d'\nimport { MidiEventCC, MidiEventNote } from '../MIDI'\nimport { Instrument } from '../Instrument'\nimport { InstControl } from '../InstControls'\nimport { sketch } from '../Sketch'\n\nexport class Dancer extends Instrument {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.ctrls.sliders = [\n\t\t\tnew InstControl({ label: 'mod', ctrl: 1, value: 0.0 }), // color of the dancer\n\t\t\tnew InstControl({ label: 'a', ctrl: 71, value: 0.25 }), // unit = beats\n\t\t\tnew InstControl({ label: 'd', ctrl: 72, value: 0.25 }), // unit = beats\n\t\t\tnew InstControl({ label: 's', ctrl: 73, value: 1.0 }),\n\t\t\tnew InstControl({ label: 'r', ctrl: 74, value: 0.5 }), // unit = beats\n\t\t\tnew InstControl({ label: 'vol', ctrl: 28, value: 0.5 }), // amplitude of movements\n\t\t]\n\t}\n\n\tloaded() {\n\t\treturn true\n\t}\n\n\tlr = -1\n\tnoteon = (avatar: Avatar, time: number, evt: MidiEventNote) => {\n\t\tavatar.dancer.noteEvent(time, evt)\n\t}\n\n\tnoteoff = (avatar: Avatar, time: number, evt: MidiEventNote) => {\n\t\tavatar.dancer.noteEvent(time, evt)\n\t}\n\n\tcontrolchange(avatar: Avatar, time: number, evt: MidiEventCC) {\n\t\tavatar.dancer.handleCC({\n\t\t\tevt,\n\t\t\tctrls: this.ctrls,\n\t\t\tlocalUser: avatar === sketch.avatar,\n\t\t\ttime,\n\t\t})\n\t}\n}\n","import * as Tone from 'tone'\nimport { Avatar } from 'engine3d'\nimport { MidiEventNote } from '../MIDI'\nimport { FilterProps, Instrument } from '../Instrument'\nimport { InstControl } from '../InstControls'\nimport { noteFreq } from '../util'\n\nexport class Sampler extends Instrument {\n\tpanVol: Tone.PanVol\n\tfilter: Tone.Filter\n\tpitchShift: Tone.PitchShift\n\tsampler: Tone.Sampler\n\tps = 0\n\tpsSpread = 7\n\n\tconstructor(sampler: Tone.Sampler) {\n\t\tsuper()\n\t\tthis.panVol = new Tone.PanVol(0, 0).toDestination()\n\t\tthis.filter = new Tone.Filter({ type: 'bandpass' }).connect(this.panVol)\n\t\tthis.pitchShift = new Tone.PitchShift().connect(this.filter)\n\t\tthis.sampler = sampler.connect(this.pitchShift)\n\t\tthis.ctrls.sliders = [\n\t\t\tnew InstControl({ label: 'pb', ctrl: -1, pitchbend: true }),\n\t\t\tnew InstControl({ label: 'mod', ctrl: 1, value: 0.0 }),\n\t\t\tnew InstControl({ label: 'ff', ctrl: 21, value: 0.67 }),\n\t\t\tnew InstControl({ label: 'fq', ctrl: 22, value: 0.0 }),\n\t\t\tnew InstControl({ label: 'pan', ctrl: 27, value: 0.5 }),\n\t\t\tnew InstControl({ label: 'vol', ctrl: 28, value: 0.857 }),\n\t\t]\n\t\tfor (const ss of this.ctrls.sliders) {\n\t\t\tthis.handleCC({ slider: ss })\n\t\t}\n\t}\n\n\tloaded() {\n\t\treturn this.sampler.loaded\n\t}\n\n\tnoteon = (_avatar: Avatar, time: number, evt: MidiEventNote) => {\n\t\tthis.sampler.triggerAttack(noteFreq(evt.note), time, evt.attack)\n\t}\n\n\tnoteoff = (_avatar: Avatar, time: number, evt: MidiEventNote) => {\n\t\tthis.sampler.triggerRelease(noteFreq(evt.note), time)\n\t}\n\n\thandleDetune = (val: number) => {\n\t\tthis.ps = val\n\t\tthis.pitchShift.pitch = this.ps * this.psSpread\n\t}\n\n\thandleModwheel = (val: number) => {\n\t\t// bind modwheel to filter freq and Q\n\t\tconst ff = this.ctrls.getSliderForLabel('ff')\n\t\tif (ff) {\n\t\t\tff.set(val)\n\t\t\tthis.handleCC({ slider: ff })\n\t\t}\n\t\tconst fq = this.ctrls.getSliderForLabel('fq')\n\t\tif (fq) {\n\t\t\tconst sin = Math.sin(val * Math.PI)\n\t\t\tlet vv = 1 - val\n\t\t\tvv = 1 - vv * vv * vv\n\t\t\tfq.set(sin * 0.2 + 0 + 0.2 * vv)\n\t\t\tthis.handleCC({ slider: fq })\n\t\t}\n\t}\n\n\thandleFilter = (props: FilterProps) => this.filter.set(props)\n}\n","import * as Tone from 'tone'\nimport { Avatar } from 'engine3d'\nimport { Sampler } from './Sampler'\nimport { MidiEventNote } from '../MIDI'\nimport { noteFreq } from '../util'\nimport Sketch from '../Sketch'\n\nconst samps = [\n\t'BD0010.WAV',\n\t'BD0050.WAV',\n\t// 'BD0025.WAV',\n\t// 'BD0075.WAV',\n\t'SD7510.WAV',\n\t'CP.WAV',\n\t// 'SD7550.WAV',\n\t// 'SD7500.WAV',\n\t// 'SD7525.WAV',\n\t'CH.WAV',\n\t'OH10.WAV',\n\t'LT00.WAV',\n\t'MT00.WAV',\n\t'HT00.WAV',\n\t'LC00.WAV',\n\t'MC00.WAV',\n\t'HC00.WAV',\n\t'CB.WAV',\n\t'CY0075.WAV',\n\t// 'CY1000.WAV',\n\t'MA.WAV',\n\t'RS.WAV',\n\t// 'CL.WAV',\n]\n\nfunction eightOhEight() {\n\tconst urls: { [key: number]: string } = {}\n\tfor (let ii = 0; ii < samps.length; ++ii) {\n\t\turls[ii] = samps[ii % samps.length]\n\t}\n\treturn new Tone.Sampler({\n\t\turls,\n\t\trelease: 1,\n\t\tbaseUrl: '/samples/808/',\n\t})\n}\n\nexport class EightOhEight extends Sampler {\n\tsketch: Sketch\n\n\tconstructor(sketch: Sketch) {\n\t\tsuper(eightOhEight())\n\t\tthis.sketch = sketch\n\t}\n\n\tmodNote(note: number) {\n\t\treturn (note + 12) % samps.length\n\t}\n\n\tnoteon = (_avatar: Avatar, time: number, note: MidiEventNote) => {\n\t\tlet nn = this.modNote(note.note)\n\t\tthis.sampler.triggerAttack(noteFreq(nn), time, note.attack)\n\t\tTone.Draw.schedule(() => {\n\t\t\t// Update color of sky & ground\n\t\t\tconst { bgCol, ground } = this.sketch\n\t\t\tbgCol.hue = Math.random()\n\t\t\tbgCol.sat = Math.random() * 0.4 + 0.5\n\t\t\tground.hue = bgCol.hue\n\t\t\tground.sat = bgCol.sat\n\t\t\tground.lgt = bgCol.lgt * 1.35\n\t\t}, time)\n\t}\n\n\tnoteoff = (_avatar: Avatar, time: number, note: MidiEventNote) => {\n\t\tlet nn = this.modNote(note.note)\n\t\tthis.sampler.triggerRelease(noteFreq(nn), time)\n\t}\n}\n","import * as Tone from 'tone'\nimport { engine3d, Avatar, Obj, ObjOpts, Vec } from 'engine3d'\nimport { MidiEventNote } from '../MIDI'\nimport { ADSR, ControlChange, FilterProps, Instrument } from '../Instrument'\nimport { noteFreq } from '../util'\nimport { worldScale } from '../Sketch'\n\n// Hoover implements a very rough approximation of a Alpha Juno 2 'rave hoover'\n// by amplitude-modulating a fatsawtooth by a fatsquare (would have used pulse\n// like the Juno does, but Tone doesn't have a fatpulse oscillator built in)\n//\n// References:\n// * https://www.listarc.bham.ac.uk/lists/sc-users-2009/msg53728.html\n// * ...via http://superdupercollider.blogspot.com/2009/06/more-dominator-deconstruction.html\n// * ...via https://tidalcycles.org/index.php/All_effects_and_synths#superhoover\nexport class Hoover extends Instrument {\n\tchorus: Tone.Chorus\n\tfilter: Tone.Filter\n\tamGain: Tone.Gain\n\tsynth: Tone.Synth\n\tamOsc: Tone.OmniOscillator<Tone.FatOscillator>\n\tpanVol: Tone.PanVol\n\tps = 0\n\tpsSpread = 7\n\tharmonicity = new Tone.Multiply(3.03)\n\tfreq = 440\n\tmodwheel = 1\n\tobj = new HooverObj(this, {\n\t\tscale: new Vec(worldScale * 2),\n\t\tpos: new Vec(0, 100, -worldScale),\n\t})\n\twave: Tone.Waveform\n\tfft: Tone.FFT\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.panVol = new Tone.PanVol(0, 0).toDestination()\n\t\tthis.chorus = new Tone.Chorus(0.15, 30, 1).connect(this.panVol)\n\t\tthis.filter = new Tone.Filter({ type: 'bandpass' }).connect(this.chorus)\n\t\tthis.amGain = new Tone.Gain(1).connect(this.filter)\n\t\tthis.synth = new Tone.Synth({\n\t\t\toscillator: {\n\t\t\t\ttype: 'fatsawtooth',\n\t\t\t\tcount: 4,\n\t\t\t\tspread: 59,\n\t\t\t},\n\t\t\tportamento: 0.25,\n\t\t}).connect(this.amGain)\n\t\tconst amScale = new Tone.AudioToGain().connect(this.amGain.gain)\n\t\tthis.amOsc = new Tone.OmniOscillator({\n\t\t\ttype: 'fatsquare',\n\t\t\tcount: 3,\n\t\t\tspread: 30,\n\t\t})\n\t\t\t.start()\n\t\t\t.connect(amScale)\n\t\tthis.synth.frequency.chain(this.harmonicity, this.amOsc.frequency)\n\n\t\t// Waveform and FFT\n\t\tthis.wave = new Tone.Waveform(32)\n\t\tthis.panVol.connect(this.wave)\n\t\tthis.fft = new Tone.FFT({\n\t\t\tsize: 16,\n\t\t\tnormalRange: true,\n\t\t})\n\t\tthis.panVol.connect(this.fft)\n\n\t\t// Initialize control sliders\n\t\tfor (const ss of this.ctrls.sliders) {\n\t\t\tswitch (ss.label) {\n\t\t\t\tcase 'mod':\n\t\t\t\t\tss.set(1.0)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'a':\n\t\t\t\t\tss.set(0.6)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'd':\n\t\t\t\t\tss.set(0.07)\n\t\t\t\t\tbreak\n\t\t\t\tcase 's':\n\t\t\t\t\tss.set(1.0)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'r':\n\t\t\t\t\tss.set(0.7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tfor (const ss of this.ctrls.sliders) {\n\t\t\tthis.handleCC({ slider: ss })\n\t\t}\n\t}\n\n\tloaded() {\n\t\treturn true\n\t}\n\n\t_attacks = 0\n\tnoteon = (_avatar: Avatar, time: number, evt: MidiEventNote) => {\n\t\tthis.freq = noteFreq(evt.note) / 2\n\t\ttry {\n\t\t\tif (this._attacks) {\n\t\t\t\tthis.synth.setNote(this.freq, time)\n\t\t\t} else {\n\t\t\t\tthis.synth.triggerAttack(this.freq, time, evt.attack)\n\t\t\t}\n\t\t} catch {}\n\t\tthis._attacks++\n\t}\n\tnoteoff = (_avatar: Avatar, time: number, _evt: MidiEventNote) => {\n\t\tthis._attacks = Math.max(0, this._attacks - 1)\n\t\tif (!this._attacks) {\n\t\t\tthis.synth.triggerRelease(time)\n\t\t}\n\t}\n\n\thandleDetune = (val: number) => {\n\t\tthis.ps = val\n\t\tthis.synth.set({ detune: 100 * val * this.psSpread })\n\t}\n\n\thandleModwheel = (val: number) => {\n\t\tthis.modwheel = val\n\t\tconst sin = Math.sin(val * Math.PI)\n\t\tlet ss = 1 - sin\n\t\tss = 1 - ss * ss\n\t\tconst vv = Math.pow(2, Math.floor((1 - val) * 32) / 8 - 1)\n\t\tthis.harmonicity.value = vv\n\t\tif (val < 0.5) {\n\t\t\tthis.amOsc.volume.value = ss * 60 - 60\n\t\t} else {\n\t\t\tthis.amOsc.volume.value = 0\n\t\t}\n\t\tconst ff = this.ctrls.getSliderForLabel('ff')\n\t\tif (ff) {\n\t\t\tff.set(val)\n\t\t\tthis.handleCC({ slider: ff })\n\t\t}\n\t\tconst fq = this.ctrls.getSliderForLabel('fq')\n\t\tif (fq) {\n\t\t\tfq.set(sin * sin * sin * 0.35)\n\t\t\tthis.handleCC({ slider: fq })\n\t\t}\n\t}\n\n\thandleFilter = (props: FilterProps) => this.filter.set(props)\n\thandleADSR = (props: ADSR) => this.synth.set({ envelope: props })\n\n\thandleCC(cc: ControlChange) {\n\t\tsuper.handleCC(cc)\n\t\tconst { evt, slider } = cc\n\t\tif (!evt) {\n\t\t\treturn\n\t\t}\n\t\t// Handle customized control events that don't have sliders\n\t\tconst num = evt.controller.number\n\t\tlet vv = evt.value * evt.value\n\t\tswitch (true) {\n\t\t\tcase num === 23:\n\t\t\t\tthis.harmonicity.value = vv * 20\n\t\t\t\tbreak\n\t\t\tcase num === 24:\n\t\t\t\tthis.synth.set({ portamento: vv * 2 })\n\t\t\t\tbreak\n\t\t}\n\t}\n}\n\nclass HooverObj extends Obj {\n\tinst: Hoover\n\thue = 0\n\n\tconstructor(hoover: Hoover, opts: ObjOpts) {\n\t\tsuper(opts)\n\t\tthis.inst = hoover\n\t}\n\n\t_ff = 0.0 // counter for rotation and color modulation\n\tdrawFunc = (pg: p5.Graphics) => {\n\t\tconst lp = this.calcLaserParams()\n\t\tthis._ff += 3 * (32 - lp.wave.length)\n\t\tif (!lp.wave.length) {\n\t\t\treturn\n\t\t}\n\t\t// Apply slow rotation\n\t\tpg.rotateX(this._ff / 59371)\n\t\tpg.rotateY(this._ff / -37523)\n\t\tpg.rotateZ(this._ff / 294783)\n\t\t// Draw waveform lasers, with colors modulated by fft values\n\t\tpg.colorMode(pg.HSL, 1)\n\t\tpg.noFill().strokeWeight(5).stroke(0)\n\t\tthis.drawLasers(pg, lp)\n\t\tpg.rotateX(-Math.PI / 2)\n\t\tthis.drawLasers(pg, lp)\n\t\tpg.rotateY(-Math.PI / 2)\n\t\tthis.drawLasers(pg, lp)\n\t}\n\n\tcalcLaserParams = (): LaserParams => {\n\t\tconst { ctrls, modwheel, wave } = this.inst\n\t\tconst empty = { fft: [], wave: new Float32Array(), waveMin: 0, waveMax: 0 }\n\t\tconst volCtrl = ctrls.getSliderForLabel('vol')\n\t\tif (volCtrl) {\n\t\t\tconst vol = volCtrl.value.value\n\t\t\tif (vol < 0.01) {\n\t\t\t\treturn empty\n\t\t\t}\n\t\t}\n\t\tconst visThresh = 0.001 + 0.02 * (1 - modwheel * modwheel)\n\t\tlet vals = wave.getValue().filter(vv => Math.abs(vv) > visThresh)\n\t\tconst valsMax = Math.max(0, ...vals)\n\t\tconst valsMin = Math.min(0, ...vals)\n\t\tif (!vals.length) {\n\t\t\treturn empty\n\t\t}\n\t\tconst fft = this.inst.fft.getValue()\n\t\tlet fftVals: number[] = []\n\t\tconst fftStart = 2\n\t\tfor (let ii = fftStart; ii < fft.length; ii++) {\n\t\t\tfftVals[ii - fftStart] = fft[ii] * ii * 100\n\t\t}\n\t\tconst max = Math.max(0.001, ...fftVals)\n\t\tfftVals = fftVals.map(ff => ff / max).filter(ff => ff > 0.05)\n\t\tif (!fftVals.length) {\n\t\t\tfftVals.push(fft[0])\n\t\t}\n\t\treturn {\n\t\t\tfft: fftVals,\n\t\t\twave: vals,\n\t\t\twaveMin: valsMin,\n\t\t\twaveMax: valsMax,\n\t\t}\n\t}\n\n\tdrawLasers = (pg: p5.Graphics, params: LaserParams) => {\n\t\tconst { fft, wave, waveMax, waveMin } = params\n\t\tfor (let ii = 0; ii < wave.length; ii++) {\n\t\t\tthis._ff++\n\t\t\tconst ff = this._ff % fft.length || 0\n\t\t\tconst hh = ((ff / fft.length) * 6.7 + this._ff / 100000) % 1.0\n\t\t\tconst ss = (fft[ff] || 0) / 2 + 0.5\n\t\t\tlet vv = 1 - (wave[ii] - waveMin) / (waveMax - waveMin)\n\t\t\tconst aa = 1 - 0.3 * vv * vv\n\t\t\t// work around p5 disabled alpha for stroke by setting 'curStrokeColor' directly\n\t\t\tconst cc = pg.color(hh, ss, 0.5, aa) as any\n\t\t\tconst rr = (pg as any)._renderer\n\t\t\trr.curStrokeColor = cc._array\n\t\t\tpg.rotateZ((Math.PI * 2) / wave.length)\n\t\t\tif (vv > 0.5) {\n\t\t\t\tpg.line(0, 0, 0, 1 - vv)\n\t\t\t} else {\n\t\t\t\tpg.line(0, vv, 0, 0.3)\n\t\t\t}\n\t\t}\n\t}\n}\n\ntype LaserParams = {\n\tfft: number[]\n\twave: Float32Array\n\twaveMin: number\n\twaveMax: number\n}\n","import * as Tone from 'tone'\nimport { Avatar } from 'engine3d'\nimport { Sampler } from './Sampler'\nimport { MidiEventNote } from '../MIDI'\nimport { noteFreq } from '../util'\nimport Sketch from '../Sketch'\n\nconst samps = ['MA.WAV', 'RS.WAV']\n\nfunction metronome() {\n\tconst urls: { [key: number]: string } = {}\n\tfor (let ii = 0; ii < samps.length; ++ii) {\n\t\turls[ii] = samps[ii % samps.length]\n\t}\n\treturn new Tone.Sampler({\n\t\turls,\n\t\trelease: 1,\n\t\tbaseUrl: '/samples/808/',\n\t})\n}\n\nexport class Metronome extends Sampler {\n\tsketch: Sketch\n\n\tconstructor(sketch: Sketch) {\n\t\tsuper(metronome())\n\t\tthis.sketch = sketch\n\t\tthis.panVol.set({ volume: -10 })\n\t\tthis.panVol.mute = true\n\t}\n\n\tmodNote(note: number) {\n\t\treturn note % samps.length\n\t}\n\n\tnoteon = (_avatar: Avatar, time: number, note: MidiEventNote) => {\n\t\tlet nn = this.modNote(note.note)\n\t\tthis.sampler.triggerAttack(noteFreq(nn), time, note.attack)\n\t}\n\n\tnoteoff = (_avatar: Avatar, time: number, note: MidiEventNote) => {\n\t\tlet nn = this.modNote(note.note)\n\t\tthis.sampler.triggerRelease(noteFreq(nn), time)\n\t}\n}\n","import * as Tone from 'tone'\nimport { Sampler } from './Sampler'\n\nconst pianoSamps = {\n\tA0: 'A0.mp3',\n\tC1: 'C1.mp3',\n\t'D#1': 'Ds1.mp3',\n\t'F#1': 'Fs1.mp3',\n\tA1: 'A1.mp3',\n\tC2: 'C2.mp3',\n\t'D#2': 'Ds2.mp3',\n\t'F#2': 'Fs2.mp3',\n\tA2: 'A2.mp3',\n\tC3: 'C3.mp3',\n\t'D#3': 'Ds3.mp3',\n\t'F#3': 'Fs3.mp3',\n\tA3: 'A3.mp3',\n\tC4: 'C4.mp3',\n\t'D#4': 'Ds4.mp3',\n\t'F#4': 'Fs4.mp3',\n\tA4: 'A4.mp3',\n\tC5: 'C5.mp3',\n\t'D#5': 'Ds5.mp3',\n\t'F#5': 'Fs5.mp3',\n\tA5: 'A5.mp3',\n\tC6: 'C6.mp3',\n\t'D#6': 'Ds6.mp3',\n\t'F#6': 'Fs6.mp3',\n\tA6: 'A6.mp3',\n\tC7: 'C7.mp3',\n\t'D#7': 'Ds7.mp3',\n\t'F#7': 'Fs7.mp3',\n\tA7: 'A7.mp3',\n\tC8: 'C8.mp3',\n}\n\nfunction piano() {\n\treturn new Tone.Sampler({\n\t\turls: pianoSamps,\n\t\trelease: 1,\n\t\tbaseUrl: 'https://tonejs.github.io/audio/salamander/',\n\t})\n}\n\nexport class Piano extends Sampler {\n\tconstructor() {\n\t\tsuper(piano())\n\t}\n}\n","import * as p5 from 'p5'\nimport * as Tone from 'tone'\nimport { MidiEventNote } from '../MIDI'\nimport { ADSR, FilterProps, Instrument } from '../Instrument'\nimport { noteFreq, srand, srandVec } from '../util'\nimport { engine3d, Avatar, Obj, ObjOpts, Vec } from 'engine3d'\n\nexport class PolySynth extends Instrument {\n\tsynth: Tone.PolySynth\n\tfilter: Tone.Filter\n\tfilterVol: Tone.Volume\n\treverb: Tone.Reverb\n\tpanVol: Tone.PanVol\n\tps = 0\n\tpsSpread = 7\n\tmodwheel = 0.6\n\tobjs: Obj[] = []\n\tmaxObjs = 24\n\tii = 0\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.panVol = new Tone.PanVol(0, 0).toDestination()\n\t\tthis.reverb = new Tone.Reverb({ decay: 4, wet: 0.6 }).connect(this.panVol)\n\t\tthis.filterVol = new Tone.Volume(0).connect(this.reverb)\n\t\tthis.filter = new Tone.Filter({ type: 'bandpass' }).connect(this.filterVol)\n\t\tthis.synth = new Tone.PolySynth(Tone.Synth, {\n\t\t\toscillator: {\n\t\t\t\ttype: 'fatsquare',\n\t\t\t\tcount: 3,\n\t\t\t\tspread: 30,\n\t\t\t},\n\t\t}).connect(this.filter)\n\n\t\t// Initialize control sliders\n\t\tfor (const ss of this.ctrls.sliders) {\n\t\t\tswitch (ss.label) {\n\t\t\t\tcase 'mod':\n\t\t\t\t\tss.set(0.6)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'a':\n\t\t\t\t\tss.set(0.01)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'd':\n\t\t\t\t\tss.set(0.4)\n\t\t\t\t\tbreak\n\t\t\t\tcase 's':\n\t\t\t\t\tss.set(0.66)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'r':\n\t\t\t\t\tss.set(0.5)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tfor (const ss of this.ctrls.sliders) {\n\t\t\tthis.handleCC({ slider: ss })\n\t\t}\n\t}\n\n\tloaded() {\n\t\treturn true\n\t}\n\n\tnoteon = (avatar: Avatar, time: number, evt: MidiEventNote) => {\n\t\tthis.synth.triggerAttack(noteFreq(evt.note), time, evt.attack)\n\t\tTone.Draw.schedule(() => this.addSynthObj(avatar, evt), time)\n\t}\n\n\tnoteoff = (_avatar: Avatar, time: number, evt: MidiEventNote) => {\n\t\tconst freq = noteFreq(evt.note)\n\t\t// Tone.PolySynth can leave voices dangling, so manually release all voices matching this note\n\t\tTone.Draw.schedule(() => {\n\t\t\tfor (const vv of (this.synth as any)._activeVoices) {\n\t\t\t\tif (!vv.released && vv.midi === freq) {\n\t\t\t\t\tvv.voice.triggerRelease(Tone.immediate())\n\t\t\t\t}\n\t\t\t}\n\t\t}, `+${time - Tone.immediate()}`)\n\t}\n\n\thandleDetune = (val: number) => {\n\t\tthis.ps = val\n\t\tthis.synth.set({ detune: 100 * val * this.psSpread })\n\t}\n\n\thandleModwheel = (val: number) => {\n\t\tthis.modwheel = val\n\t\t// bind modwheel to filter freq and Q\n\t\tconst ff = this.ctrls.getSliderForLabel('ff')\n\t\tif (ff) {\n\t\t\tff.set(val)\n\t\t\tthis.handleCC({ slider: ff })\n\t\t}\n\t\tconst fq = this.ctrls.getSliderForLabel('fq')\n\t\tif (fq) {\n\t\t\tconst sin = Math.sin(val * Math.PI)\n\t\t\tlet vv = 1 - val\n\t\t\tvv = 1 - vv * vv * vv\n\t\t\tfq.set(sin * 0.2 + 0.06 + 0.2 * vv)\n\t\t\tthis.handleCC({ slider: fq })\n\t\t}\n\t}\n\n\thandleFilter = (props: FilterProps) => this.filter.set(props)\n\thandleADSR = (props: ADSR) => this.synth.set({ envelope: props })\n\n\tlastPos: { [key: number]: Vec } = {}\n\taddSynthObj = (avatar: Avatar, evt: MidiEventNote) => {\n\t\t// Create obj for note\n\t\tconst objSize = 100\n\t\tconst { objs, maxObjs } = this\n\t\tconst { clientId } = avatar.user\n\t\tlet pos = avatar.xform.pos\n\t\tif (this.lastPos[clientId]) {\n\t\t\tpos = this.lastPos[clientId]\n\t\t}\n\t\tconst off = new Vec(srand(), Math.random(), srand()).applyMult(objSize * 0.6)\n\t\tpos = pos.cloneAdd(off)\n\t\tif (this.ii++ % 8 === 0 || pos.y > 1000) {\n\t\t\tfor (const oo of objs) {\n\t\t\t\too.xform.scale.applyMult(0.6)\n\t\t\t}\n\t\t\tconst { facing, xform } = avatar\n\t\t\tconst { pos: apos, scale: ascale } = xform\n\t\t\tconst theta = Math.random() * Math.PI * 2\n\t\t\tconst ff = facing.cloneMult(-objSize * 3)\n\t\t\tpos.x = apos.x + ff.x + ascale.x * 3 * Math.sin(theta)\n\t\t\tpos.y = apos.y\n\t\t\tpos.z = apos.z + ff.z + ascale.x * 3 * Math.cos(theta)\n\t\t}\n\t\tthis.lastPos[clientId] = pos\n\t\tconst rot = new Vec(\n\t\t\tMath.random() * Math.PI * 2,\n\t\t\tMath.random() * Math.PI * 2,\n\t\t\tMath.random() * Math.PI * 2,\n\t\t)\n\t\tconst obj = new SynthObj(this, {\n\t\t\tnoteEvt: evt,\n\t\t\tpos: pos,\n\t\t\trot: rot,\n\t\t\tscale: new Vec(objSize),\n\t\t})\n\t\t// Add obj to engine\n\t\tobjs.unshift(obj)\n\t\tengine3d.addObj(obj)\n\t\tif (objs.length > maxObjs) {\n\t\t\t// remove oldest obj\n\t\t\tengine3d.rmObj(objs[objs.length - 1])\n\t\t\tthis.objs = objs.slice(0, maxObjs)\n\t\t}\n\t}\n}\n\ntype SynthObjOpts = ObjOpts & {\n\tnoteEvt: MidiEventNote\n}\n\nclass SynthObj extends Obj {\n\tpolySynth: PolySynth\n\thue = Math.random()\n\tlgt = 0.3\n\t// envValLast = 1\n\t// voice: Tone.Synth | null = null\n\t// noteEvt: MidiEventNote\n\t// scaleOrig: Vec\n\n\tconstructor(polySynth: PolySynth, opts: SynthObjOpts) {\n\t\tsuper(opts)\n\t\tthis.polySynth = polySynth\n\t\t// this.noteEvt = opts.noteEvt\n\t\t// this.scaleOrig = this.xform.scale.clone()\n\t}\n\n\tupdate = (dt: number) => {\n\t\tlet mod = 1 - this.polySynth.modwheel\n\t\tmod = 1 - mod * mod\n\t\tthis.lgt = mod * 0.8 + 0.2\n\t\tthis.hue += (Math.random() * 2 - 1) * dt * mod\n\t\tif (this.hue < 0) {\n\t\t\tthis.hue += 1\n\t\t} else if (this.hue > 1) {\n\t\t\tthis.hue -= 1\n\t\t}\n\t\tthis.xform.rot.applyAdd(srandVec().applyMult(dt * mod))\n\t\t// // Disabled: scale by envelope value\n\t\t// const voices = (this.polySynth.synth as any)._activeVoices\n\t\t// if (!this.voice) {\n\t\t// \tfor (const vv of voices) {\n\t\t// \t\tif (vv.midi === noteFreq(this.noteEvt.note) && !vv.released) {\n\t\t// \t\t\tthis.voice = vv.voice\n\t\t// \t\t\tbreak\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\t\t// if (this.voice) {\n\t\t// \tthis.envValLast = this.voice.envelope.value\n\t\t// }\n\t\t// this.xform.scale = this.scaleOrig.cloneMult(this.envValLast)\n\t}\n\n\tdrawFunc = (pg: p5.Graphics) => {\n\t\tpg.colorMode(pg.HSL, 1)\n\t\tpg.fill(this.hue, 0.8, this.lgt)\n\t\tpg.stroke(this.hue, 0.8, this.lgt - 0.2)\n\t\tpg.strokeWeight(1)\n\t\tpg.sphere(1, 3, 4)\n\t\tpg.colorMode(pg.RGB, 255)\n\t}\n}\n","// import * as p5 from 'p5'\n/*\n *\n * The p5.EasyCam library - Easy 3D CameraControl for p5.js and WEBGL.\n *\n *   Copyright © 2017-2020 by p5.EasyCam authors\n *\n *   Source: https://github.com/freshfork/p5.EasyCam\n *\n *   MIT License: https://opensource.org/licenses/MIT\n *\n *\n * explanatory notes:\n *\n * p5.EasyCam is a derivative of the original PeasyCam Library by Jonathan Feinberg\n * and combines new useful features with the great look and feel of its parent.\n *\n */\n\n/** @namespace  */\n// var Dw = (function(ext) {\nconst ext = {}\n\n/**\n * EasyCam Library Info\n */\nconst INFO = {\n\t/** name    */ LIBRARY: 'p5.EasyCam',\n\t/** version */ VERSION: '1.0.10',\n\t/** author  */ AUTHOR: 'p5.EasyCam authors',\n\t/** source  */ SOURCE: 'https://github.com/freshfork/p5.EasyCam',\n\n\ttoString: function () {\n\t\treturn this.LIBRARY + ' v' + this.VERSION + ' by ' + this.AUTHOR + ' (' + this.SOURCE + ')'\n\t},\n}\n\n/**\n * EasyCam\n *\n * <pre>\n *\n *   new Dw.EasyCam(p5.RendererGL, {\n *     distance : z,                 // scalar\n *     center   : [x, y, z],         // vector\n *     rotation : [q0, q1, q2, q3],  // quaternion\n *     viewport : [x, y, w, h],      // array\n *   }\n *\n * </pre>\n *\n * @param {p5.RendererGL} renderer - p5 WEBGL renderer\n * @param {Object}        args     - {distance, center, rotation, viewport}\n *\n */\nexport class EasyCam {\n\t/**\n\t * @constructor\n\t */\n\tconstructor(renderer, args) {\n\t\t// WEBGL renderer required\n\t\tif (!(renderer instanceof window.p5.RendererGL)) {\n\t\t\tconsole.log('renderer needs to be an instance of p5.RendererGL')\n\t\t\treturn\n\t\t}\n\n\t\t// define default args\n\t\targs = args || {}\n\t\tif (args.distance === undefined) args.distance = 500\n\t\tif (args.center === undefined) args.center = [0, 0, 0]\n\t\tif (args.rotation === undefined) args.rotation = Rotation.identity()\n\t\tif (args.viewport === undefined) args.viewport = [0, 0, renderer.width, renderer.height]\n\n\t\t// library info\n\t\tthis.INFO = INFO\n\n\t\t// set renderer, graphics, p5\n\t\t// this.renderer;\n\t\t// this.graphics;\n\t\t// this.P5\n\t\tthis.setCanvas(renderer)\n\n\t\t// self reference\n\t\tvar cam = this\n\t\tthis.cam = cam\n\n\t\t// some constants\n\t\tthis.LOOK = [0, 0, 1]\n\t\tthis.UP = [0, 1, 0]\n\n\t\t// principal axes flags\n\t\tthis.AXIS = new (function () {\n\t\t\tthis.YAW = 0x01\n\t\t\tthis.PITCH = 0x02\n\t\t\tthis.ROLL = 0x04\n\t\t\tthis.ALL = this.YAW | this.PITCH | this.ROLL\n\t\t})()\n\n\t\t// mouse action constraints\n\t\tthis.SHIFT_CONSTRAINT = 0 // applied when pressing the shift key\n\t\tthis.FIXED_CONSTRAINT = 0 // applied, when set by user and SHIFT_CONSTRAINT is 0\n\t\tthis.DRAG_CONSTRAINT = 0 // depending on SHIFT_CONSTRAINT and FIXED_CONSTRAINT, default is ALL\n\n\t\t// mouse action speed\n\t\tthis.scale_rotation = 0.001\n\t\tthis.scale_pan = 0.0002\n\t\tthis.scale_zoom = 0.001\n\t\tthis.scale_zoomwheel = 20.0\n\n\t\t// zoom limits\n\t\tthis.distance_min_limit = 0.01\n\t\tthis.distance_min = 1.0\n\t\tthis.distance_max = Number.MAX_VALUE\n\n\t\t// main state\n\t\tthis.state = {\n\t\t\tdistance: args.distance, // scalar\n\t\t\tcenter: args.center.slice(), // vec3\n\t\t\trotation: args.rotation.slice(), // quaternion\n\n\t\t\tcopy: function (dst) {\n\t\t\t\tdst = dst || {}\n\t\t\t\tdst.distance = this.distance\n\t\t\t\tdst.center = this.center.slice()\n\t\t\t\tdst.rotation = this.rotation.slice()\n\t\t\t\treturn dst\n\t\t\t},\n\t\t}\n\n\t\t// backup-state at start\n\t\tthis.state_reset = this.state.copy()\n\t\t// backup-state, probably not required\n\t\tthis.state_pushed = this.state.copy()\n\n\t\t// viewport for the mouse-pointer [x,y,w,h]\n\t\tthis.viewport = args.viewport.slice()\n\n\t\t// mouse/touch/key action handler\n\t\tthis.mouse = {\n\t\t\tcam: cam,\n\n\t\t\tcurr: [0, 0, 0],\n\t\t\tprev: [0, 0, 0],\n\t\t\tdist: [0, 0, 0],\n\t\t\tmwheel: 0,\n\n\t\t\tisPressed: false, // true if (istouchdown || ismousedown)\n\t\t\tistouchdown: false, // true, if input came from a touch\n\t\t\tismousedown: false, // true, if input came from a mouse\n\n\t\t\tBUTTON: { LMB: 0x01, MMB: 0x02, RMB: 0x04 },\n\n\t\t\tbutton: 0,\n\n\t\t\tmouseDragLeft: cam.mouseDragRotate.bind(cam),\n\t\t\tmouseDragCenter: cam.mouseDragPan.bind(cam),\n\t\t\tmouseDragRight: cam.mouseDragZoom.bind(cam),\n\t\t\tmouseWheelAction: cam.mouseWheelZoom.bind(cam),\n\n\t\t\ttouchmoveSingle: cam.mouseDragRotate.bind(cam),\n\t\t\ttouchmoveMulti: function () {\n\t\t\t\tcam.mouseDragPan()\n\t\t\t\tcam.mouseDragZoom()\n\t\t\t},\n\n\t\t\tinsideViewport: function (x, y) {\n\t\t\t\tvar x0 = cam.viewport[0],\n\t\t\t\t\tx1 = x0 + cam.viewport[2]\n\t\t\t\tvar y0 = cam.viewport[1],\n\t\t\t\t\ty1 = y0 + cam.viewport[3]\n\t\t\t\treturn x > x0 && x < x1 && y > y0 && y < y1\n\t\t\t},\n\n\t\t\tsolveConstraint: function () {\n\t\t\t\tvar dx = this.dist[0]\n\t\t\t\tvar dy = this.dist[1]\n\n\t\t\t\t// YAW, PITCH\n\t\t\t\tif (this.shiftKey && !cam.SHIFT_CONSTRAINT && Math.abs(dx - dy) > 1) {\n\t\t\t\t\tcam.SHIFT_CONSTRAINT = Math.abs(dx) > Math.abs(dy) ? cam.AXIS.YAW : cam.AXIS.PITCH\n\t\t\t\t}\n\n\t\t\t\t// define constraint by increasing priority\n\t\t\t\tcam.DRAG_CONSTRAINT = cam.AXIS.ALL\n\t\t\t\tif (cam.FIXED_CONSTRAINT) cam.DRAG_CONSTRAINT = cam.FIXED_CONSTRAINT\n\t\t\t\tif (cam.SHIFT_CONSTRAINT) cam.DRAG_CONSTRAINT = cam.SHIFT_CONSTRAINT\n\t\t\t},\n\n\t\t\tupdateInput: function (x, y, z) {\n\t\t\t\tvar mouse = cam.mouse\n\t\t\t\tvar pd = cam.P5.pixelDensity()\n\n\t\t\t\tmouse.prev[0] = mouse.curr[0]\n\t\t\t\tmouse.prev[1] = mouse.curr[1]\n\t\t\t\tmouse.prev[2] = mouse.curr[2]\n\n\t\t\t\tmouse.curr[0] = x\n\t\t\t\tmouse.curr[1] = y\n\t\t\t\tmouse.curr[2] = z\n\n\t\t\t\tmouse.dist[0] = -(mouse.curr[0] - mouse.prev[0]) / pd\n\t\t\t\tmouse.dist[1] = -(mouse.curr[1] - mouse.prev[1]) / pd\n\t\t\t\tmouse.dist[2] = -(mouse.curr[2] - mouse.prev[2]) / pd\n\t\t\t},\n\n\t\t\t//////////////////////////////////////////////////////////////////////////\n\t\t\t// mouseinput\n\t\t\t//////////////////////////////////////////////////////////////////////////\n\n\t\t\tmousedown: function (event) {\n\t\t\t\tvar mouse = cam.mouse\n\n\t\t\t\tif (event.button === 0) mouse.button |= mouse.BUTTON.LMB\n\t\t\t\tif (event.button === 1) mouse.button |= mouse.BUTTON.MMB\n\t\t\t\tif (event.button === 2) mouse.button |= mouse.BUTTON.RMB\n\n\t\t\t\tif (mouse.insideViewport(event.x, event.y)) {\n\t\t\t\t\tmouse.updateInput(event.x, event.y, event.y)\n\t\t\t\t\tmouse.ismousedown = mouse.button > 0\n\t\t\t\t\tmouse.isPressed = mouse.ismousedown\n\t\t\t\t\tcam.SHIFT_CONSTRAINT = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tmousedrag: function () {\n\t\t\t\tvar mouse = cam.mouse\n\t\t\t\tif (mouse.ismousedown) {\n\t\t\t\t\tvar x = cam.P5.mouseX\n\t\t\t\t\tvar y = cam.P5.mouseY\n\t\t\t\t\tvar z = y\n\n\t\t\t\t\tmouse.updateInput(x, y, z)\n\t\t\t\t\tmouse.solveConstraint()\n\n\t\t\t\t\tvar LMB = mouse.button & mouse.BUTTON.LMB\n\t\t\t\t\tvar MMB = mouse.button & mouse.BUTTON.MMB\n\t\t\t\t\tvar RMB = mouse.button & mouse.BUTTON.RMB\n\n\t\t\t\t\tif (LMB && mouse.mouseDragLeft) mouse.mouseDragLeft()\n\t\t\t\t\tif (MMB && mouse.mouseDragCenter) mouse.mouseDragCenter()\n\t\t\t\t\tif (RMB && mouse.mouseDragRight) mouse.mouseDragRight()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tmouseup: function (event) {\n\t\t\t\tvar mouse = cam.mouse\n\n\t\t\t\tif (event.button === 0) mouse.button &= ~mouse.BUTTON.LMB\n\t\t\t\tif (event.button === 1) mouse.button &= ~mouse.BUTTON.MMB\n\t\t\t\tif (event.button === 2) mouse.button &= ~mouse.BUTTON.RMB\n\n\t\t\t\tmouse.ismousedown = mouse.button > 0\n\t\t\t\tmouse.isPressed = mouse.istouchdown || mouse.ismousedown\n\t\t\t\tcam.SHIFT_CONSTRAINT = 0\n\t\t\t},\n\n\t\t\tdblclick: function (event) {\n\t\t\t\tvar x = event.x\n\t\t\t\tvar y = event.y\n\t\t\t\tif (cam.mouse.insideViewport(x, y)) {\n\t\t\t\t\tcam.reset()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\twheel: function (event) {\n\t\t\t\tvar x = event.x\n\t\t\t\tvar y = event.y\n\t\t\t\tvar mouse = cam.mouse\n\t\t\t\tif (mouse.insideViewport(x, y)) {\n\t\t\t\t\tmouse.mwheel = event.deltaY * 0.01\n\t\t\t\t\tif (mouse.mouseWheelAction) mouse.mouseWheelAction()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t//////////////////////////////////////////////////////////////////////////\n\t\t\t// touchinput\n\t\t\t//////////////////////////////////////////////////////////////////////////\n\n\t\t\tevaluateTouches: function (event) {\n\t\t\t\tvar touches = event.touches\n\t\t\t\tvar avg_x = 0.0\n\t\t\t\tvar avg_y = 0.0\n\t\t\t\tvar avg_d = 0.0\n\t\t\t\tvar i,\n\t\t\t\t\tdx,\n\t\t\t\t\tdy,\n\t\t\t\t\tcount = touches.length\n\n\t\t\t\t// center, averaged touch position\n\t\t\t\tfor (i = 0; i < count; i++) {\n\t\t\t\t\tavg_x += touches[i].clientX\n\t\t\t\t\tavg_y += touches[i].clientY\n\t\t\t\t}\n\t\t\t\tavg_x /= count\n\t\t\t\tavg_y /= count\n\n\t\t\t\t// offset, mean distance to center\n\t\t\t\tfor (i = 0; i < count; i++) {\n\t\t\t\t\tdx = avg_x - touches[i].clientX\n\t\t\t\t\tdy = avg_y - touches[i].clientY\n\t\t\t\t\tavg_d += Math.sqrt(dx * dx + dy * dy)\n\t\t\t\t}\n\t\t\t\tavg_d /= count\n\n\t\t\t\tcam.mouse.updateInput(avg_x, avg_y, -avg_d)\n\t\t\t},\n\n\t\t\ttouchstart: function (event) {\n\t\t\t\tevent.preventDefault()\n\t\t\t\tevent.stopPropagation()\n\n\t\t\t\tvar mouse = cam.mouse\n\n\t\t\t\tmouse.evaluateTouches(event)\n\t\t\t\tmouse.istouchdown = mouse.insideViewport(mouse.curr[0], mouse.curr[1])\n\t\t\t\tmouse.isPressed = cam.mouse.istouchdown || cam.mouse.ismousedown\n\n\t\t\t\tmouse.dbltap(event)\n\t\t\t},\n\n\t\t\ttouchmove: function (event) {\n\t\t\t\tevent.preventDefault()\n\t\t\t\tevent.stopPropagation()\n\n\t\t\t\tvar mouse = cam.mouse\n\n\t\t\t\tif (mouse.istouchdown) {\n\t\t\t\t\tmouse.evaluateTouches(event)\n\t\t\t\t\tmouse.solveConstraint()\n\n\t\t\t\t\tif (event.touches.length === 1) {\n\t\t\t\t\t\tmouse.touchmoveSingle()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmouse.touchmoveMulti()\n\t\t\t\t\t\tmouse.tapcount = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttouchend: function (event) {\n\t\t\t\tevent.preventDefault()\n\t\t\t\tevent.stopPropagation()\n\n\t\t\t\tvar mouse = cam.mouse\n\t\t\t\tmouse.istouchdown = false\n\t\t\t\tmouse.isPressed = mouse.istouchdown || mouse.ismousedown\n\t\t\t\tcam.SHIFT_CONSTRAINT = 0\n\n\t\t\t\tif (mouse.tapcount >= 2) {\n\t\t\t\t\tif (mouse.insideViewport(mouse.curr[0], mouse.curr[1])) {\n\t\t\t\t\t\tcam.reset()\n\t\t\t\t\t}\n\t\t\t\t\tmouse.tapcount = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttapcount: 0,\n\n\t\t\tdbltap: function (event) {\n\t\t\t\tif (cam.mouse.tapcount++ === 0) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tcam.mouse.tapcount = 0\n\t\t\t\t\t}, 350)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t//////////////////////////////////////////////////////////////////////////\n\t\t\t// keyingput\n\t\t\t//////////////////////////////////////////////////////////////////////////\n\n\t\t\t// key-event for shift constraints\n\t\t\tshiftKey: false,\n\n\t\t\tkeydown: function (event) {\n\t\t\t\tvar mouse = cam.mouse\n\t\t\t\tif (!mouse.shiftKey) {\n\t\t\t\t\tmouse.shiftKey = event.keyCode === 16\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tkeyup: function (event) {\n\t\t\t\tvar mouse = cam.mouse\n\t\t\t\tif (mouse.shiftKey) {\n\t\t\t\t\tmouse.shiftKey = event.keyCode !== 16\n\t\t\t\t\tif (!mouse.shiftKey) {\n\t\t\t\t\t\tcam.SHIFT_CONSTRAINT = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\n\t\t// camera mouse listeners\n\t\tthis.attachMouseListeners()\n\n\t\t// P5 registered callbacks, TODO unregister on dispose\n\t\tthis.auto_update = true\n\t\tthis.P5.registerMethod('pre', function () {\n\t\t\tif (cam.auto_update) {\n\t\t\t\tcam.update()\n\t\t\t}\n\t\t})\n\n\t\t// damped camera transition\n\t\tthis.dampedZoom = new DampedAction(function (d) {\n\t\t\tcam.zoom(d * cam.getZoomMult())\n\t\t})\n\t\tthis.dampedPanX = new DampedAction(function (d) {\n\t\t\tcam.panX(d * cam.getPanMult())\n\t\t})\n\t\tthis.dampedPanY = new DampedAction(function (d) {\n\t\t\tcam.panY(d * cam.getPanMult())\n\t\t})\n\t\tthis.dampedPanZ = new DampedAction(function (d) {\n\t\t\tcam.panZ(d * cam.getPanMult())\n\t\t})\n\t\tthis.dampedRotX = new DampedAction(function (d) {\n\t\t\tcam.rotateX(d * cam.getRotationMult())\n\t\t})\n\t\tthis.dampedRotY = new DampedAction(function (d) {\n\t\t\tcam.rotateY(d * cam.getRotationMult())\n\t\t})\n\t\tthis.dampedRotZ = new DampedAction(function (d) {\n\t\t\tcam.rotateZ(d * cam.getRotationMult())\n\t\t})\n\n\t\t// interpolated camera transition\n\t\tthis.timedRot = new Interpolation(cam.setInterpolatedRotation.bind(cam))\n\t\tthis.timedPan = new Interpolation(cam.setInterpolatedCenter.bind(cam))\n\t\tthis.timedzoom = new Interpolation(cam.setInterpolatedDistance.bind(cam))\n\t}\n\n\t/**\n\t * sets the WEBGL renderer the camera is working on\n\t *\n\t * @param {p5.RendererGL} renderer ... p5 WEBGL renderer\n\t */\n\tsetCanvas(renderer) {\n\t\tif (renderer instanceof window.p5.RendererGL) {\n\t\t\t// p5js seems to be not very clear about this\n\t\t\t// ... a bit confusing, so i guess this could change in future releases\n\t\t\tthis.renderer = renderer\n\t\t\tif (renderer._pInst instanceof window.p5) {\n\t\t\t\tthis.graphics = renderer\n\t\t\t} else {\n\t\t\t\tthis.graphics = renderer._pInst\n\t\t\t}\n\t\t\tthis.P5 = this.graphics._pInst\n\t\t} else {\n\t\t\tthis.graphics = undefined\n\t\t\tthis.renderer = undefined\n\t\t}\n\t}\n\n\t/** @return {p5.RendererGL} the currently used renderer */\n\tgetCanvas() {\n\t\treturn this.renderer\n\t}\n\n\tattachListener(el, ev, fx, op) {\n\t\tif (!el || el === fx.el) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.detachListener(fx)\n\n\t\tfx.el = el\n\t\tfx.ev = ev\n\t\tfx.op = op\n\t\tfx.el.addEventListener(fx.ev, fx, fx.op)\n\t}\n\n\tdetachListener(fx) {\n\t\tif (fx.el) {\n\t\t\tfx.el.removeEventListener(fx.ev, fx, fx.op)\n\t\t\tfx.el = undefined\n\t\t}\n\t}\n\n\t/** attaches input-listeners (mouse, touch, key) to the used renderer */\n\tattachMouseListeners(renderer) {\n\t\tvar cam = this.cam\n\t\tvar mouse = cam.mouse\n\n\t\trenderer = renderer || cam.renderer\n\t\tif (renderer) {\n\t\t\tvar op = { passive: false }\n\t\t\tvar el = renderer.elt\n\n\t\t\tcam.attachListener(el, 'mousedown', mouse.mousedown, op)\n\t\t\tcam.attachListener(el, 'mouseup', mouse.mouseup, op)\n\t\t\t// cam.attachListener(el, 'dblclick', mouse.dblclick, op)\n\t\t\tcam.attachListener(el, 'wheel', mouse.wheel, op)\n\t\t\tcam.attachListener(el, 'touchstart', mouse.touchstart, op)\n\t\t\tcam.attachListener(el, 'touchend', mouse.touchend, op)\n\t\t\tcam.attachListener(el, 'touchmove', mouse.touchmove, op)\n\t\t\tcam.attachListener(window, 'keydown', mouse.keydown, op)\n\t\t\tcam.attachListener(window, 'keyup', mouse.keyup, op)\n\t\t}\n\t}\n\n\t/** detaches all attached input-listeners */\n\tremoveMouseListeners() {\n\t\tvar cam = this.cam\n\t\tvar mouse = cam.mouse\n\n\t\tcam.detachListener(mouse.mousedown)\n\t\tcam.detachListener(mouse.mouseup)\n\t\t// cam.detachListener(mouse.dblclick)\n\t\tcam.detachListener(mouse.wheel)\n\t\tcam.detachListener(mouse.keydown)\n\t\tcam.detachListener(mouse.keyup)\n\t\tcam.detachListener(mouse.touchstart)\n\t\tcam.detachListener(mouse.touchend)\n\t\tcam.detachListener(mouse.touchmove)\n\t}\n\n\t/** Disposes/releases the camera. */\n\tdispose() {\n\t\t// // TODO: p5 unregister 'pre', ... not available in 0.5.16\n\t\t// removeMouseListeners();\n\t}\n\n\t/** @return {boolean} the current autoUpdate state */\n\tgetAutoUpdate() {\n\t\treturn this.auto_update\n\t}\n\t/**\n\t * If true, the EasyCam will update automatically in a pre-draw step.\n\t * This updates the camera state and updates the renderers\n\t * modelview/camera matrix.\n\t *\n\t * If false, the update() needs to be called manually.\n\t *\n\t * @param {boolean} the new autoUpdate state\n\t */\n\tsetAutoUpdate(status) {\n\t\tthis.auto_update = status\n\t}\n\n\t/**\n\t * Updates the camera state (interpolated / damped animations) and updates\n\t * the renderers' modelview/camera matrix.\n\t *\n\t * if \"auto_update\" is true, this is called automatically in a pre-draw call.\n\t */\n\tupdate() {\n\t\tvar cam = this.cam\n\t\tvar mouse = cam.mouse\n\n\t\tmouse.mousedrag()\n\n\t\tvar b_update = false\n\t\tb_update |= cam.dampedZoom.update()\n\t\tb_update |= cam.dampedPanX.update()\n\t\tb_update |= cam.dampedPanY.update()\n\t\tb_update |= cam.dampedPanZ.update()\n\t\tb_update |= cam.dampedRotX.update()\n\t\tb_update |= cam.dampedRotY.update()\n\t\tb_update |= cam.dampedRotZ.update()\n\n\t\t// interpolated actions have lower priority then damped actions\n\t\tif (b_update) {\n\t\t\tcam.timedRot.stop()\n\t\t\tcam.timedPan.stop()\n\t\t\tcam.timedzoom.stop()\n\t\t} else {\n\t\t\tcam.timedRot.update()\n\t\t\tcam.timedPan.update()\n\t\t\tcam.timedzoom.update()\n\t\t}\n\n\t\tcam.apply()\n\t}\n\n\t/**\n\t * Applies the current camera state to the renderers' modelview/camera matrix.\n\t * If no argument is given, then the cameras currently set renderer is used.\n\t */\n\tapply(renderer) {\n\t\tvar cam = this.cam\n\t\trenderer = renderer || cam.renderer\n\n\t\tif (renderer) {\n\t\t\tthis.camEYE = this.getPosition(this.camEYE)\n\t\t\tthis.camLAT = this.getCenter(this.camLAT)\n\t\t\tthis.camRUP = this.getUpVector(this.camRUP)\n\n\t\t\tif (undefined === renderer._curCamera)\n\t\t\t\trenderer.camera(\n\t\t\t\t\tthis.camEYE[0],\n\t\t\t\t\tthis.camEYE[1],\n\t\t\t\t\tthis.camEYE[2],\n\t\t\t\t\tthis.camLAT[0],\n\t\t\t\t\tthis.camLAT[1],\n\t\t\t\t\tthis.camLAT[2],\n\t\t\t\t\tthis.camRUP[0],\n\t\t\t\t\tthis.camRUP[1],\n\t\t\t\t\tthis.camRUP[2],\n\t\t\t\t)\n\t\t\telse\n\t\t\t\trenderer._curCamera.camera(\n\t\t\t\t\tthis.camEYE[0],\n\t\t\t\t\tthis.camEYE[1],\n\t\t\t\t\tthis.camEYE[2],\n\t\t\t\t\tthis.camLAT[0],\n\t\t\t\t\tthis.camLAT[1],\n\t\t\t\t\tthis.camLAT[2],\n\t\t\t\t\tthis.camRUP[0],\n\t\t\t\t\tthis.camRUP[1],\n\t\t\t\t\tthis.camRUP[2],\n\t\t\t\t)\n\t\t}\n\t}\n\n\t/** @param {int[]} the new viewport-def, as [x,y,w,h] */\n\tsetViewport(viewport) {\n\t\tthis.viewport = viewport.slice()\n\t}\n\n\t/** @returns {int[]} the current viewport-def, as [x,y,w,h] */\n\tgetViewport() {\n\t\treturn this.viewport\n\t}\n\n\t//\n\t// mouse state changes\n\t//\n\n\t/** implemented zoom-cb for mouswheel handler.*/\n\tmouseWheelZoom() {\n\t\tvar cam = this\n\t\tvar mouse = cam.mouse\n\t\tcam.dampedZoom.addForce(mouse.mwheel * cam.scale_zoomwheel)\n\t}\n\n\t/** implemented zoom-cb for mousedrag/touch handler.*/\n\tmouseDragZoom() {\n\t\tvar cam = this\n\t\tvar mouse = cam.mouse\n\t\tcam.dampedZoom.addForce(-mouse.dist[2])\n\t}\n\n\t/** implemented pan-cb for mousedrag/touch handler.*/\n\tmouseDragPan() {\n\t\tvar cam = this\n\t\tvar mouse = cam.mouse\n\n\t\tcam.dampedPanX.addForce(cam.DRAG_CONSTRAINT & cam.AXIS.YAW ? mouse.dist[0] : 0)\n\t\tcam.dampedPanY.addForce(cam.DRAG_CONSTRAINT & cam.AXIS.PITCH ? mouse.dist[1] : 0)\n\t}\n\n\t/** implemented rotate-cb for mousedrag/touch handler.*/\n\tmouseDragRotate() {\n\t\tvar cam = this\n\t\tvar mouse = cam.mouse\n\n\t\tvar mx = mouse.curr[0],\n\t\t\tmy = mouse.curr[1]\n\t\tvar dx = mouse.dist[0],\n\t\t\tdy = mouse.dist[1]\n\n\t\t// mouse [-1, +1]\n\t\tvar mxNdc = Math.min(Math.max((mx - cam.viewport[0]) / cam.viewport[2], 0), 1) * 2 - 1\n\t\tvar myNdc = Math.min(Math.max((my - cam.viewport[1]) / cam.viewport[3], 0), 1) * 2 - 1\n\n\t\tif (cam.DRAG_CONSTRAINT & cam.AXIS.YAW) {\n\t\t\tcam.dampedRotY.addForce(+dx * (1.0 - myNdc * myNdc))\n\t\t}\n\t\tif (cam.DRAG_CONSTRAINT & cam.AXIS.PITCH) {\n\t\t\tcam.dampedRotX.addForce(-dy * (1.0 - mxNdc * mxNdc))\n\t\t}\n\t\tif (cam.DRAG_CONSTRAINT & cam.AXIS.ROLL) {\n\t\t\tcam.dampedRotZ.addForce(-dx * myNdc)\n\t\t\tcam.dampedRotZ.addForce(+dy * mxNdc)\n\t\t}\n\t}\n\n\t//\n\t// damped multipliers\n\t//\n\t/** (private) returns the used zoom -multiplier for damped actions. */\n\tgetZoomMult() {\n\t\treturn this.state.distance * this.scale_zoom\n\t}\n\t/** (private) returns the used pan-multiplier for damped actions. */\n\tgetPanMult() {\n\t\treturn this.state.distance * this.scale_pan\n\t}\n\t/** (private) returns the used rotate-multiplier for damped actions. */\n\tgetRotationMult() {\n\t\treturn Math.pow(Math.log10(1 + this.state.distance), 0.5) * this.scale_rotation\n\t}\n\n\t//\n\t// damped state changes\n\t//\n\t/** Applies a change to the current zoom.  */\n\tzoom(dz) {\n\t\tvar cam = this.cam\n\t\tvar distance_tmp = cam.state.distance + dz\n\n\t\t// check lower bound\n\t\tif (distance_tmp < cam.distance_min) {\n\t\t\tdistance_tmp = cam.distance_min\n\t\t\tcam.dampedZoom.stop()\n\t\t}\n\n\t\t// check upper bound\n\t\tif (distance_tmp > cam.distance_max) {\n\t\t\tdistance_tmp = cam.distance_max\n\t\t\tcam.dampedZoom.stop()\n\t\t}\n\n\t\tcam.state.distance = distance_tmp\n\t}\n\n\t/** Applies a change to the current pan-xValue.  */\n\tpanX(dx) {\n\t\tvar state = this.cam.state\n\t\tif (dx) {\n\t\t\tvar val = Rotation.applyToVec3(state.rotation, [dx, 0, 0])\n\t\t\tVec3.add(state.center, val, state.center)\n\t\t}\n\t}\n\n\t/** Applies a change to the current pan-yValue.  */\n\tpanY(dy) {\n\t\tvar state = this.cam.state\n\t\tif (dy) {\n\t\t\tvar val = Rotation.applyToVec3(state.rotation, [0, dy, 0])\n\t\t\tVec3.add(state.center, val, state.center)\n\t\t}\n\t}\n\n\tpanZ(dz) {\n\t\tvar state = this.cam.state\n\t\tif (dz) {\n\t\t\tvar val = Rotation.applyToVec3(state.rotation, [0, 0, dz])\n\t\t\tVec3.add(state.center, val, state.center)\n\t\t}\n\t}\n\n\tpanGround(dx, dy, dz) {\n\t\tconst ca = this.centerAxes()\n\t\tVec3.mult(ca.x, dx, ca.x)\n\t\tVec3.mult(ca.z, dz, ca.z)\n\t\tconst val = [0, 0, 0]\n\t\tVec3.add(ca.x, ca.z, val)\n\t\tval[1] = dy\n\t\tVec3.add(this.cam.state.center, val, this.cam.state.center)\n\t}\n\n\tcenterAxes() {\n\t\tconst state = this.cam.state\n\t\t// Get world unit vector for screen-space X axis\n\t\tconst screenX = Rotation.applyToVec3(state.rotation, [1, 0, 0])\n\t\tscreenX[1] = 0 // project X vector onto ground plane\n\t\t// normalize post-projection vector\n\t\tlet mX = Vec3.mag(screenX)\n\t\tif (mX === 0) {\n\t\t\tconsole.warn('[EasyCam] No magnitude for screenX vector', screenX)\n\t\t\tmX = 1\n\t\t}\n\t\tVec3.mult(screenX, 1.0 / mX, screenX)\n\t\t// Get Z vector: cross-product of X with UP (Y)\n\t\tconst screenZ = [0, 0, 0]\n\t\tVec3.cross(screenX, [0, 1, 0], screenZ)\n\t\t// Multiply ground-plane vectors by arguments, apply to camera state\n\t\treturn {\n\t\t\tx: screenX,\n\t\t\ty: [0, 1, 0],\n\t\t\tz: screenZ,\n\t\t}\n\t}\n\n\t/** Applies a change to the current pan-value.  */\n\tpan(dx, dy, dz) {\n\t\tthis.cam.panX(dx)\n\t\tthis.cam.panY(dy)\n\t\tthis.cam.panZ(dz)\n\t}\n\n\t/** Applies a change to the current xRotation.  */\n\trotateX(rx) {\n\t\tthis.cam.rotate([1, 0, 0], rx)\n\t}\n\n\t/** Applies a change to the current yRotation.  */\n\trotateY(ry) {\n\t\tthis.cam.rotate([0, 1, 0], ry)\n\t}\n\n\t/** Applies a change to the current zRotation.  */\n\trotateZ(rz) {\n\t\tthis.cam.rotate([0, 0, 1], rz)\n\t}\n\n\t/** Applies a change to the current rotation, using the given axis/angle.  */\n\trotate(axis, angle) {\n\t\tvar state = this.cam.state\n\t\tif (angle) {\n\t\t\tvar new_rotation = Rotation.create({ axis: axis, angle: angle })\n\t\t\tRotation.applyToRotation(state.rotation, new_rotation, state.rotation)\n\t\t}\n\t}\n\n\t//\n\t// interpolated states\n\t//\n\t/** Sets the new camera-distance, interpolated (t) between given A and B. */\n\tsetInterpolatedDistance(valA, valB, t) {\n\t\tthis.cam.state.distance = Scalar.mix(valA, valB, Scalar.smoothstep(t))\n\t}\n\t/** Sets the new camera-center, interpolated (t) between given A and B. */\n\tsetInterpolatedCenter(valA, valB, t) {\n\t\tthis.cam.state.center = Vec3.mix(valA, valB, Scalar.smoothstep(t))\n\t}\n\t/** Sets the new camera-rotation, interpolated (t) between given A and B. */\n\tsetInterpolatedRotation(valA, valB, t) {\n\t\tthis.cam.state.rotation = Rotation.slerp(valA, valB, t)\n\t}\n\n\t//\n\t// DISTANCE\n\t//\n\t/** Sets the minimum camera distance. */\n\tsetDistanceMin(distance_min) {\n\t\tthis.distance_min = Math.max(distance_min, this.distance_min_limit)\n\t\tthis.zoom(0) // update, to ensure new minimum\n\t}\n\n\t/** Sets the maximum camera distance. */\n\tsetDistanceMax(distance_max) {\n\t\tthis.distance_max = distance_max\n\t\tthis.zoom(0) // update, to ensure new maximum\n\t}\n\n\t/**\n\t * Sets the new camera distance.\n\t *\n\t * @param {double} new distance.\n\t * @param {long} animation time in millis.\n\t */\n\tsetDistance(distance, duration) {\n\t\tthis.timedzoom.start(this.state.distance, distance, duration, [this.dampedZoom])\n\t}\n\n\t/** @returns {double} the current camera distance. */\n\tgetDistance() {\n\t\treturn this.state.distance\n\t}\n\n\t//\n\t// CENTER / LOOK AT\n\t//\n\t/**\n\t * Sets the new camera center.\n\t *\n\t * @param {double[]} new center.\n\t * @param {long} animation time in millis.\n\t */\n\tsetCenter(center, duration) {\n\t\tthis.timedPan.start(this.state.center, center, duration, [this.dampedPanX, this.dampedPanY])\n\t}\n\n\t/** @returns {double[]} the current camera center. */\n\tgetCenter() {\n\t\treturn this.state.center\n\t}\n\n\t//\n\t// ROTATION\n\t//\n\t/**\n\t * Sets the new camera rotation (quaternion).\n\t *\n\t * @param {double[]} new rotation as quat[q0,q1,q2,q3].\n\t * @param {long} animation time in millis.\n\t */\n\tsetRotation(rotation, duration) {\n\t\tthis.timedRot.start(this.state.rotation, rotation, duration, [\n\t\t\tthis.dampedRotX,\n\t\t\tthis.dampedRotY,\n\t\t\tthis.dampedRotZ,\n\t\t])\n\t}\n\n\t/** @returns {double[]} the current camera rotation as quat[q0,q1,q2,q3]. */\n\tgetRotation() {\n\t\treturn this.state.rotation\n\t}\n\n\t//\n\t// CAMERA POSITION/EYE\n\t//\n\t/** @returns {double[]} the current camera position, aka. the eye position. */\n\tgetPosition(dst) {\n\t\tvar cam = this.cam\n\t\tvar state = cam.state\n\n\t\tdst = Vec3.assert(dst)\n\t\tRotation.applyToVec3(state.rotation, cam.LOOK, dst)\n\t\tVec3.mult(dst, state.distance, dst)\n\t\tVec3.add(dst, state.center, dst)\n\n\t\treturn dst\n\t}\n\n\t//\n\t// CAMERA UP\n\t//\n\t/** @returns {double[]} the current camera up vector. */\n\tgetUpVector(dst) {\n\t\tvar cam = this.cam\n\t\tvar state = cam.state\n\t\tdst = Vec3.assert(dst)\n\t\tRotation.applyToVec3(state.rotation, cam.UP, dst)\n\t\treturn dst\n\t}\n\n\t//\n\t// STATE (rotation, center, distance)\n\t//\n\t/** @returns {Object} a copy of the camera state {distance,center,rotation} */\n\tgetState() {\n\t\treturn this.state.copy()\n\t}\n\t/**\n\t * @param {Object} a new camera state {distance,center,rotation}.\n\t * @param {long} animation time in millis.\n\t */\n\tsetState(other, duration) {\n\t\tif (other) {\n\t\t\tthis.setDistance(other.distance, duration)\n\t\t\tthis.setCenter(other.center, duration)\n\t\t\tthis.setRotation(other.rotation, duration)\n\t\t}\n\t}\n\n\tpushState() {\n\t\treturn (this.state_pushed = this.getState())\n\t}\n\tpopState(duration) {\n\t\tthis.setState(this.state_pushed, duration)\n\t}\n\n\t/** sets the current state as reset-state. */\n\tpushResetState() {\n\t\treturn (this.state_reset = this.getState())\n\t}\n\t/** resets the camera, by applying the reset-state. */\n\treset(duration) {\n\t\tthis.setState(this.state_reset, duration)\n\t}\n\n\t/** sets the rotation scale/speed. */\n\tsetRotationScale(scale_rotation) {\n\t\tthis.scale_rotation = scale_rotation\n\t}\n\t/** sets the pan scale/speed. */\n\tsetPanScale(scale_pan) {\n\t\tthis.scale_pan = scale_pan\n\t}\n\t/** sets the zoom scale/speed. */\n\tsetZoomScale(scale_zoom) {\n\t\tthis.scale_zoom = scale_zoom\n\t}\n\t/** sets the wheel scale/speed. */\n\tsetWheelScale(wheelScale) {\n\t\tthis.scale_zoomwheel = wheelScale\n\t}\n\t/** @returns the rotation scale/speed. */\n\tgetRotationScale() {\n\t\treturn this.scale_rotation\n\t}\n\t/** @returns the pan scale/speed. */\n\tgetPanScale() {\n\t\treturn this.scale_pan\n\t}\n\t/** @returns the zoom scale/speed. */\n\tgetZoomScale() {\n\t\treturn this.scale_zoom\n\t}\n\t/** @returns the wheel scale/speed. */\n\tgetWheelScale() {\n\t\treturn this.scale_zoomwheel\n\t}\n\n\t/** sets the default damping scale/speed. */\n\tsetDamping(damping) {\n\t\tthis.dampedZoom.damping = damping\n\t\tthis.dampedPanX.damping = damping\n\t\tthis.dampedPanY.damping = damping\n\t\tthis.dampedPanZ.damping = damping\n\t\tthis.dampedRotX.damping = damping\n\t\tthis.dampedRotY.damping = damping\n\t\tthis.dampedRotZ.damping = damping\n\t}\n\t/** sets the default interpolation time in millis. */\n\tsetDefaultInterpolationTime(duration) {\n\t\tthis.timedRot.default_duration = duration\n\t\tthis.timedPan.default_duration = duration\n\t\tthis.timedzoom.default_duration = duration\n\t}\n\n\t/**\n\t * sets the rotation constraint for each axis separately.\n\t *\n\t * @param {boolean} yaw constraint\n\t * @param {boolean} pitch constraint\n\t * @param {boolean} roll constraint\n\t */\n\tsetRotationConstraint(yaw, pitch, roll) {\n\t\tvar cam = this.cam\n\t\tcam.FIXED_CONSTRAINT = 0\n\t\tcam.FIXED_CONSTRAINT |= yaw ? cam.AXIS.YAW : 0\n\t\tcam.FIXED_CONSTRAINT |= pitch ? cam.AXIS.PITCH : 0\n\t\tcam.FIXED_CONSTRAINT |= roll ? cam.AXIS.ROLL : 0\n\t}\n\n\t/**\n\t *\n\t * begin screen-aligned 2D-drawing.\n\t *\n\t * <pre>\n\t * beginHUD()\n\t *   disabled depth test\n\t *   ortho\n\t *   ... your code is executed here ...\n\t * endHUD()\n\t * </pre>\n\t *\n\t */\n\tbeginHUD(renderer, w, h) {\n\t\tvar cam = this.cam\n\t\trenderer = renderer || cam.renderer\n\n\t\tif (!renderer) return\n\t\tthis.pushed_rendererState = renderer.push()\n\n\t\tvar gl = renderer.drawingContext\n\t\tconst ww = w !== undefined ? w : renderer.width\n\t\tconst hh = h !== undefined ? h : renderer.height\n\t\tvar d = Number.MAX_VALUE\n\n\t\tgl.flush()\n\t\t// gl.finish();\n\n\t\t// 1) disable DEPTH_TEST\n\t\tgl.disable(gl.DEPTH_TEST)\n\t\t// 2) push modelview/projection\n\t\t//    p5 is not creating a push/pop stack\n\t\tthis.pushed_uMVMatrix = renderer.uMVMatrix.copy()\n\t\tthis.pushed_uPMatrix = renderer.uPMatrix.copy()\n\n\t\t// 3) set new modelview (identity)\n\t\trenderer.resetMatrix()\n\t\t// 4) set new projection (ortho)\n\t\trenderer._curCamera.ortho(0, ww, -hh, 0, -d, +d)\n\t\t// renderer.ortho();\n\t\t// renderer.translate(-w/2, -h/2);\n\t}\n\n\t/**\n\t *\n\t * end screen-aligned 2D-drawing.\n\t *\n\t */\n\tendHUD(renderer) {\n\t\tvar cam = this.cam\n\t\trenderer = renderer || cam.renderer\n\n\t\tif (!renderer) return\n\n\t\tvar gl = renderer.drawingContext\n\n\t\tgl.flush()\n\t\t// gl.finish();\n\n\t\t// 2) restore modelview/projection\n\t\trenderer.uMVMatrix.set(this.pushed_uMVMatrix)\n\t\trenderer.uPMatrix.set(this.pushed_uPMatrix)\n\t\t// 1) enable DEPTH_TEST\n\t\tgl.enable(gl.DEPTH_TEST)\n\t\trenderer.pop(this.pushed_rendererState)\n\t}\n}\n\n/**\n * Damped callback, that accepts the resulting damped/smooth value.\n *\n * @callback dampedCallback\n * @param {double} value - the damped/smoothed value\n *\n */\n\n/**\n *\n * DampedAction, for smoothly changing a value to zero.\n *\n * @param {dampedCallback} cb - callback that accepts the damped value as argument.\n */\nclass DampedAction {\n\t/**  @constructor */\n\tconstructor(cb) {\n\t\tthis.value = 0.0\n\t\tthis.damping = 0.85\n\t\tthis.action = cb\n\t}\n\n\t/** adds a value to the current value beeing damped.\n\t * @param {double} force - the value beeing added.\n\t */\n\taddForce(force) {\n\t\tthis.value += force\n\t}\n\n\t/** updates the damping and calls {@link damped-callback}. */\n\tupdate() {\n\t\tvar active = this.value * this.value > 0.000001\n\t\tif (active) {\n\t\t\tthis.action(this.value)\n\t\t\tthis.value *= this.damping\n\t\t} else {\n\t\t\tthis.stop()\n\t\t}\n\t\treturn active\n\t}\n\n\t/** stops the damping. */\n\tstop() {\n\t\tthis.value = 0.0\n\t}\n}\n\n/**\n * Interpolation callback, that implements any form of interpolation between\n * two values A and B and the interpolationparameter t.\n * <pre>\n *   linear: A * (1-t) + B * t\n *   smooth, etc...\n * </pre>\n * @callback interpolationCallback\n * @param {Object} A - First Value\n * @param {Object} B - Second Value\n * @param {double} t - interpolation parameter [0, 1]\n *\n */\n\n/**\n *\n * Interpolation, for smoothly changing a value by interpolating it over time.\n *\n * @param {interpolationCallback} cb - callback for interpolating between two values.\n */\nclass Interpolation {\n\t/**  @constructor */\n\tconstructor(cb) {\n\t\tthis.default_duration = 300\n\t\tthis.action = cb\n\t}\n\n\t/** starts the interpolation.\n\t *  If the given interpolation-duration is 0, then\n\t * {@link interpolation-callback} is called immediately.\n\t */\n\tstart(valA, valB, duration, actions) {\n\t\tfor (var x in actions) {\n\t\t\tactions[x].stop()\n\t\t}\n\t\tthis.valA = valA\n\t\tthis.valB = valB\n\t\tthis.duration = duration === undefined ? this.default_duration : duration\n\t\tthis.timer = new Date().getTime()\n\t\tthis.active = this.duration > 0\n\t\tif (!this.active) {\n\t\t\tthis.interpolate(1)\n\t\t}\n\t}\n\n\t/** updates the interpolation and calls {@link interpolation-callback}.*/\n\tupdate() {\n\t\tif (this.active) {\n\t\t\tvar t = (new Date().getTime() - this.timer) / this.duration\n\t\t\tif (t > 0.995) {\n\t\t\t\tthis.interpolate(1)\n\t\t\t\tthis.stop()\n\t\t\t} else {\n\t\t\t\tthis.interpolate(t)\n\t\t\t}\n\t\t}\n\t}\n\n\tinterpolate(t) {\n\t\tthis.action(this.valA, this.valB, t)\n\t}\n\n\t/** stops the interpolation. */\n\tstop() {\n\t\tthis.active = false\n\t}\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// ROTATION (Quaternion)\n//\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Rotation as Quaternion [q0, q1, q2, q3]\n *\n * Note: Only functions that were required for the EasyCam to work are implemented.\n *\n * @namespace\n */\nvar Rotation = {\n\tassert: function (dst) {\n\t\treturn dst === undefined || dst.constructor !== Array ? [1, 0, 0, 0] : dst\n\t},\n\n\t/** @returns {Number[]} an identity rotation [1,0,0,0] */\n\tidentity: function () {\n\t\treturn [1, 0, 0, 0]\n\t},\n\n\t/**\n\t * Applies the rotation to a vector and returns dst or a new vector.\n\t *\n\t * @param {Number[]} rot - Rotation (Quaternion)\n\t * @param {Number[]} vec - vector to be rotated by rot\n\t * @param {Number[]} dst - resulting vector\n\t * @returns {Number[]} dst- resulting vector\n\t */\n\tapplyToVec3: function (rot, vec, dst) {\n\t\tvar [x, y, z] = vec\n\t\tvar [q0, q1, q2, q3] = rot\n\n\t\tvar s = q1 * x + q2 * y + q3 * z\n\n\t\tdst = Vec3.assert(dst)\n\t\tdst[0] = 2 * (q0 * (x * q0 - (q2 * z - q3 * y)) + s * q1) - x\n\t\tdst[1] = 2 * (q0 * (y * q0 - (q3 * x - q1 * z)) + s * q2) - y\n\t\tdst[2] = 2 * (q0 * (z * q0 - (q1 * y - q2 * x)) + s * q3) - z\n\t\treturn dst\n\t},\n\n\t/**\n\t * Applies the rotation to another rotation and returns dst or a new rotation.\n\t *\n\t * @param {Number[]} rotA - RotationA (Quaternion)\n\t * @param {Number[]} rotB - RotationB (Quaternion)\n\t * @param {Number[]} dst - resulting rotation\n\t * @returns {Number[]} dst - resulting rotation\n\t */\n\tapplyToRotation(rotA, rotB, dst) {\n\t\tvar [a0, a1, a2, a3] = rotA\n\t\tvar [b0, b1, b2, b3] = rotB\n\n\t\tdst = Rotation.assert(dst)\n\t\tdst[0] = b0 * a0 - (b1 * a1 + b2 * a2 + b3 * a3)\n\t\tdst[1] = b1 * a0 + b0 * a1 + (b2 * a3 - b3 * a2)\n\t\tdst[2] = b2 * a0 + b0 * a2 + (b3 * a1 - b1 * a3)\n\t\tdst[3] = b3 * a0 + b0 * a3 + (b1 * a2 - b2 * a1)\n\t\treturn dst\n\t},\n\n\t/**\n\t * Interpolates a rotation.\n\t *\n\t * @param {Number[]} rotA - RotationA (Quaternion)\n\t * @param {Number[]} rotB - RotationB (Quaternion)\n\t * @param {Number  } t - interpolation parameter\n\t * @param {Number[]} dst - resulting rotation\n\t * @returns {Number[]} dst - resulting rotation\n\t */\n\tslerp: function (rotA, rotB, t, dst) {\n\t\tvar [a0, a1, a2, a3] = rotA\n\t\tvar [b0, b1, b2, b3] = rotB\n\n\t\tvar cosTheta = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3\n\t\tif (cosTheta < 0) {\n\t\t\tb0 = -b0\n\t\t\tb1 = -b1\n\t\t\tb2 = -b2\n\t\t\tb3 = -b3\n\t\t\tcosTheta = -cosTheta\n\t\t}\n\n\t\tvar theta = Math.acos(cosTheta)\n\t\tvar sinTheta = Math.sqrt(1.0 - cosTheta * cosTheta)\n\n\t\tvar w1, w2\n\t\tif (sinTheta > 0.001) {\n\t\t\tw1 = Math.sin((1.0 - t) * theta) / sinTheta\n\t\t\tw2 = Math.sin(t * theta) / sinTheta\n\t\t} else {\n\t\t\tw1 = 1.0 - t\n\t\t\tw2 = t\n\t\t}\n\n\t\tdst = Rotation.assert(dst)\n\t\tdst[0] = w1 * a0 + w2 * b0\n\t\tdst[1] = w1 * a1 + w2 * b1\n\t\tdst[2] = w1 * a2 + w2 * b2\n\t\tdst[3] = w1 * a3 + w2 * b3\n\n\t\treturn Rotation.create({ rotation: dst, normalize: true }, dst)\n\t},\n\n\t/**\n\t * Creates/Initiates a new Rotation\n\t *\n\t * <pre>\n\t *\n\t *    1) Axis,Angle:\n\t *       {\n\t *         axis : [x, y, z],\n\t *         angle: double\n\t *       }\n\t *\n\t *    2) Another Rotation:\n\t *       {\n\t *         rotation : [q0, q1, q2, q3],\n\t *         normalize: boolean\n\t *       }\n\t *\n\t *    3) 3 euler angles, XYZ-order:\n\t *       {\n\t *         angles_xyz : [rX, rY, rZ]\n\t *       }\n\t *\n\t * </pre>\n\t *\n\t *\n\t * @param {Object} def - Definition, for creating the new Rotation\n\t * @param {Number[]} dst - resulting rotation\n\t * @returns {Number[]} dst - resulting rotation\n\t */\n\tcreate: function (def, dst) {\n\t\tdst = Rotation.assert(dst)\n\n\t\t// 1) from axis and angle\n\t\tif (def.axis) {\n\t\t\tvar axis = def.axis\n\t\t\tvar angle = def.angle\n\n\t\t\tvar norm = Vec3.mag(axis)\n\t\t\tif (norm === 0.0) return // vector is of zero length\n\n\t\t\tvar halfAngle = -0.5 * angle\n\t\t\tvar coeff = Math.sin(halfAngle) / norm\n\n\t\t\tdst[0] = Math.cos(halfAngle)\n\t\t\tdst[1] = coeff * axis[0]\n\t\t\tdst[2] = coeff * axis[1]\n\t\t\tdst[3] = coeff * axis[2]\n\t\t\treturn dst\n\t\t}\n\n\t\t// 2) from another rotation\n\t\tif (def.rotation) {\n\t\t\tdst[0] = def.rotation[0]\n\t\t\tdst[1] = def.rotation[1]\n\t\t\tdst[2] = def.rotation[2]\n\t\t\tdst[3] = def.rotation[3]\n\n\t\t\tif (def.normalize) {\n\t\t\t\tvar inv =\n\t\t\t\t\t1.0 / Math.sqrt(dst[0] * dst[0] + dst[1] * dst[1] + dst[2] * dst[2] + dst[3] * dst[3])\n\t\t\t\tdst[0] *= inv\n\t\t\t\tdst[1] *= inv\n\t\t\t\tdst[2] *= inv\n\t\t\t\tdst[3] *= inv\n\t\t\t}\n\n\t\t\treturn dst\n\t\t}\n\n\t\t// 3) from 3 euler angles, order XYZ\n\t\tif (def.angles_xyz) {\n\t\t\tvar ax = -0.5 * def.angles_xyz[0]\n\t\t\tvar ay = -0.5 * def.angles_xyz[1]\n\t\t\tvar az = -0.5 * def.angles_xyz[2]\n\n\t\t\tvar rotX = [Math.cos(ax), Math.sin(ax), 0, 0]\n\t\t\tvar rotY = [Math.cos(ay), 0, Math.sin(ay), 0]\n\t\t\tvar rotZ = [Math.cos(az), 0, 0, Math.sin(az)]\n\n\t\t\tRotation.applyToRotation(rotY, rotZ, dst)\n\t\t\tRotation.applyToRotation(rotX, dst, dst)\n\n\t\t\treturn dst\n\t\t}\n\t},\n\n\t//\n\t// ... to be continued ...\n\t//\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// SCALAR\n//\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Scalar as a simple number.\n *\n * Note: Only functions that were required for the EasyCam to work are implemented.\n *\n * @namespace\n */\nvar Scalar = {\n\t/**\n\t * Linear interpolation between A and B using t[0,1]\n\t */\n\tmix: function (a, b, t) {\n\t\treturn a * (1 - t) + b * t\n\t},\n\n\t/**\n\t * modifying t as a function of smoothstep(0,1,t);\n\t */\n\tsmoothstep: function (x) {\n\t\treturn x * x * (3 - 2 * x)\n\t},\n\n\t/**\n\t * modifying t as a function of smootherstep(0,1,t);\n\t */\n\tsmootherstep: function (x) {\n\t\treturn x * x * x * (x * (x * 6 - 15) + 10)\n\t},\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// VEC3\n//\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Vec3 as a 3D vector (Array)\n *\n * @namespace\n */\nvar Vec3 = {\n\tassert: function (dst) {\n\t\treturn dst === undefined || dst.constructor !== Array ? [0, 0, 0] : dst\n\t},\n\n\tisScalar: function (arg) {\n\t\t// TODO: do some profiling to figure out what fails\n\t\treturn arg !== undefined && arg.constructor !== Array\n\t\t// return typeof(arg) === 'number';\n\t},\n\n\t/** addition: <pre> dst = a + b </pre>  */\n\tadd: function (a, b, dst) {\n\t\tdst = this.assert(dst)\n\t\tif (this.isScalar(b)) {\n\t\t\tdst[0] = a[0] + b\n\t\t\tdst[1] = a[1] + b\n\t\t\tdst[2] = a[2] + b\n\t\t} else {\n\t\t\tdst[0] = a[0] + b[0]\n\t\t\tdst[1] = a[1] + b[1]\n\t\t\tdst[2] = a[2] + b[2]\n\t\t}\n\t\treturn dst\n\t},\n\n\t/** componentwise multiplication: <pre> dst = a * b </pre>  */\n\tmult: function (a, b, dst) {\n\t\tdst = this.assert(dst)\n\t\tif (this.isScalar(b)) {\n\t\t\tdst[0] = a[0] * b\n\t\t\tdst[1] = a[1] * b\n\t\t\tdst[2] = a[2] * b\n\t\t} else {\n\t\t\tdst[0] = a[0] * b[0]\n\t\t\tdst[1] = a[1] * b[1]\n\t\t\tdst[2] = a[2] * b[2]\n\t\t}\n\t\treturn dst\n\t},\n\n\t/** squared length  */\n\tmagSq: function (a) {\n\t\treturn a[0] * a[0] + a[1] * a[1] + a[2] * a[2]\n\t},\n\n\t/** length  */\n\tmag: function (a) {\n\t\treturn Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2])\n\t},\n\n\t/** dot-product  */\n\tdot: function (a, b) {\n\t\treturn a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\n\t},\n\n\t/** cross-product  */\n\tcross: function (a, b, dst) {\n\t\tdst = this.assert(dst)\n\t\tdst[0] = a[1] * b[2] - a[2] * b[1]\n\t\tdst[1] = a[2] * b[0] - a[0] * b[2]\n\t\tdst[2] = a[0] * b[1] - a[1] * b[0]\n\t\treturn dst\n\t},\n\n\t/** angle  */\n\tangle: function (v1, v2) {\n\t\tvar normProduct = this.mag(v1) * this.mag(v2)\n\t\tif (normProduct === 0.0) {\n\t\t\treturn 0.0 // at least one vector is of zero length\n\t\t}\n\n\t\tvar dot = this.dot(v1, v2)\n\t\tvar threshold = normProduct * 0.9999\n\t\tif (dot < -threshold || dot > threshold) {\n\t\t\t// the vectors are almost aligned, compute using the sine\n\t\t\tvar v3 = this.cross(v1, v2)\n\t\t\tif (dot >= 0) {\n\t\t\t\treturn Math.asin(this.mag(v3) / normProduct)\n\t\t\t} else {\n\t\t\t\treturn Math.PI - Math.asin(this.mag(v3) / normProduct)\n\t\t\t}\n\t\t}\n\n\t\t// the vectors are sufficiently separated to use the cosine\n\t\treturn Math.acos(dot / normProduct)\n\t},\n\n\t/** linear interpolation: <pre> dst = a * (1 - t) + b * t </pre> */\n\tmix(a, b, t, dst) {\n\t\tdst = this.assert(dst)\n\t\tdst[0] = Scalar.mix(a[0], b[0], t)\n\t\tdst[1] = Scalar.mix(a[1], b[1], t)\n\t\tdst[2] = Scalar.mix(a[2], b[2], t)\n\t\treturn dst\n\t},\n\n\t//\n\t// ... to be continued ...\n\t//\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// public objects\n//\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @static\n */\nEasyCam.INFO = INFO // make static\nObject.freeze(INFO) // and constant\n\n// ext = (ext !== undefined) ? ext : {};\n\n/**\n * @memberof Dw\n */\next.EasyCam = EasyCam\n/**\n * @memberof Dw\n */\next.DampedAction = DampedAction\n/**\n * @memberof Dw\n */\next.Interpolation = Interpolation\n/**\n * @memberof Dw\n */\next.Rotation = Rotation\n/**\n * @memberof Dw\n */\next.Vec3 = Vec3\n/**\n * @memberof Dw\n */\next.Scalar = Scalar\n\n// return ext;\n//\n//\n// })(Dw);\n\n// export const { DampedAction, Interpolation, Rotation, Vec3, Scalar } = ext\nexport default ext\n\n// /**\n//  * @submodule Camera\n//  * @for p5\n//  */\n//\n// if(p5){\n//\n//\n//   /**\n//    * p5.EasyCam creator function.\n//    * Arguments are optional, and equal to the default EasyCam constructor.\n//    * @return {EasyCam} a new EasyCam\n//    */\n//   p5.prototype.createEasyCam = function(/* p5.RendererGL, {state} */){\n//\n//     var renderer = this._renderer;\n//     var args     = arguments[0];\n//\n//     if(arguments[0] instanceof p5.RendererGL){\n//       renderer = arguments[0];\n//       args     = arguments[1]; // could still be undefined, which is fine\n//     }\n//\n//     return new Dw.EasyCam(renderer, args);\n//   }\n// }\n","import * as p5 from 'p5'\nimport { sketch } from './Sketch'\nimport { clockUpdateReq, ClockOpts } from './serverApi/serverClock'\n\nconst userInputsY = 40\n\nfunction prettyUnit(unit: string, val: number, coarse = false) {\n\tlet uu = unit\n\tlet vv = val\n\tconst thresh = coarse ? 0.1 : 1\n\tif (vv < thresh) {\n\t\tvv *= 1000\n\t\tuu = `m${unit}`\n\t}\n\tif (vv < thresh) {\n\t\tvv *= 1000\n\t\tuu = `µ${unit}`\n\t}\n\tconst dec = vv >= 10 ? 0 : vv >= 1 ? 1 : 2\n\treturn `${vv.toFixed(dec)}${uu}`\n}\n\nexport class SketchInputs {\n\tpp?: p5\n\tnameCustomized = false\n\tinputs: {\n\t\t// DOM input elements\n\t\tname?: any\n\t\tinstrument?: any\n\t\tinputDevice?: any\n\t\tlatency?: any\n\t\tbpm?: any\n\t\thide?: any\n\t\thideLoops?: any\n\t\thideDial?: any\n\t\tshowHelp?: any\n\t} = {}\n\thidden = false\n\tclockOpts: ClockOpts = {\n\t\tbpm: 95,\n\t}\n\thelp = false\n\thelpRetoggle = {\n\t\tloops: true,\n\t\tdial: true,\n\t}\n\thelpImg?: p5.Image\n\tpingBeats = 0 // number of beats it takes for a round-trip message to/from the server\n\n\tconstructor(loadedFromStorage = false) {\n\t\tthis.nameCustomized = loadedFromStorage\n\t}\n\n\tbpm = () => (this.inputs.bpm ? this.inputs.bpm.value() : this.clockOpts.bpm)\n\n\tisFocused = () => {\n\t\tfor (const key in this.inputs) {\n\t\t\tconst input = (this.inputs as any)[key]\n\t\t\tif (input && input.focused) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\n\ttoggleHide = () => {\n\t\tif (!this.pp) {\n\t\t\treturn\n\t\t}\n\t\tthis.hidden = !this.hidden\n\t\tthis.setup(this.pp)\n\t\tif (!this.hidden) {\n\t\t\tthis.setupInputsBPM()\n\t\t}\n\t}\n\n\ttoggleHelp = () => {\n\t\tif (!this.pp) {\n\t\t\treturn\n\t\t}\n\t\tconst { loops } = sketch\n\t\tthis.help = !this.help\n\t\tif (this.help) {\n\t\t\tthis.helpRetoggle.loops = !loops.hidden\n\t\t\tthis.helpRetoggle.dial = !loops.hiddenDial\n\t\t}\n\t\tif (this.helpRetoggle.loops) {\n\t\t\tloops.toggleHide()\n\t\t}\n\t\tif (this.helpRetoggle.dial) {\n\t\t\tloops.toggleHideDial()\n\t\t}\n\t\tthis.setup(this.pp)\n\t\tif (!this.help && !this.hidden) {\n\t\t\tthis.setupInputsBPM()\n\t\t}\n\t}\n\n\tsetup = (pp: p5) => {\n\t\tthis.pp = pp\n\t\tif (!this.helpImg) {\n\t\t\tthis.helpImg = pp.loadImage('/help-overlay.png')\n\t\t}\n\t\tif (this.hidden || this.help) {\n\t\t\tfor (const key in this.inputs) {\n\t\t\t\tconst input = (this.inputs as any)[key]\n\t\t\t\tif (!input) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tinput.remove()\n\t\t\t\tdelete (this.inputs as any)[key]\n\t\t\t}\n\t\t\tthis.setupInputsHide(this.pp)\n\t\t\treturn\n\t\t}\n\t\tthis.setupInputsUser(sketch.ws.clientId)\n\t\tthis.setupInputsInstrument()\n\t\t// // setupInputsMidi is commented out because the inputDevice does nothing right now\n\t\t// // (it's disabled in Sketch.sendUserEvent because it's easier to dev if all inputs are handled)\n\t\t// if (!this.inputs.inputDevice) {\n\t\t// \tthis.setupInputsMidi(sketch.midi.webMidi)\n\t\t// }\n\t\tthis.setupInputsHide(pp)\n\t}\n\n\tsetupInputsHide = (pp: p5) => {\n\t\tif (this.inputs.hide) {\n\t\t\tthis.inputs.hide.remove()\n\t\t}\n\t\tif (this.inputs.hideLoops) {\n\t\t\tthis.inputs.hideLoops.remove()\n\t\t}\n\t\tif (this.inputs.hideDial) {\n\t\t\tthis.inputs.hideDial.remove()\n\t\t}\n\t\tif (this.inputs.showHelp) {\n\t\t\tthis.inputs.showHelp.remove()\n\t\t}\n\t\tconst { loops } = sketch\n\t\tthis.inputs.showHelp = pp.createButton(this.help ? 'Hide Help' : 'Show Help') as any\n\t\tconst { showHelp } = this.inputs\n\t\tlet xx = pp.width - showHelp.width - 50\n\t\tconst yy = pp.height - showHelp.height - 10\n\t\tshowHelp.position(xx, yy)\n\t\tshowHelp.mousePressed(this.toggleHelp)\n\t\tif (this.help) {\n\t\t\treturn\n\t\t}\n\t\txx -= 100\n\t\tthis.inputs.hide = pp.createButton(this.hidden ? 'Show Settings' : 'Hide Settings') as any\n\t\tthis.inputs.hideLoops = pp.createButton(loops.toggleHideText()) as any\n\t\tthis.inputs.hideDial = pp.createButton(loops.toggleHideDialText()) as any\n\t\tconst { hide, hideLoops, hideDial } = this.inputs\n\t\thideLoops.position(xx, yy)\n\t\thideLoops.mousePressed(() => {\n\t\t\tloops.toggleHide()\n\t\t\thideLoops.elt.innerHTML = loops.toggleHideText()\n\t\t})\n\t\txx -= 130\n\t\thideDial.position(xx, yy)\n\t\thideDial.mousePressed(() => {\n\t\t\tloops.toggleHideDial()\n\t\t\thideDial.elt.innerHTML = loops.toggleHideDialText()\n\t\t})\n\t\txx -= 110\n\t\thide.position(xx, yy)\n\t\thide.mousePressed(this.toggleHide)\n\t}\n\n\tsetupInputsUser = (clientId: number): any => {\n\t\tconst uu = sketch.user\n\t\tconst defaultName = this.nameCustomized ? uu.name : `User ${sketch.ws.clientId}`\n\t\tif (this.hidden) {\n\t\t\tif (uu.name === '') {\n\t\t\t\tsketch.updateUser({ name: defaultName })\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tif (!this.pp) {\n\t\t\tconsole.log(\n\t\t\t\t'[SketchInputs #setupInputsUser] Attempted to setup user input before sketch was initialized',\n\t\t\t)\n\t\t\treturn\n\t\t}\n\t\tif (this.inputs.name) {\n\t\t\tthis.inputs.name.remove()\n\t\t}\n\t\tif (this.inputs.latency) {\n\t\t\tthis.inputs.latency.remove()\n\t\t}\n\t\tthis.inputs.name = this.pp.createInput(defaultName) as any\n\t\tthis.inputs.latency = this.pp.createInput(`${sketch.user.offset}`) as any\n\t\tconst { name: inName, latency: inLatency } = this.inputs\n\t\tinName.size(80)\n\t\tinName.position(20, userInputsY)\n\t\tinName.input(() => {\n\t\t\t// console.log('[SketchInputs #inputs.name] Changed:', inName.value())\n\t\t\tthis.nameCustomized = true\n\t\t\tsketch.updateUser({ name: inName.value() })\n\t\t})\n\t\tinName.elt.onfocus = () => (inName.focused = true)\n\t\tinName.elt.onblur = () => (inName.focused = false)\n\t\t// // Uncomment to select name field on load:\n\t\t// inName.elt.focus()\n\t\t// inName.elt.select()\n\t\tsketch.updateUser({ name: inName.value() }, false)\n\n\t\tinLatency.size(50)\n\t\tinLatency.position(inName.x + inName.width + 10, userInputsY)\n\t\tconst setLatency = () => {\n\t\t\tconst lat = parseFloat(inLatency.value())\n\t\t\tif (!Number.isNaN(lat)) {\n\t\t\t\tsketch.updateUser({ offset: lat })\n\t\t\t\tsketch.loops.updateRecOffset(lat)\n\t\t\t}\n\t\t}\n\t\tinLatency.input(() => {\n\t\t\tconsole.log('[SketchInputs #inputs.latency] Changed:', inLatency.value())\n\t\t\tsetLatency()\n\t\t})\n\t\tinLatency.elt.onfocus = () => (inLatency.focused = true)\n\t\tinLatency.elt.onblur = () => (inLatency.focused = false)\n\t\tsetLatency()\n\t}\n\n\tsetupInputsInstrument = () => {\n\t\tif (!this.pp || !this.inputs.latency || this.hidden) {\n\t\t\treturn\n\t\t}\n\t\tif (this.inputs.instrument) {\n\t\t\tthis.inputs.instrument.remove()\n\t\t}\n\t\tconst inInst = this.pp.createSelect() as any\n\t\tinInst.position(this.inputs.latency.x + this.inputs.latency.width + 10, userInputsY)\n\t\tconst uinst = sketch.user.instrument\n\t\tinInst.size(130)\n\t\tfor (const instName in sketch.instruments) {\n\t\t\tinInst.option(instName)\n\t\t\tif (instName === uinst) {\n\t\t\t\tinInst.selected(instName)\n\t\t\t}\n\t\t}\n\t\tinInst.changed(() => {\n\t\t\tsketch.updateUser({ instrument: inInst.value() })\n\t\t})\n\t\tinInst.elt.onfocus = () => (inInst.focused = true)\n\t\tinInst.elt.onblur = () => (inInst.focused = false)\n\t\tthis.inputs.instrument = inInst\n\t\tsketch.updateUser({ instrument: inInst.value() }, false)\n\t}\n\n\tsetupInputsMidi = (webMidi: any) => {\n\t\tif (!this.pp || !this.inputs.instrument || this.hidden) {\n\t\t\treturn\n\t\t}\n\t\tif (this.inputs.inputDevice) {\n\t\t\tthis.inputs.inputDevice.remove()\n\t\t}\n\t\tconst { inputs } = webMidi || { inputs: [] }\n\t\tconst inMidi = this.pp.createSelect() as any\n\t\tconst inInst = this.inputs.instrument\n\t\tinMidi.position(inInst.x + inInst.width + 10, userInputsY)\n\t\tinMidi.option('keyboard')\n\t\tfor (const input of inputs) {\n\t\t\tconst { _midiInput } = input\n\t\t\tif (!_midiInput) {\n\t\t\t\tconsole.error('[SketchInputs #setupInputsMidi] Received a midi input with missing data')\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tinMidi.option(_midiInput.name)\n\t\t}\n\t\tinMidi.selected(sketch.user.inputDevice)\n\t\tinMidi.changed(() => {\n\t\t\tsketch.updateUser({ inputDevice: inMidi.value() })\n\t\t})\n\t\tinMidi.elt.onfocus = () => (inMidi.focused = true)\n\t\tinMidi.elt.onblur = () => (inMidi.focused = false)\n\t\tthis.inputs.inputDevice = inMidi\n\t\tsketch.updateUser({ inputDevice: inMidi.value() }, false)\n\t}\n\n\tsetupInputsBPM = () => {\n\t\tif (!this.pp || this.hidden) {\n\t\t\treturn\n\t\t}\n\t\tif (this.inputs.bpm) {\n\t\t\tthis.inputs.bpm.remove()\n\t\t}\n\t\tconst inBPM = this.pp.createSlider(30, 200, this.clockOpts.bpm) as any\n\t\tinBPM.position(20, this.pp.height - 40)\n\t\tinBPM.size(300)\n\t\tinBPM.input(() => {\n\t\t\tthis.clockOpts.bpm = inBPM.value()\n\t\t\tthis.clockOpts.clientId = sketch.user.clientId\n\t\t\tthis.sendClockUpdate(this.clockOpts)\n\t\t})\n\t\tinBPM.elt.onfocus = () => (inBPM.focused = true)\n\t\tinBPM.elt.onblur = () => (inBPM.focused = false)\n\t\tthis.inputs.bpm = inBPM\n\t}\n\n\tdraw = (pp: p5) => {\n\t\tif (this.help) {\n\t\t\tthis.drawHelp(pp)\n\t\t\treturn\n\t\t}\n\t\tif (this.hidden) {\n\t\t\treturn\n\t\t}\n\t\t// Draw labels for inputs\n\t\tthis.drawClockStats(pp)\n\t\tpp.textSize(12).textAlign(pp.LEFT, pp.BOTTOM).textStyle(pp.BOLD)\n\t\tpp.fill(255).strokeWeight(1).stroke(0)\n\t\tfor (const key in this.inputs) {\n\t\t\tconst input = (this.inputs as any)[key]\n\t\t\tif (!input) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tconst xx = input.x + 3\n\t\t\tconst yy = input.y - 5\n\t\t\tswitch (true) {\n\t\t\t\tcase key === 'hide':\n\t\t\t\tcase key === 'hideLoops':\n\t\t\t\tcase key === 'hideDial':\n\t\t\t\tcase key === 'showHelp':\n\t\t\t\t\tcontinue\n\t\t\t\tcase key === 'latency':\n\t\t\t\t\tpp.push()\n\t\t\t\t\tconst lat = parseFloat(input.value())\n\t\t\t\t\tlet msg = ``\n\t\t\t\t\tif (Number.isNaN(lat)) {\n\t\t\t\t\t\t// Show the user that they have an invalid value\n\t\t\t\t\t\tpp.fill(255, 40, 40)\n\t\t\t\t\t\tmsg = ` (NaN!)`\n\t\t\t\t\t} else if (this.pingBeats > lat / 2) {\n\t\t\t\t\t\t// Warn user that latency is less than half of ping\n\t\t\t\t\t\tpp.fill(255, 128, 0)\n\t\t\t\t\t\tmsg = ` (check ping)`\n\t\t\t\t\t}\n\t\t\t\t\tpp.text(`${key.toUpperCase()}${msg}${'\\n'}in beats`, xx, yy)\n\t\t\t\t\tpp.pop()\n\t\t\t\t\tbreak\n\t\t\t\tcase key in sketch.user:\n\t\t\t\t\tpp.text(key.toUpperCase(), xx, yy)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tpp.text(`${key.toUpperCase()}: ${input.value()}`, xx, yy)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawClockStats = (pp: p5) => {\n\t\tpp.push()\n\t\tpp.colorMode(pp.HSL, 1)\n\t\tconst ppLabel = () => pp.fill(0, 0, 0.7).textAlign(pp.RIGHT, pp.BOTTOM)\n\t\tconst ppValue = (warn: boolean) =>\n\t\t\tpp.textAlign(pp.LEFT, pp.BOTTOM).fill(0, warn ? 1 : 0, warn ? 0.65 : 0.85)\n\t\tconst beatMs = sketch.beatMs()\n\t\tconst xx = 20,\n\t\t\txc = xx + 60 // x pos for colon in aligned '<label>: <value>' rows\n\t\tlet yy = pp.height - 140\n\t\t// draw heading\n\t\tpp.fill(0.58, 0.8, 0.65).strokeWeight(1).stroke(0)\n\t\tpp.textAlign(pp.LEFT, pp.BOTTOM).textSize(13).textStyle(pp.BOLD)\n\t\tpp.text(`Clock stats (B = beat = ${prettyUnit('s', beatMs / 1000)})`, xx, yy)\n\t\tpp.textSize(12).strokeWeight(1)\n\t\tyy += 20\n\t\tif (!sketch.ws.ready()) {\n\t\t\tppValue(true).text(`NO CONNECTION TO SERVER`, xx, yy)\n\t\t\tpp.pop()\n\t\t\treturn\n\t\t}\n\t\t// draw precision and ping stats\n\t\tconst { offset: latency } = sketch.user\n\t\tconst { precisionNow, pingMs } = sketch.ws.clock\n\t\tthis.pingBeats = pingMs / beatMs\n\t\tconst prec = Math.abs(precisionNow)\n\t\tconst precStr = `${prettyUnit('s', prec / 1000)} (${prettyUnit('B', prec / beatMs, true)})`\n\t\tconst pingStr = `${prettyUnit('s', pingMs / 1000)} (${prettyUnit('B', this.pingBeats, true)})`\n\t\tppLabel().text(`precision:`, xc, yy)\n\t\tppValue(prec / beatMs >= 1.0 / 32) // warn if clock precision is worse than 128th note\n\t\t\t.text(precStr, xc + 5, yy)\n\t\tyy += 20\n\t\tppLabel().text(`ping:`, xc, yy)\n\t\tppValue(this.pingBeats > latency / 2) // warn if ping is close to latency value\n\t\t\t.text(pingStr, xc + 5, yy)\n\t\tpp.pop()\n\t}\n\n\tdrawHelp = (pp: p5) => {\n\t\tif (!this.helpImg) {\n\t\t\treturn\n\t\t}\n\t\tconst haspect = this.helpImg.height / this.helpImg.width\n\t\tconst hx = 40\n\t\tconst ww = pp.width - hx * 2\n\t\tconst hh = haspect * ww\n\t\tconst hy = (pp.height - hh) / 2\n\t\tpp.background(60, 220)\n\t\tpp.image(this.helpImg, hx, hy, ww, hh)\n\t}\n\n\tsendClockUpdate = (clk: ClockOpts) => {\n\t\tconst { conn, ready } = sketch.ws\n\t\tif (!ready()) {\n\t\t\tconsole.warn(\n\t\t\t\t\"[SketchInputs #sendClockUpdate] Can't send bpm update, websocket connection is not open\",\n\t\t\t)\n\t\t\treturn\n\t\t}\n\t\tconn.send(clockUpdateReq(clk))\n\t}\n\n\tonClockUpdate = (clk: ClockOpts) => {\n\t\tthis.clockOpts = clk\n\t\tif (!this.inputs.bpm) {\n\t\t\treturn\n\t\t}\n\t\tthis.inputs.bpm.value(clk.bpm)\n\t}\n\n\tkeyPressed = (evt: p5) => {\n\t\tlet prev: boolean\n\t\tswitch (evt.key) {\n\t\t\tcase 'c':\n\t\t\t\tprev = true\n\t\t\t\tbreak\n\t\t\tcase 'v':\n\t\t\t\tprev = false\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\treturn\n\t\t}\n\t\tconst uinst = sketch.user.instrument\n\t\tconst keys = Object.keys(sketch.instruments)\n\t\tfor (let ii = 0; ii < keys.length; ii++) {\n\t\t\tconst iname = keys[ii]\n\t\t\tif (iname !== uinst) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tlet switchTo: string\n\t\t\tif (prev) {\n\t\t\t\tif (ii === 0) {\n\t\t\t\t\tswitchTo = keys[keys.length - 1]\n\t\t\t\t} else {\n\t\t\t\t\tswitchTo = keys[ii - 1]\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (ii === keys.length - 1) {\n\t\t\t\t\tswitchTo = keys[0]\n\t\t\t\t} else {\n\t\t\t\t\tswitchTo = keys[ii + 1]\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.inputs.instrument) {\n\t\t\t\tthis.inputs.instrument.selected(switchTo)\n\t\t\t}\n\t\t\tsketch.updateUser({ instrument: switchTo })\n\t\t\treturn\n\t\t}\n\t}\n}\n","import AudioKeys from 'audiokeys'\nimport Sketch from './Sketch'\nimport { MidiEvent } from './MIDI'\nimport { KEYCODE_CONTROL } from './constants'\n\ntype AudioKeysEvent = {\n\t// the midi number of the note\n\tnote: number\n\t// the keyCode of the key being pressed down\n\tkeyCode: number\n\t// the frequency of the note\n\tfrequency: number\n\t// on note down: the current velocity (this can only be set when rows = 1)\n\t// on note up: 0\n\tvelocity: number\n}\n\nexport class SketchAudioKeys {\n\tsketch: Sketch\n\taudioKeys: AudioKeys\n\n\tconstructor(sketch: Sketch) {\n\t\tthis.sketch = sketch\n\t\tthis.audioKeys = new AudioKeys({ polyphony: Infinity, velocity: 95 })\n\t\tthis.audioKeys.down(this.keyPressed)\n\t\tthis.audioKeys.up(this.keyReleased)\n\t}\n\n\tkeyPressed = (evt: AudioKeysEvent) => {\n\t\tconst { note, velocity } = evt\n\t\tif (this.sketch.keyboardInputDisabled()) {\n\t\t\treturn\n\t\t}\n\t\tconst { pp } = this.sketch\n\t\tif (pp && pp.keyIsDown(KEYCODE_CONTROL)) {\n\t\t\treturn\n\t\t}\n\t\tif (this.sketch.user.inputDevice !== 'keyboard') {\n\t\t\treturn\n\t\t}\n\t\tconst midiEvt = { kind: 'noteon', note: note, attack: velocity / 128.0 } as MidiEvent\n\t\tthis.sketch.sendUserEvent('keyboard', 'noteon', midiEvt)\n\t}\n\n\tkeyReleased = (evt: AudioKeysEvent) => {\n\t\tconst { note } = evt\n\t\tif (this.sketch.keyboardInputDisabled()) {\n\t\t\treturn\n\t\t}\n\t\tif (this.sketch.user.inputDevice !== 'keyboard') {\n\t\t\treturn\n\t\t}\n\t\tconst midiEvt = { kind: 'noteoff', note: note } as MidiEvent\n\t\tthis.sketch.sendUserEvent('keyboard', 'noteoff', midiEvt)\n\t}\n}\n","import * as p5 from 'p5'\nimport { v4 as uuid } from 'uuid'\nimport { UserEvent } from './serverApi/serverApi'\nimport { sketch } from './Sketch'\nimport { BLACK_KEYS } from './constants'\nimport { ctrlColor } from './util'\n\nexport const radBig = 50\nexport const radSmall = 35\n\ntype LoopEvent = {\n\tevt: UserEvent\n\tloopTime: number // normalized 0-1 to loop duration\n\trelease?: LoopEvent // reference to release for attack events\n}\n\ntype LoopData = {\n\tid: string\n\tbeats: number\n\tevts: LoopEvent[]\n\tisMuted: boolean\n}\n\nexport type LoopOpts = {\n\tid?: string\n\tbeats: number\n\tradius: number\n\tisDial?: boolean\n}\n\nexport class Loop {\n\topts: LoopOpts\n\tid: string\n\txx = 0\n\tyy = 0\n\tevts: LoopEvent[] = []\n\theadPlay = 0\n\theadRec = 0\n\tisActive = false\n\tisDial = false\n\tisRecording = false\n\tisMuted = false\n\tloaded = false\n\tpgControls?: p5.Graphics\n\tpgNotes?: p5.Graphics\n\tneedsRenderControls = false\n\tneedsRenderNotes = false\n\t// data: LoopData\n\n\tconstructor(opts: LoopOpts) {\n\t\tthis.opts = opts\n\t\tif (opts.id) {\n\t\t\tthis.id = opts.id\n\t\t\tif (this.load()) {\n\t\t\t\tconsole.log(`[Loop #ctor] Loaded loop ${opts.id} from local storage`)\n\t\t\t\tthis.needsRenderControls = true\n\t\t\t\tthis.needsRenderNotes = true\n\t\t\t\treturn // loaded loop from local storage\n\t\t\t} else {\n\t\t\t\tconsole.error(`[Loop #ctor] Failed to load loop ${opts.id} from local storage`)\n\t\t\t}\n\t\t} else {\n\t\t\tthis.id = uuid()\n\t\t}\n\t\tif (opts.isDial) {\n\t\t\tthis.isDial = true\n\t\t} else {\n\t\t\tthis.isActive = true\n\t\t}\n\t}\n\n\tsave = () => {\n\t\tconst { id, isMuted, evts, opts } = this\n\t\tconst { beats } = opts\n\t\tconst data = { id, beats, evts, isMuted }\n\t\tsketch.localStorage.setItem(id, JSON.stringify(data))\n\t\t// console.log(`[Loop #save] Saved loop ${id} to local storage`)\n\t}\n\n\tload = () => {\n\t\tconst { id, opts } = this\n\t\tconst dataStr = sketch.localStorage.getItem(id)\n\t\tif (!dataStr || dataStr === '') {\n\t\t\tthis.loaded = false\n\t\t\treturn false\n\t\t}\n\t\tconst data = JSON.parse(dataStr) as LoopData\n\t\topts.beats = data.beats\n\t\tthis.evts = data.evts\n\t\tthis.evts.forEach(le => (le.evt.timestamp = 0))\n\t\tthis.isMuted = data.isMuted\n\t\tthis.loaded = true\n\t\treturn true\n\t}\n\n\tremove = () => {\n\t\tlocalStorage.removeItem(this.id)\n\t}\n\n\tsetRadius = (rad: number) => {\n\t\tif (rad === this.opts.radius) {\n\t\t\treturn\n\t\t}\n\t\tthis.opts.radius = rad\n\t\t// redraw notes and controls\n\t\tif (this.pgControls) {\n\t\t\tthis.needsRenderControls = true\n\t\t}\n\t\tif (this.pgNotes) {\n\t\t\tthis.needsRenderNotes = true\n\t\t}\n\t}\n\n\tloopLenMs = () => this.opts.beats * sketch.beatMs()\n\n\tloopUserEvent = (evt: UserEvent) => {\n\t\tconst recOff = sketch.offsetMs()\n\t\tconst now = sketch.nowMs()\n\t\tconst loopTime = this.timeGlobalToLoopNorm(now + recOff)\n\t\tconst levt = {\n\t\t\tevt,\n\t\t\tloopTime,\n\t\t}\n\t\tconst { kind, note } = evt.midiEvent\n\t\tif (kind === 'noteoff') {\n\t\t\t// Attach event to the associated noteon event\n\t\t\tconst attacks = this.filterNote(this.attackEvents(), note)\n\t\t\tlet attackEvt: LoopEvent | null = null\n\t\t\tlet minDiff = 1\n\t\t\tconst relTime = loopTime + 1\n\t\t\tfor (const ae of attacks) {\n\t\t\t\tlet attTime = ae.loopTime > loopTime ? ae.loopTime : ae.loopTime + 1\n\t\t\t\tconst diff = relTime - attTime\n\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\tminDiff = diff\n\t\t\t\t\tattackEvt = ae\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (attackEvt) {\n\t\t\t\tattackEvt.release = levt\n\t\t\t} else {\n\t\t\t\tconsole.warn('[Loop #loopUserEvent] No attack event found for release', levt)\n\t\t\t}\n\t\t\tthis.needsRenderNotes = true\n\t\t\treturn\n\t\t}\n\t\tif (kind === 'controlchange' || kind === 'pitchbend') {\n\t\t\tthis.needsRenderControls = true\n\t\t}\n\t\tif (kind === 'noteon' || kind === 'noteoff') {\n\t\t\tthis.needsRenderNotes = true\n\t\t}\n\t\tthis.evts.push(levt)\n\t}\n\n\tsanitizeEvents = () => {\n\t\t// Remove any attacks that don't have releases\n\t\tthis.evts = this.evts.filter(ee => ee.evt.midiEvent.kind !== 'noteon' || ee.release)\n\t}\n\n\tupdateClientId = (clientId: number) => {\n\t\tfor (const le of this.evts) {\n\t\t\tle.evt.clientId = clientId\n\t\t\tif (le.release) {\n\t\t\t\tle.release.evt.clientId = clientId\n\t\t\t}\n\t\t}\n\t}\n\n\tattackEvents = () => this.evts.filter(ee => ee.evt.midiEvent.kind === 'noteon')\n\treleaseEvents = () => this.evts.filter(ee => ee.evt.midiEvent.kind === 'noteoff')\n\tcontrolEvents = () =>\n\t\tthis.evts.filter(\n\t\t\tee => ee.evt.midiEvent.kind === 'controlchange' || ee.evt.midiEvent.kind === 'pitchbend',\n\t\t)\n\tsortByLoopTime = (evts: LoopEvent[]) =>\n\t\tevts.sort((aa: LoopEvent, bb: LoopEvent) => (aa.loopTime > bb.loopTime ? 1 : -1))\n\tgroupByController = (evts: LoopEvent[]) => {\n\t\tconst resp: { [key: number]: LoopEvent[] } = {}\n\t\tfor (const le of evts) {\n\t\t\tconst { controller } = le.evt.midiEvent\n\t\t\tconst ctrl = controller ? controller.number : 0\n\t\t\tif (!resp[ctrl]) {\n\t\t\t\tresp[ctrl] = []\n\t\t\t}\n\t\t\tresp[ctrl].push(le)\n\t\t}\n\t\treturn resp\n\t}\n\tfilterNote = (evts: LoopEvent[], note: number) => evts.filter(ee => ee.evt.midiEvent.note === note)\n\n\tclearAllEvents = () => {\n\t\t// Remove all loop events\n\t\tthis.evts = []\n\t\tthis.save()\n\t\t// Update note and control graphics\n\t\tif (this.pgControls) {\n\t\t\tthis.needsRenderControls = true\n\t\t}\n\t\tif (this.pgNotes) {\n\t\t\tthis.needsRenderNotes = true\n\t\t}\n\t}\n\n\t_lastDownbeat = 0\n\t_lastBeats = 0\n\tupdate = () => {\n\t\t// Calculate play and rec heads normalized (0-1) to the loop length\n\t\tconst now = sketch.nowMs()\n\t\tconst recOff = sketch.offsetMs()\n\t\tconst play = this.timeGlobalToLoopNorm(now)\n\t\tlet rec = this.timeGlobalToLoopNorm(now + recOff)\n\t\tconst headRecPrev = this.headRec\n\n\t\tthis.headPlay = play\n\t\tthis.headRec = rec\n\n\t\tif (this.isMuted) {\n\t\t\treturn\n\t\t}\n\t\tif (this._lastDownbeat !== sketch.downbeat || this._lastBeats !== this.opts.beats) {\n\t\t\tthis._lastDownbeat = sketch.downbeat\n\t\t\tthis._lastBeats = this.opts.beats\n\t\t\treturn // downbeat changed, skip an update so we don't get faulty triggers\n\t\t}\n\n\t\t// Trigger looped events if an offset boundary was crossed\n\t\tfor (const levt of this.evts) {\n\t\t\tconst { evt, loopTime, release } = levt\n\t\t\tlet lt = loopTime\n\t\t\tif (evt.timestamp > now - sketch.beatMs() / 2) {\n\t\t\t\tcontinue // don't trigger the first event since it is sent directly\n\t\t\t}\n\t\t\tif (rec < headRecPrev) {\n\t\t\t\t// crossed the 1/0 boundary\n\t\t\t\tif (lt <= rec) {\n\t\t\t\t\tlt += 1\n\t\t\t\t}\n\t\t\t\trec += 1\n\t\t\t}\n\t\t\tif (headRecPrev < lt && lt <= rec) {\n\t\t\t\tsketch._sendUserEvent({\n\t\t\t\t\t...levt.evt,\n\t\t\t\t\ttimestamp: this.timeLoopNormToGlobal(now + recOff, lt),\n\t\t\t\t})\n\t\t\t\tif (release) {\n\t\t\t\t\tlet after = release.loopTime - loopTime\n\t\t\t\t\tif (after <= 0) {\n\t\t\t\t\t\tafter += 1\n\t\t\t\t\t}\n\t\t\t\t\tsketch._sendUserEvent({\n\t\t\t\t\t\t...release.evt,\n\t\t\t\t\t\ttimestamp: this.timeLoopNormToGlobal(now + recOff, lt + after),\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trecStartedAt: number | null = null\n\tdraw = (pp: p5, xx: number, yy: number) => {\n\t\tconst { beats, radius } = this.opts\n\t\tconst { isActive, isDial, isMuted, isRecording } = this\n\t\tthis.xx = xx\n\t\tthis.yy = yy\n\t\tif (isRecording) {\n\t\t\tif (this.recStartedAt === null) {\n\t\t\t\tthis.recStartedAt = this.headRec\n\t\t\t}\n\t\t\tpp.fill(30).stroke(255, 0, 0).strokeWeight(4)\n\t\t} else {\n\t\t\tthis.recStartedAt = null\n\t\t\tpp.fill(30).stroke(0).strokeWeight(2)\n\t\t}\n\t\tpp.circle(this.xx, this.yy, radius * 2 + (isRecording ? 2 : 0))\n\n\t\t// Draw a line for every beat\n\t\tfor (let ii = 0; ii < beats; ii++) {\n\t\t\tconst isDown = ii % 4 === 0\n\t\t\tconst isFirst = ii === 0\n\t\t\tpp.stroke(isFirst ? 180 : isDown ? 130 : 80)\n\t\t\tpp.strokeWeight(isFirst ? 3 : isDown ? 2 : 1)\n\t\t\tconst bb = ii / beats\n\t\t\tthis.drawLine(pp, radius, bb)\n\t\t}\n\n\t\tthis.drawEvents(pp)\n\n\t\tif (isMuted) {\n\t\t\tpp.fill(30, 150).noStroke()\n\t\t\tpp.circle(this.xx, this.yy, radius * 2)\n\t\t}\n\n\t\t// Draw indicators for playhead and record-head\n\t\tconst { headPlay, headRec } = this\n\t\tif (isDial || isRecording) {\n\t\t\tconst arcPlay = (Math.ceil(headPlay * beats) % beats) / beats\n\t\t\tconst arcRec = (Math.ceil(headRec * beats) % beats) / beats\n\t\t\tlet recFillAlpha = 100\n\t\t\tif (isDial) {\n\t\t\t\tpp.fill(0, 200, 0, 60).noStroke()\n\t\t\t\tthis.drawArc(pp, radius, arcPlay)\n\t\t\t\trecFillAlpha = 140\n\t\t\t}\n\t\t\tpp.fill(180, 0, 0, recFillAlpha).noStroke()\n\t\t\tif (headRec !== headPlay) {\n\t\t\t\tconst rad = isRecording ? radius : radius * 0.7\n\t\t\t\tif (isRecording && this.recStartedAt !== null) {\n\t\t\t\t\tthis.drawArc(pp, rad, headRec, this.recStartedAt)\n\t\t\t\t} else {\n\t\t\t\t\tthis.drawArc(pp, rad, arcRec, headPlay)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isActive || !isMuted) {\n\t\t\tif (isMuted) {\n\t\t\t\tpp.stroke(100).strokeWeight(3)\n\t\t\t} else {\n\t\t\t\tpp.stroke(0, 200, 0).strokeWeight(3)\n\t\t\t}\n\t\t\tthis.drawLine(pp, radius, headPlay)\n\t\t}\n\t\tif (isDial || isActive) {\n\t\t\tpp.stroke(200, 0, 0).strokeWeight(4)\n\t\t\tconst rad = isRecording ? radius : radius * 0.7\n\t\t\tthis.drawLine(pp, rad, headRec)\n\t\t}\n\t}\n\n\t// drawEvents draws an arc stroke for every note\n\tdrawEvents = (pp: p5) => {\n\t\tif (this.isDial) {\n\t\t\treturn\n\t\t}\n\t\tthis.drawControls(pp)\n\t\tthis.drawNotes(pp)\n\t}\n\n\tdrawControls = (pp: p5) => {\n\t\tconst { radius } = this.opts\n\t\tif (this.needsRenderControls) {\n\t\t\tthis.needsRenderControls = false\n\t\t\tif (!this.pgControls) {\n\t\t\t\tthis.pgControls = pp.createGraphics(radBig * 2, radBig * 2)\n\t\t\t}\n\t\t\t// Stash the x and y coords and override with center of graphics\n\t\t\tconst [tmpx, tmpy] = [this.xx, this.yy]\n\t\t\tthis.xx = radius\n\t\t\tthis.yy = radius\n\t\t\tthis.renderControls()\n\t\t\tthis.xx = tmpx\n\t\t\tthis.yy = tmpy\n\t\t}\n\t\tif (this.pgControls) {\n\t\t\tpp.image(this.pgControls, this.xx - radius, this.yy - radius)\n\t\t}\n\t}\n\n\tdrawNotes = (pp: p5) => {\n\t\tconst { radius } = this.opts\n\t\tif (this.needsRenderNotes) {\n\t\t\tthis.needsRenderNotes = false\n\t\t\tif (!this.pgNotes) {\n\t\t\t\tthis.pgNotes = pp.createGraphics(radBig * 2, radBig * 2)\n\t\t\t}\n\t\t\tconst [tmpx, tmpy] = [this.xx, this.yy]\n\t\t\tthis.xx = radius\n\t\t\tthis.yy = radius\n\t\t\tthis.renderNotes()\n\t\t\tthis.xx = tmpx\n\t\t\tthis.yy = tmpy\n\t\t}\n\t\tif (this.pgNotes) {\n\t\t\tpp.image(this.pgNotes, this.xx - radius, this.yy - radius)\n\t\t}\n\t\tif (this.isRecording) {\n\t\t\tthis._drawNotes(pp, true) // draw any unreleased notes\n\t\t}\n\t}\n\n\tdrawLine = (pp: p5, rad: number, loopTime: number) => {\n\t\tconst theta = Math.PI * 2 * loopTime\n\t\tconst lx = this.xx + (rad - 2) * Math.sin(theta)\n\t\tconst ly = this.yy - (rad - 2) * Math.cos(theta)\n\t\tpp.line(this.xx, this.yy, lx, ly)\n\t}\n\n\tdrawArc = (pp: p5, rad: number, loopTime: number, fromTime: number = 0) => {\n\t\tconst theta = Math.PI * (2 * loopTime - 0.5)\n\t\tconst from = Math.PI * (2 * fromTime - 0.5)\n\t\tpp.arc(this.xx, this.yy, rad * 2, rad * 2, from, theta)\n\t}\n\n\trenderControls = () => {\n\t\tif (!this.pgControls) {\n\t\t\treturn\n\t\t}\n\t\tconst pg = this.pgControls\n\t\tpg.clear()\n\t\tconst cevts = this.groupByController(this.sortByLoopTime(this.controlEvents()))\n\t\tif (!Object.keys(cevts).length) {\n\t\t\treturn\n\t\t}\n\t\tconst { radius } = this.opts\n\t\tpg.strokeWeight(2).noFill()\n\t\tpg.colorMode(pg.HSL, 1)\n\t\tfor (const ctrl in cevts) {\n\t\t\tconst col = ctrlColor(ctrl)\n\t\t\tconst len = cevts[ctrl].length\n\t\t\tfor (let ii = 0; ii < len; ii++) {\n\t\t\t\tconst { loopTime, evt } = cevts[ctrl][ii]\n\t\t\t\tconst nextEvtIdx = ii === len - 1 ? 0 : ii + 1\n\t\t\t\tconst { loopTime: nextTime } = cevts[ctrl][nextEvtIdx]\n\t\t\t\tconst { kind, value } = evt.midiEvent\n\t\t\t\tconst isPitchbend = kind === 'pitchbend'\n\t\t\t\tconst vv = isPitchbend ? value / 2 + 0.5 : value\n\t\t\t\tconst rad = radius * (0.3 + 0.65 * vv)\n\t\t\t\tpg.stroke(col.hue, col.sat, col.lgt)\n\t\t\t\tthis.drawArc(pg, rad, nextTime, loopTime)\n\t\t\t}\n\t\t}\n\t}\n\n\trenderNotes = () => {\n\t\tif (!this.pgNotes) {\n\t\t\treturn\n\t\t}\n\t\tthis.pgNotes.clear()\n\t\tthis._drawNotes(this.pgNotes)\n\t}\n\n\t_drawNotes = (pp: p5, unreleasedOnly = false) => {\n\t\tconst modNotes = 12\n\t\tconst { radius } = this.opts\n\t\tpp.strokeWeight(radius / modNotes).noFill()\n\t\tpp.colorMode(pp.HSL, 1)\n\t\tfor (const { loopTime, evt, release } of this.attackEvents()) {\n\t\t\tconst { note, attack } = evt.midiEvent\n\t\t\tlet relTime = this.headRec\n\t\t\tif (release) {\n\t\t\t\tif (unreleasedOnly) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\trelTime = release.loopTime\n\t\t\t}\n\t\t\tconst rad = radius * (0.3 + (0.7 * (note % modNotes)) / modNotes)\n\t\t\tconst nn = note % 12\n\t\t\tlet hue = BLACK_KEYS.includes(nn) ? 0.5 + nn / 36 : nn / 36\n\t\t\tlet sat = attack ? 1 - attack : 0.5\n\t\t\tsat = 1 - sat * sat\n\t\t\tpp.stroke(hue, sat, 0.4)\n\t\t\tthis.drawArc(pp, rad, relTime, loopTime)\n\t\t}\n\t\tpp.colorMode(pp.RGB, 255)\n\t}\n\n\ttimeGlobalToLoop = (tt: number) => {\n\t\treturn (tt - sketch.downbeat) / this.loopLenMs()\n\t}\n\n\ttimeGlobalToLoopNorm = (tt: number) => {\n\t\tconst lt = this.timeGlobalToLoop(tt)\n\t\treturn lt - Math.floor(lt) // 0-1 from start to end of loop\n\t}\n\n\ttimeLoopToGlobal = (loopTime: number) => {\n\t\tconst loopLenMs = this.loopLenMs()\n\t\treturn sketch.downbeat + loopTime * loopLenMs\n\t}\n\n\ttimeLoopNormToGlobal = (tt: number, loopTime: number) => {\n\t\tconst loopLenMs = this.loopLenMs()\n\t\treturn this.timeLastLoopStartMs(tt) + loopTime * loopLenMs\n\t}\n\n\ttimeLastLoopStartMs = (tt: number) => {\n\t\tconst loopLenMs = this.loopLenMs()\n\t\tconst lt = this.timeGlobalToLoop(tt)\n\t\treturn sketch.downbeat + Math.floor(lt) * loopLenMs\n\t}\n\n\thitTest = (xx: number, yy: number) => {\n\t\tconst { radius } = this.opts\n\t\tif (xx < this.xx - radius || xx > this.xx + radius) {\n\t\t\treturn false\n\t\t}\n\t\tif (yy < this.yy - radius || yy > this.yy + radius) {\n\t\t\treturn false\n\t\t}\n\t\treturn true\n\t}\n}\n","import * as p5 from 'p5'\nimport { UserEvent } from './serverApi/serverApi'\nimport Sketch from './Sketch'\nimport {\n\tKEYCODE_BACKSPACE,\n\tKEYCODE_CONTROL,\n\tKEYCODE_DELETE,\n\tKEYCODE_SHIFT,\n\tKEYCODE_ENTER,\n\tKEYCODE_RETURN,\n} from './constants'\nimport { radBig, radSmall, Loop } from './Loop'\n\ntype LoopsOpts = {\n\tsketch: Sketch\n\trecOffset: number\n}\n\nexport class Loops {\n\tsketch: Sketch\n\tdial: Loop\n\tloops: Loop[] = []\n\tactiveLoop: Loop\n\tinputs: {\n\t\tloopLen?: any\n\t\tnewLoopBtn?: any\n\t} = {}\n\trecLock = false\n\thidden = false\n\thiddenDial = false\n\tloaded = false\n\n\tconstructor(opts: LoopsOpts) {\n\t\tthis.sketch = opts.sketch\n\t\tthis.dial = new Loop({\n\t\t\tbeats: this.dialBeats(opts.recOffset),\n\t\t\tradius: radBig,\n\t\t\tisDial: true,\n\t\t})\n\t\tthis.activeLoop = new Loop({ beats: 8, radius: radBig })\n\t}\n\n\tload = () => {\n\t\tconst { sketch } = this\n\t\tconst store = sketch.localStorage\n\t\tconst lidsStr = store.getItem('loops')\n\t\tconst defaultParams = { beats: 8, radius: radSmall, sketch }\n\t\tconst aid = store.getItem('activeLoop')\n\t\tlet activeLoop: Loop | null = null\n\t\tif (lidsStr && lidsStr !== '') {\n\t\t\tconst lids = JSON.parse(lidsStr)\n\t\t\tfor (const lid of lids) {\n\t\t\t\tconst loop = new Loop({ id: lid, ...defaultParams })\n\t\t\t\tif (loop.loaded) {\n\t\t\t\t\t// loop loaded successfully from local storage, add to loops\n\t\t\t\t\tloop.updateClientId(sketch.user.clientId)\n\t\t\t\t\tthis.loops.push(loop)\n\t\t\t\t\tif (lid === aid) {\n\t\t\t\t\t\tactiveLoop = loop\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (activeLoop) {\n\t\t\tthis.activeLoop = activeLoop\n\t\t\treturn activeLoop\n\t\t}\n\t\tthis.activeLoop = new Loop(defaultParams)\n\t\tthis.loops.push(this.activeLoop)\n\t\treturn this.activeLoop\n\t}\n\n\tsaveLoopRefs = () => {\n\t\tconst store = this.sketch.localStorage\n\t\tstore.setItem('activeLoop', this.activeLoop.id)\n\t\tstore.setItem('loops', JSON.stringify(this.loops.map(ll => ll.id)))\n\t}\n\n\tupdate = () => {\n\t\tif (!this.loaded) {\n\t\t\tthis.activeLoop = this.load()\n\t\t\tthis.loaded = true\n\t\t}\n\t\tthis.dial.update()\n\t\tthis.loops.forEach(ll => ll.update())\n\t}\n\n\tdraw = (pp: p5) => {\n\t\tconst { activeLoop, didSetup, hidden, hiddenDial } = this\n\t\tif (hidden) {\n\t\t\tif (didSetup) {\n\t\t\t\tthis.inputs.loopLen.remove()\n\t\t\t\tthis.inputs.newLoopBtn.remove()\n\t\t\t\tthis.didSetup = false\n\t\t\t}\n\t\t} else if (!didSetup) {\n\t\t\tthis.setupInputs(pp)\n\t\t}\n\t\tconst { loopLen, newLoopBtn } = this.inputs\n\n\t\t// Draw active loop\n\t\tlet rad = radBig\n\t\tlet yy = rad + 20\n\t\tlet xx = pp.width - 20\n\t\tif (!hidden) {\n\t\t\tactiveLoop.isActive = true\n\t\t\tactiveLoop.setRadius(rad)\n\t\t\tactiveLoop.isRecording = this.isRecording(pp)\n\t\t\txx -= rad + 20\n\t\t\tactiveLoop.draw(pp, xx, yy)\n\t\t\tpp.fill(210).stroke(0).strokeWeight(1)\n\t\t\tpp.textSize(14).textAlign(pp.CENTER, pp.TOP)\n\t\t\tpp.text(`Active loop: ${loopLen.value()} beats`, xx, yy + rad + 10)\n\t\t\tloopLen.position(xx - 60, yy + rad + 30)\n\t\t\tconst btnHalfwidth = Math.max(48, Math.floor(newLoopBtn.elt.offsetWidth / 2))\n\t\t\tnewLoopBtn.position(xx - btnHalfwidth, yy + rad + 60)\n\t\t\txx -= rad + 20\n\t\t}\n\n\t\tif (!hiddenDial) {\n\t\t\t// Draw metronome dial\n\t\t\trad = this.dial.opts.radius\n\t\t\txx -= rad + 20\n\t\t\tthis.dial.draw(pp, xx, yy)\n\t\t\tpp.fill(210).stroke(0).strokeWeight(1)\n\t\t\tpp.textSize(14).textAlign(pp.CENTER, pp.TOP)\n\t\t\tpp.text('Metronome', xx, yy + rad + 10)\n\t\t}\n\n\t\tif (hidden) {\n\t\t\treturn\n\t\t}\n\n\t\tyy = newLoopBtn.y + newLoopBtn.elt.offsetHeight + 20\n\n\t\tconst othersTop = yy\n\t\trad = radSmall\n\t\txx = pp.width - rad - 20\n\t\tfor (const ll of this.inactiveLoops()) {\n\t\t\tll.isActive = false\n\t\t\tll.setRadius(radSmall)\n\t\t\tyy += rad\n\t\t\tll.draw(pp, xx, yy)\n\t\t\tif (pp.keyIsDown(KEYCODE_SHIFT)) {\n\t\t\t\t// inform user they can click here to delete this loop\n\t\t\t\tpp.fill(50, 150).noStroke()\n\t\t\t\tpp.circle(xx, yy, rad * 2)\n\t\t\t\tpp.fill(200).textSize(12).textStyle(pp.NORMAL).textAlign(pp.CENTER, pp.CENTER)\n\t\t\t\tpp.text('Click to\\ndelete', xx, yy)\n\t\t\t}\n\t\t\tyy += rad + 20\n\t\t\tif (yy > pp.height - rad * 3) {\n\t\t\t\tyy = othersTop\n\t\t\t\txx -= rad * 2 + 20\n\t\t\t}\n\t\t}\n\t}\n\n\tdidSetup = false\n\tsetupInputs = (pp: p5) => {\n\t\tthis.didSetup = true\n\t\tthis.inputs.loopLen = pp.createSlider(1, 64, this.activeLoop.opts.beats) as any\n\t\tthis.inputs.newLoopBtn = pp.createButton('Add new loop') as any\n\t\tconst { loopLen, newLoopBtn } = this.inputs\n\t\tloopLen.size(120)\n\t\tloopLen.input(() => {\n\t\t\tthis.activeLoop.opts.beats = loopLen.value()\n\t\t\tthis.activeLoop.save()\n\t\t})\n\t\tnewLoopBtn.mousePressed(this.addLoop)\n\t}\n\n\tdialBeats = (recOffset: number) => 4 * Math.ceil((recOffset + 1) / 4)\n\n\tupdateRecOffset = (off: number) => {\n\t\tthis.dial.opts.beats = this.dialBeats(off)\n\t}\n\n\tloopUserEvent = (evt: UserEvent) => {\n\t\tthis.activeLoop.loopUserEvent(evt)\n\t}\n\n\tclearAll = () => {\n\t\tthis.loops.forEach(ll => ll.clearAllEvents())\n\t}\n\n\tclearActiveLoop = () => {\n\t\tthis.activeLoop.clearAllEvents()\n\t}\n\n\tupdateClientId = (clientId: number) => {\n\t\tthis.loops.forEach(ll => ll.updateClientId(clientId))\n\t}\n\n\ttoggleActiveLoopMute = () => {\n\t\tconst al = this.activeLoop\n\t\tal.isMuted = !al.isMuted\n\t\tal.save()\n\t}\n\n\tmuteAll = () => {\n\t\tfor (const ll of this.loops) {\n\t\t\tif (!ll.isMuted) {\n\t\t\t\tll.isMuted = true\n\t\t\t\tll.save()\n\t\t\t}\n\t\t}\n\t}\n\n\ttoggleHide = () => (this.hidden = !this.hidden)\n\ttoggleHideText = () => (this.hidden ? 'Show Loops' : 'Hide Loops')\n\ttoggleHideDial = () => (this.hiddenDial = !this.hiddenDial)\n\ttoggleHideDialText = () => (this.hiddenDial ? 'Show Metronome' : 'Hide Metronome')\n\n\tstopRecording = () => {\n\t\tthis.activeLoop.sanitizeEvents()\n\t\tthis.activeLoop.save()\n\t}\n\n\taddLoop = () => {\n\t\tthis.activeLoop = new Loop({\n\t\t\tbeats: this.inputs.loopLen.value(),\n\t\t\tradius: radBig,\n\t\t})\n\t\tthis.loops.push(this.activeLoop)\n\t\tthis.saveLoopRefs()\n\t}\n\n\tinactiveLoops = () => this.loops.filter(ll => ll !== this.activeLoop)\n\n\tmousePressed = (pp: p5) => {\n\t\tlet didHit = false\n\t\tfor (const loop of this.inactiveLoops()) {\n\t\t\tif (loop.hitTest(pp.mouseX, pp.mouseY)) {\n\t\t\t\tdidHit = true\n\t\t\t\tif (pp.keyIsDown(KEYCODE_SHIFT)) {\n\t\t\t\t\t// Remove loop\n\t\t\t\t\tloop.remove()\n\t\t\t\t\tthis.loops = this.loops.filter(ll => ll !== loop)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tthis.activateLoop(loop)\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (didHit) {\n\t\t\tthis.saveLoopRefs()\n\t\t}\n\t}\n\n\tactivateLoop = (loop: Loop) => {\n\t\tthis.inputs.loopLen.value(loop.opts.beats)\n\t\tthis.activeLoop.isActive = false\n\t\tthis.activeLoop = loop\n\t\tloop.isActive = true\n\t}\n\n\tkeyPressed = (evt: p5) => {\n\t\tif (evt.keyCode === KEYCODE_BACKSPACE || evt.keyCode === KEYCODE_DELETE) {\n\t\t\t// if (evt.keyIsDown(KEYCODE_SHIFT)) {\n\t\t\t//  // Clear all loops if Shift is being pressed\n\t\t\t// \tthis.clearAll()\n\t\t\t// } else {\n\t\t\t// Clear events from active loop\n\t\t\tthis.clearActiveLoop()\n\t\t\t// }\n\t\t\treturn\n\t\t}\n\t\tif (evt.keyCode === KEYCODE_ENTER || evt.keyCode === KEYCODE_RETURN) {\n\t\t\tthis.recLock = !this.recLock\n\t\t\tif (!this.recLock) {\n\t\t\t\tthis.stopRecording()\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tswitch (evt.key) {\n\t\t\tcase '\\\\':\n\t\t\tcase '|':\n\t\t\tcase 'm':\n\t\t\t\tif (evt.keyIsDown(KEYCODE_CONTROL)) {\n\t\t\t\t\tthis.muteAll()\n\t\t\t\t} else {\n\t\t\t\t\tthis.toggleActiveLoopMute()\n\t\t\t\t}\n\t\t\t\treturn\n\t\t\tcase '[':\n\t\t\tcase ',':\n\t\t\t\treturn this.activatePrev()\n\t\t\tcase ']':\n\t\t\tcase '.':\n\t\t\t\treturn this.activateNext()\n\t\t}\n\t}\n\n\tactivatePrev = () => {\n\t\tconst { loops } = this\n\t\tfor (let ii = 0; ii < loops.length; ii++) {\n\t\t\tif (loops[ii] === this.activeLoop) {\n\t\t\t\tif (ii === 0) {\n\t\t\t\t\tthis.activateLoop(loops[loops.length - 1])\n\t\t\t\t} else {\n\t\t\t\t\tthis.activateLoop(loops[ii - 1])\n\t\t\t\t}\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tactivateNext = () => {\n\t\tconst { loops } = this\n\t\tfor (let ii = 0; ii < loops.length; ii++) {\n\t\t\tif (loops[ii] === this.activeLoop) {\n\t\t\t\tif (ii === loops.length - 1) {\n\t\t\t\t\tthis.activateLoop(loops[0])\n\t\t\t\t} else {\n\t\t\t\t\tthis.activateLoop(loops[ii + 1])\n\t\t\t\t}\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tkeyReleased = (evt: p5) => {\n\t\tif (evt.keyCode === KEYCODE_SHIFT) {\n\t\t\t// Stopped recording to loop, cleanup any dangling notes\n\t\t\tthis.stopRecording()\n\t\t}\n\t}\n\n\tisRecording = (pp?: p5): boolean => {\n\t\treturn this.recLock || (!!pp && pp.keyIsDown(KEYCODE_SHIFT))\n\t}\n}\n","import * as p5 from 'p5'\nimport * as Tone from 'tone'\nimport { engine3d, Avatar, BlackHoleObj, Ground, Vec } from 'engine3d'\nimport { KEYCODE_ESC } from './constants'\nimport WSClient, { DONT_REOPEN } from './serverApi/WSClient'\nimport { ClockOpts, NOTE_METRONOME_BPM_CHANGED, NOTE_METRONOME_DOWN } from './serverApi/serverClock'\nimport {\n\tuserEventReq,\n\tuserUpdateReq,\n\tuserXformReq,\n\tuserRequestXformsReq,\n\tUser,\n\tUserEvent,\n\tUserForce,\n\tUserXform,\n} from './serverApi/serverApi'\nimport MIDI, { MidiEvent, MidiEventCC, MidiEventNote, MidiEventPitchbend } from './MIDI'\nimport { Instrument } from './Instrument'\nimport { InstControls } from './InstControls'\nimport { BlackHole, Dancer, EightOhEight, Hoover, Metronome, Piano, PolySynth } from './instruments'\nimport { EasyCam } from 'vendor/p5.easycam.js'\nimport { SketchInputs } from './SketchInputs'\nimport { SketchAudioKeys } from './SketchAudioKeys'\nimport { Loops } from './Loops'\n\ntype Instruments = { [key: string]: Instrument }\n\nexport const worldScale = 1000\nconst newAvatarPos = (clientId: number) => {\n\tif (clientId === 0) {\n\t\t// server avatar goes in the corner\n\t\treturn new Vec(worldScale, 31, worldScale)\n\t}\n\tconst rr = () => Math.random() - 0.5\n\treturn new Vec((rr() * worldScale) / 2, 31, (rr() * worldScale) / 2)\n}\nfunction nearestPowerOf2(n: number) {\n\t// via https://stackoverflow.com/questions/26965171/fast-nearest-power-of-2-in-javascript\n\treturn 1 << (31 - Math.clz32(n))\n}\n\nexport default class Sketch {\n\twidth = 0\n\theight = 0\n\tstarted = false\n\tsyncing = true\n\tdownbeat = Tone.now() // Tone time of the first downbeat\n\ttransportStarted = false\n\t_bpm = 95\n\t_bpmNext = 95\n\tbgCol = {\n\t\thue: 0.5,\n\t\tsat: 0,\n\t\tlgt: 0.2,\n\t}\n\n\tlocalStorage: Storage\n\tws: WSClient\n\tmidi: MIDI\n\taudioKeys: SketchAudioKeys\n\tinstruments: Instruments\n\tinstSliders = new InstControls()\n\tinputs: SketchInputs\n\tloops: Loops\n\n\tuser: User = {\n\t\tclientId: 0,\n\t\tname: '',\n\t\tinstrument: 'dancer',\n\t\tinputDevice: 'keyboard',\n\t\toffset: 1,\n\t}\n\tusers: User[] = []\n\tavatar: Avatar\n\tavatars: Avatar[] = []\n\n\tpp?: p5 // Main canvas, gets WebGL graphics + 2D elements (loops, labels, etc)\n\tpg?: p5.Graphics // WebGL graphics context for 3D virtual space\n\tbackbuffer?: p5.Graphics // A graphics buffer for the previously rendered frame\n\tcam?: EasyCam\n\tground = new Ground({ pos: new Vec(0, -1, 0), scale: new Vec(worldScale) })\n\tblackHole = new BlackHoleObj()\n\n\tconstructor(global: any) {\n\t\tconsole.log('[Sketch #ctor]')\n\t\tthis.localStorage = global.localStorage\n\t\tconst didLoad = this.loadFromStorage()\n\t\tthis.inputs = new SketchInputs(didLoad)\n\t\tthis.loops = new Loops({\n\t\t\tsketch: this,\n\t\t\trecOffset: this.user.offset,\n\t\t})\n\t\tthis.avatar = new Avatar({\n\t\t\tuser: this.user,\n\t\t\tpos: newAvatarPos(1),\n\t\t\tscale: new Vec(30),\n\t\t\tphys: { worldScale },\n\t\t\tonForce: this.sendUserXform,\n\t\t})\n\t\tthis.ws = new WSClient(window, {\n\t\t\tclock: {\n\t\t\t\tonSynced: () => {\n\t\t\t\t\tthis.syncing = false\n\t\t\t\t},\n\t\t\t},\n\t\t\tonClientId: (clientId: number) => {\n\t\t\t\tthis.transportStarted = false\n\t\t\t\tthis.user.clientId = clientId\n\t\t\t\tthis.inputs.setupInputsUser(clientId)\n\t\t\t\tthis.loops.updateClientId(clientId)\n\t\t\t\tthis.sendUserUpdate()\n\t\t\t\tthis.sendUserXform(this.avatar.getUserXform())\n\t\t\t\tthis.sendUserRequestXforms()\n\t\t\t},\n\t\t\tonClockUpdate: (clkOpts: ClockOpts) => {\n\t\t\t\tif (clkOpts.clientId === 0) {\n\t\t\t\t\t// Clock update came from server, use to set BPM on next downbeat\n\t\t\t\t\tthis._bpmNext = clkOpts.bpm\n\t\t\t\t} else {\n\t\t\t\t\tthis.inputs.onClockUpdate(clkOpts)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonUsers: this.onUsers,\n\t\t\tonUserEvent: this.onUserEvent,\n\t\t\tonUserForce: this.onUserForce,\n\t\t\tonUserXform: this.onUserXform,\n\t\t\tonUserRequestXforms: () => this.sendUserXform(this.avatar.getUserXform()),\n\t\t})\n\t\tthis.instruments = {\n\t\t\tdancer: new Dancer(),\n\t\t\tpolysquare: new PolySynth(),\n\t\t\tblackHole: new BlackHole(),\n\t\t\thoover: new Hoover(),\n\t\t\teightOhEight: new EightOhEight(this),\n\t\t\tpiano: new Piano(),\n\t\t\tmetronome: new Metronome(this),\n\t\t}\n\t\tthis.midi = new MIDI({\n\t\t\tonEnabled: this.inputs.setupInputsMidi,\n\t\t\tonMessage: this.sendUserEvent,\n\t\t})\n\t\tthis.audioKeys = new SketchAudioKeys(this)\n\t\twindow.Tone = Tone\n\t\twindow.me = this\n\t}\n\n\tloadFromStorage = () => {\n\t\tconst ustr = this.localStorage.getItem('user')\n\t\tif (!ustr || ustr === ``) {\n\t\t\tconsole.error('No stored user')\n\t\t\treturn false\n\t\t}\n\t\tthis.user = JSON.parse(ustr)\n\t\treturn true\n\t}\n\n\tdestroy = () => {\n\t\tthis.ws.conn.close(DONT_REOPEN, 'sketch destroyed')\n\t}\n\n\ttimeGlobalToTone = (globalTime: number) => {\n\t\tconst rawCtx = Tone.context.rawContext as any\n\t\tconst { contextTime, performanceTime } = rawCtx._nativeAudioContext.getOutputTimestamp()\n\t\tconst lt = this.ws.clock.toLocal(globalTime)\n\t\tconst delta = lt - performanceTime\n\t\tconst toneTime = contextTime + delta / 1000\n\t\treturn toneTime\n\t}\n\n\ttimeToneToGlobal = (toneTime: number) => {\n\t\tconst rawCtx = Tone.context.rawContext as any\n\t\tconst { contextTime, performanceTime } = rawCtx._nativeAudioContext.getOutputTimestamp()\n\t\tconst delta = toneTime - contextTime\n\t\tconst pt = performanceTime + delta * 1000\n\t\tconst globalTime = this.ws.clock.toGlobal(pt)\n\t\treturn globalTime\n\t}\n\n\tsetSize = (width: number, height: number) => {\n\t\tthis.width = width\n\t\tthis.height = height\n\t}\n\n\tshaderBlackHole?: p5.Shader\n\tsketch = (pp: p5) => {\n\t\tthis.pp = pp\n\t\tpp.pixelDensity(1)\n\t\tpp.preload = () => {\n\t\t\tthis.shaderBlackHole = pp.loadShader('/shaders/simple.vert', '/shaders/blackHole.frag')\n\t\t}\n\t\tpp.setup = () => this.setup(pp)\n\t\tpp.draw = () => this.draw(pp)\n\t\tpp.mousePressed = () => this.mousePressed(pp)\n\t\tpp.mouseReleased = () => this.mouseReleased(pp)\n\t\tpp.keyPressed = () => this.keyPressed(pp)\n\t\tpp.keyReleased = () => this.keyReleased(pp)\n\t}\n\n\tsetup = (pp: p5) => {\n\t\tconsole.log(`[Sketch #setup] ${this.width} x ${this.height}`)\n\t\tpp.createCanvas(this.width, this.height)\n\t\tthis.pg = pp.createGraphics(this.width, this.height, 'webgl')\n\t\tthis.pg.textureWrap(pp.REPEAT) // applies to textures rendered to pg (i.e. backbuffer)\n\t\tconst bbsize = nearestPowerOf2(this.width) // backbuffer size is ^2 so p5 doesn't force mode to CLAMP\n\t\tthis.backbuffer = pp.createGraphics(bbsize, bbsize, pp.WEBGL)\n\t\tthis.cam = new EasyCam((this.pg as any)._renderer, { distance: 100 })\n\t\tthis.cam.setDistanceMin(40)\n\t\tthis.cam.setDistanceMax(3000)\n\t\tthis.cam.rotateX(-Math.PI / 8)\n\t\tthis.cam.attachMouseListeners((pp as any)._renderer)\n\t\tthis.cam.setViewport([0, 0, this.width, this.height])\n\t\tthis.cam.rotateZ(Math.PI)\n\t\tthis.avatar.addFollowCam(this.cam)\n\t\tthis.inputs.setup(pp)\n\t}\n\n\tdraw = (pp: p5) => {\n\t\tthis.instSliders.update(pp)\n\t\tthis.loops.update()\n\t\tengine3d.update()\n\t\tpp.colorMode(pp.HSL, 1)\n\t\t\t.background(this.bgCol.hue, this.bgCol.sat, this.bgCol.lgt, 0.5)\n\t\t\t.colorMode(pp.RGB, 255)\n\t\tconst { pg } = this\n\t\tif (pg) {\n\t\t\tpg.perspective(Math.PI / 3, pg.width / pg.height, 1, 10000)\n\t\t\tpg.clear()\n\t\t\tengine3d.draw(pg)\n\t\t\tpp.image(pg, 0, 0)\n\t\t\tconst { backbuffer } = this\n\t\t\tif (backbuffer) {\n\t\t\t\tconst { width, height } = backbuffer\n\t\t\t\tbackbuffer.image(pg, -width / 2, -height / 2, width, height)\n\t\t\t}\n\t\t\tif (!this.inputs.help) {\n\t\t\t\tengine3d.draw2D(pp, pg)\n\t\t\t} // else: help being displayed, so don't draw2D because the avatar labels are distracting\n\t\t}\n\t\tthis.inputs.draw(pp)\n\t\tif (!this.inputs.hidden) {\n\t\t\tthis.instSliders.draw(pp)\n\t\t}\n\t\tthis.loops.draw(pp)\n\t\tif (this.inputs.help) {\n\t\t\treturn\n\t\t}\n\t\tlet loading = false\n\t\t// set loading to true if any instruments haven't finished loading\n\t\tfor (const instName in this.instruments) {\n\t\t\tif (!this.instruments[instName].loaded()) {\n\t\t\t\tloading = true\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (loading) {\n\t\t\tthis.drawMessage(pp, 'Loading instruments...')\n\t\t} else if (this.ws.ready()) {\n\t\t\tif (this.syncing) {\n\t\t\t\tthis.drawMessage(pp, 'Syncing clock with server')\n\t\t\t} else if (!this.transportStarted) {\n\t\t\t\tthis.drawMessage(pp, 'Starting on next downbeat')\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawMessage = (pp: p5, msg: string) => {\n\t\tpp.fill(200).stroke(0)\n\t\tpp.strokeWeight(2)\n\t\tpp.textSize(20)\n\t\tpp.textAlign(pp.CENTER, pp.CENTER)\n\t\tpp.textStyle(pp.BOLDITALIC)\n\t\tpp.text(msg, pp.width / 2, pp.height / 2)\n\t}\n\n\tmousePressed = (pp: p5) => {\n\t\tif (!this.started) {\n\t\t\tthis.started = true\n\t\t\tTone.start()\n\t\t\tconsole.log('[Sketch #mousePressed] Started Tone')\n\t\t}\n\t\tif (this.instSliders.mousePressed(pp)) {\n\t\t\treturn\n\t\t}\n\t\tthis.loops.mousePressed(pp)\n\t}\n\tmouseReleased = (pp: p5) => {\n\t\tthis.instSliders.mouseReleased(pp)\n\t}\n\n\tkeyboardInputDisabled = () => {\n\t\treturn this.inputs.isFocused() // Ignore keyboard if inputs are focused\n\t}\n\tkeyPressed = (evt: p5) => {\n\t\tif (this.keyboardInputDisabled()) {\n\t\t\treturn\n\t\t}\n\t\tif (evt.keyIsDown(KEYCODE_ESC)) {\n\t\t\tthis.inputs.toggleHelp()\n\t\t\treturn\n\t\t}\n\t\tthis.avatar.keyPressed(evt)\n\t\tthis.loops.keyPressed(evt)\n\t\tthis.inputs.keyPressed(evt)\n\t}\n\tkeyReleased = (evt: p5) => {\n\t\tif (this.keyboardInputDisabled()) {\n\t\t\treturn\n\t\t}\n\t\tthis.avatar.keyReleased(evt)\n\t\tthis.loops.keyReleased(evt)\n\t}\n\n\tupdateUser = (uu: Partial<User>, sendUpdate: boolean = true) => {\n\t\tthis.user = Object.assign(this.user, uu)\n\t\tthis.localStorage.setItem('user', JSON.stringify(this.user))\n\t\tif (sendUpdate) {\n\t\t\tthis.sendUserUpdate()\n\t\t}\n\t\tif (uu.instrument) {\n\t\t\tconst inst = this.instruments[uu.instrument]\n\t\t\tthis.instSliders = inst.ctrls\n\t\t}\n\t}\n\n\t// getUser returns the user matching clientId,\n\t// or this.user if no matching user is found\n\tgetUser = (clientId: number): User => {\n\t\tif (clientId === this.user.clientId) {\n\t\t\treturn this.user\n\t\t}\n\t\tfor (const uu of this.users) {\n\t\t\tif (clientId === uu.clientId) {\n\t\t\t\treturn uu\n\t\t\t}\n\t\t}\n\t\treturn this.user\n\t}\n\n\tgetAvatar = (clientId: number): Avatar | null => {\n\t\tif (clientId === this.user.clientId) {\n\t\t\treturn this.avatar\n\t\t}\n\t\tfor (const aa of this.avatars) {\n\t\t\tif (clientId === aa.user.clientId) {\n\t\t\t\treturn aa\n\t\t\t}\n\t\t}\n\t\treturn null\n\t}\n\tgetAvatarSafe = (clientId: number): Avatar => {\n\t\tconst aa = this.getAvatar(clientId)\n\t\tif (!aa) {\n\t\t\tconsole.warn(\"[Sketch #getAvatarSafe] Can't find avatar for client\", clientId)\n\t\t\treturn this.avatar\n\t\t}\n\t\treturn aa\n\t}\n\n\tsendUserUpdate = () => {\n\t\tconst { conn, ready } = this.ws\n\t\tif (!ready()) {\n\t\t\tconsole.warn(\"[Sketch #sendUserUpdate] Can't send user update, websocket connection is not open\")\n\t\t\treturn\n\t\t}\n\t\tconn.send(userUpdateReq(this.user))\n\t}\n\n\tsendUserXform = (data: UserXform) => {\n\t\tconst { conn, ready } = this.ws\n\t\tif (!ready()) {\n\t\t\tconsole.warn(\"[Sketch #sendUserXform] Can't send user xform, websocket connection is not open\")\n\t\t\treturn\n\t\t}\n\t\tconn.send(userXformReq(data))\n\t}\n\n\tsendUserRequestXforms = () => {\n\t\tconst { conn, ready } = this.ws\n\t\tif (!ready()) {\n\t\t\tconsole.warn(\n\t\t\t\t\"[Sketch #sendUserRequestXforms] Can't request other users' xforms, websocket connection is not open\",\n\t\t\t)\n\t\t\treturn\n\t\t}\n\t\tconn.send(userRequestXformsReq())\n\t}\n\n\tsendUserEvent = (inputName: string, _eventName: string, evt: MidiEvent) => {\n\t\tlet instName = this.user.instrument\n\t\tif (evt.controller) {\n\t\t\t// Hardcode some CC events to control instrument volumes\n\t\t\tswitch (evt.controller.number) {\n\t\t\t\tcase 79: // master volume (local only)\n\t\t\t\t\tTone.Destination.volume.value = (evt.value - 1) * 50\n\t\t\t\t// fallthrough\n\t\t\t\tcase 19: // master mute (local only)\n\t\t\t\t\tTone.Destination.mute = !evt.value\n\t\t\t\t\treturn\n\t\t\t\tcase 117: // record lock (local only)\n\t\t\t\t\tif (evt.value) {\n\t\t\t\t\t\tthis.loops.recLock = !this.loops.recLock\n\t\t\t\t\t}\n\t\t\t\t\treturn\n\t\t\t\tcase 18:\n\t\t\t\tcase 78:\n\t\t\t\t\tinstName = 'metronome'\n\t\t\t\t\tbreak\n\t\t\t\tcase 17:\n\t\t\t\tcase 77:\n\t\t\t\t\tinstName = 'synth'\n\t\t\t\t\tbreak\n\t\t\t\tcase 16:\n\t\t\t\tcase 76:\n\t\t\t\t\tinstName = 'eightOhEight'\n\t\t\t\t\tbreak\n\t\t\t\tcase 15:\n\t\t\t\tcase 75:\n\t\t\t\t\tinstName = 'piano'\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\t// Commented out for easier deving -- MIDI input always enabled\n\t\t\t\t\t// if (inputName !== this.user.inputDevice) {\n\t\t\t\t\t// \treturn // not a whitelisted CC and not the active device, so don't send\n\t\t\t\t\t// }\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Commented out for easier deving -- MIDI input always enabled\n\t\t\t// } else {\n\t\t\t// \tif (inputName !== this.user.inputDevice) {\n\t\t\t// \t\treturn\n\t\t\t// \t}\n\t\t}\n\t\tconst off = this.offsetMs()\n\t\tconst uevt = {\n\t\t\tclientId: this.user.clientId,\n\t\t\tinstrument: instName,\n\t\t\tmidiEvent: evt,\n\t\t\ttimestamp: this.nowMs() + off,\n\t\t}\n\t\tif (this.loops.isRecording(this.pp)) {\n\t\t\tthis.loops.loopUserEvent(uevt)\n\t\t}\n\t\tthis._sendUserEvent(uevt)\n\t}\n\n\t_sendUserEvent = (uevt: UserEvent) => {\n\t\tconst { conn, ready } = this.ws\n\t\tif (!ready() || !this.transportStarted) {\n\t\t\t// websocket connection isn't ready, handle event locally\n\t\t\tthis.onUserEvent(uevt)\n\t\t\treturn\n\t\t}\n\t\tconn.send(userEventReq(uevt))\n\t}\n\n\tonUserEvent = (evt: UserEvent) => {\n\t\tconst { clientId, instrument, midiEvent, timestamp } = evt\n\t\tconst { data, channel, kind } = midiEvent\n\t\tconst inst = this.instruments[instrument]\n\t\tif (!inst) {\n\t\t\tconsole.error('[Sketch #onUserEvent] Unable to find instrument', instrument)\n\t\t\treturn\n\t\t}\n\t\tif (!inst.loaded()) {\n\t\t\treturn // don't send events if instrument hasn't finished loading\n\t\t}\n\t\tconst isMetronome = instrument === 'metronome'\n\t\tif (isMetronome && this.syncing) {\n\t\t\treturn // don't handle metronome events until clock has synced\n\t\t}\n\t\tif (!isMetronome && !this.transportStarted) {\n\t\t\treturn // don't handle non-metronome events until the downbeat has been set\n\t\t}\n\t\tconst tt = this.timeGlobalToTone(timestamp)\n\t\tif (tt < 0) {\n\t\t\treturn // Negative tone time, probably just\n\t\t}\n\t\tif (tt - Tone.immediate() < -1) {\n\t\t\tconsole.log(`[Sketch #onUserEvent] Received event ${Tone.immediate() - tt} seconds late`)\n\t\t\treturn\n\t\t}\n\t\tconst avatar = this.getAvatarSafe(clientId)\n\t\tswitch (kind) {\n\t\t\tcase 'noteon': {\n\t\t\t\tconst nn = midiEvent as MidiEventNote\n\t\t\t\tinst.noteon(avatar, tt, nn)\n\t\t\t\tif (isMetronome) {\n\t\t\t\t\tthis.onMetronome(tt, nn.note)\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'noteoff': {\n\t\t\t\tconst nn = midiEvent as MidiEventNote\n\t\t\t\tinst.noteoff(avatar, tt, nn)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'controlchange': {\n\t\t\t\tconst cc = midiEvent as MidiEventCC\n\t\t\t\tinst.controlchange(avatar, tt, cc)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'pitchbend': {\n\t\t\t\tconst pb = midiEvent as MidiEventPitchbend\n\t\t\t\tinst.pitchbend(avatar, tt, pb)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`[Sketch #onUserEvent] Unhandled MIDI event on channel ${channel}:`,\n\t\t\t\t\tkind,\n\t\t\t\t\tdata,\n\t\t\t\t\tevt,\n\t\t\t\t)\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\tonMetronome = (time: number, note: number) => {\n\t\tif (!this.transportStarted && note === NOTE_METRONOME_DOWN) {\n\t\t\tconsole.log(`[Sketch #onUserEvent] Downbeat synced with server. BPM:`, this._bpmNext)\n\t\t\tthis.transportStarted = true\n\t\t\tthis.inputs.setupInputsBPM()\n\t\t\tthis.setNewDownbeat(time)\n\t\t\treturn\n\t\t}\n\t\tif (note !== NOTE_METRONOME_BPM_CHANGED) {\n\t\t\treturn\n\t\t}\n\t\tconsole.log(\n\t\t\t`[Sketch #onUserEvent] Received new downbeat from server, will update clock in ${(\n\t\t\t\ttime - Tone.immediate()\n\t\t\t).toFixed(1)} seconds`,\n\t\t)\n\t\tTone.Draw.schedule(() => {\n\t\t\tconsole.log(`[Sketch #onUserEvent] BPM updated:`, this._bpmNext)\n\t\t\tthis.setNewDownbeat(time)\n\t\t}, time)\n\t}\n\n\tsetNewDownbeat = (toneTime: number) => {\n\t\tthis.downbeat = this.timeToneToGlobal(toneTime)\n\t\tthis._bpm = this._bpmNext\n\t\tthis.inputs.onClockUpdate({ bpm: this._bpm, clientId: 0 })\n\t\tTone.Transport.bpm.value = this._bpm\n\t}\n\n\tonUsers = (users: User[]) => {\n\t\tfor (const user of users) {\n\t\t\tif (user.clientId === this.user.clientId) {\n\t\t\t\tcontinue // skip local user\n\t\t\t}\n\t\t\tconst prevs = this.users.filter(uu => uu.clientId === user.clientId)\n\t\t\tif (!prevs.length) {\n\t\t\t\tthis.users.push(user)\n\t\t\t\tthis.avatars.push(\n\t\t\t\t\tnew Avatar({\n\t\t\t\t\t\tuser: user,\n\t\t\t\t\t\tpos: newAvatarPos(user.clientId),\n\t\t\t\t\t\tscale: new Vec(20),\n\t\t\t\t\t\tphys: { worldScale },\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif (prevs.length > 1) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`[Sketch #onUsers] Found more than one user for clientId #${user.clientId}`,\n\t\t\t\t\tuser.clientId,\n\t\t\t\t\tuser.name,\n\t\t\t\t)\n\t\t\t}\n\t\t\t// Update pre-existing user\n\t\t\tconst prev = prevs[0]\n\t\t\tObject.assign(prev, user)\n\t\t}\n\t\tfor (const user of this.users) {\n\t\t\tif (users.some(uu => uu.clientId === user.clientId)) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\t// user dropped, remove user and its avatar\n\t\t\tconst aa = this.getAvatar(user.clientId)\n\t\t\tif (aa) {\n\t\t\t\tengine3d.rmObj(aa)\n\t\t\t} else {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`[Sketch #onUsers] Unable to find avatar for dropped user #${user.clientId}`,\n\t\t\t\t\tuser.name,\n\t\t\t\t)\n\t\t\t}\n\t\t\tthis.users = this.users.filter(uu => uu.clientId !== user.clientId)\n\t\t\tthis.avatars = this.avatars.filter(aa => aa.user.clientId !== user.clientId)\n\t\t}\n\t}\n\n\tonUserForce = (evt: UserForce) => {\n\t\tconst { clientId } = evt\n\t\tconst avatar = this.getAvatar(clientId)\n\t\tif (!avatar) {\n\t\t\tconsole.warn('[Sketch #onUserForce] No avatar for user', clientId)\n\t\t\treturn\n\t\t}\n\t\tavatar.setUserForce(evt)\n\t}\n\n\tonUserXform = (evt: UserXform) => {\n\t\tconst { clientId } = evt\n\t\tconst avatar = this.getAvatar(clientId)\n\t\tif (!avatar) {\n\t\t\tconsole.warn('[Sketch #onUserXform] No avatar for user', clientId)\n\t\t\treturn\n\t\t}\n\t\tavatar.setUserXform(evt)\n\t}\n\n\tbpm = () => {\n\t\tif (!this.transportStarted) {\n\t\t\treturn this.inputs.bpm()\n\t\t}\n\t\treturn this._bpm\n\t}\n\tbps = () => this.bpm() / 60\n\tbeatMs = () => 1000.0 / this.bps()\n\tbeatSec = () => 1.0 / this.bps()\n\toffsetMs = () => this.beatMs() * this.user.offset\n\toffsetSec = () => this.beatSec() * this.user.offset\n\tnowMs = () => this.ws.now()\n}\n\nexport const sketch = new Sketch(window)\n","import React, { useEffect, useRef } from 'react'\nimport { sketch } from './Sketch'\n\nconst VideoOutput: React.FC = () => {\n\tconst ref = useRef<HTMLDivElement>(null)\n\tconst msg = useRef<string>(`Loading`)\n\tuseEffect(() => {\n\t\tif (!ref.current) {\n\t\t\tmsg.current = `Internal component error`\n\t\t\tconsole.warn(`[VideoOutput #useEffect] Can't find component reference`)\n\t\t\treturn\n\t\t}\n\t\tconst elem = ref.current as HTMLDivElement\n\t\tif (elem.childNodes[0]) {\n\t\t\telem.removeChild(elem.childNodes[0]) // remove previous sketch\n\t\t}\n\t\tconst { clientWidth, clientHeight } = elem\n\t\tsketch.setSize(clientWidth, clientHeight)\n\t\tconst canvas = new window.p5(sketch.sketch, elem)\n\t\treturn () => {\n\t\t\tsketch.destroy()\n\t\t\tcanvas.remove()\n\t\t\tconsole.log('[VideoOutput #useEffect.return]')\n\t\t}\n\t})\n\treturn (\n\t\t<div\n\t\t\tref={ref}\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflex: 1,\n\t\t\t\talignItems: 'center',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\tcolor: 'white',\n\t\t\t}}\n\t\t>\n\t\t\t{msg.current}\n\t\t</div>\n\t)\n}\n\nexport default VideoOutput\n","import React from 'react'\nimport VideoOutput from './VideoOutput'\n\nimport './App.css'\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<div\n\t\t\tclassName='App'\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\tposition: 'absolute',\n\t\t\t\tbackgroundColor: '#383838',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\tbottom: 0,\n\t\t\t}}\n\t\t>\n\t\t\t<VideoOutput />\n\t\t</div>\n\t)\n}\n\nexport default App\n"],"sourceRoot":""}